<?php
/* Driver template for the PHP_PC_Stmt_rGenerator parser generator. (PHP port of LEMON)
*/

/**
 * This can be used to store both the string representation of
 * a token, and any useful meta-data associated with the token.
 *
 * meta-data should be stored as an array
 */
class PC_Stmt_yyToken implements ArrayAccess
{
    public $string = '';
    public $metadata = array();

    function __construct($s, $m = array())
    {
        if ($s instanceof PC_Stmt_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string) $s;
            if ($m instanceof PC_Stmt_yyToken) {
                $this->metadata = $m->metadata;
            } elseif (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    function __toString()
    {
        return $this->string;
    }

    function offsetExists($offset)
    {
        return isset($this->metadata[$offset]);
    }

    function offsetGet($offset)
    {
        return $this->metadata[$offset];
    }

    function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof PC_Stmt_yyToken) ?
                    $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);
                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof PC_Stmt_yyToken) {
            if ($value->metadata) {
                $this->metadata[$offset] = $value->metadata;
            }
        } elseif ($value) {
            $this->metadata[$offset] = $value;
        }
    }

    function offsetUnset($offset)
    {
        unset($this->metadata[$offset]);
    }
}

/** The following structure represents a single element of the
 * parser's stack.  Information stored includes:
 *
 *   +  The state number for the parser at this level of the stack.
 *
 *   +  The value of the token stored at this level of the stack.
 *      (In other words, the "major" token.)
 *
 *   +  The semantic value stored at this level of the stack.  This is
 *      the information used by the action routines in the grammar.
 *      It is sometimes called the "minor" token.
 */
class PC_Stmt_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
};

// code external to the class is included here

// declare_class is output here
#line 2 "src/engine/stmtparser.y"
class PC_Engine_StmtParser#line 102 "src/engine/stmtparser.php"
{
/* First off, code is included which follows the "include_class" declaration
** in the input file. */
#line 13 "src/engine/stmtparser.y"

		// current state, i.e. the function, class and variables in scope
		private $state;
		
		public $transTable = array();

    function __construct($state)
    {
				$this->state = $state;
				if(!count($this->transTable))
				{
					$start = 240; // start nice and low to be sure
					while(token_name($start) == 'UNKNOWN')
						$start++;
					$hash = array_flip(self::$yyTokenName);
					$map = array(
						ord(',') => self::COMMA,
						ord('=') => self::EQUALS,
						ord('?') => self::QUESTION,
						ord(':') => self::COLON,
						ord('|') => self::BAR,
						ord('^') => self::CARAT,
						ord('&') => self::AMPERSAND,
						ord('<') => self::LESSTHAN,
						ord('>') => self::GREATERTHAN,
						ord('+') => self::PLUS,
						ord('-') => self::MINUS,
						ord('.') => self::DOT,
						ord('*') => self::TIMES,
						ord('/') => self::DIVIDE,
						ord('%') => self::PERCENT,
						ord('!') => self::EXCLAM,
						ord('~') => self::TILDE,
						ord('@') => self::AT,
						ord('[') => self::LBRACKET,
						ord('(') => self::LPAREN,
						ord(')') => self::RPAREN,
						ord(';') => self::SEMI,
						ord('{') => self::LCURLY,
						ord('}') => self::RCURLY,
						ord('`') => self::BACKQUOTE,
						ord('$') => self::DOLLAR,
						ord(']') => self::RBRACKET,
						ord('"') => self::DOUBLEQUOTE,
						ord("'") => self::SINGLEQUOTE,
					);
					for($i = $start; $i < self::YYERRORSYMBOL + $start; $i++)
					{
						$lt = token_name($i);
            $lt = ($lt == 'T_ML_COMMENT') ? 'T_COMMENT' : $lt;
						$lt = ($lt == 'T_DOUBLE_COLON') ?  'T_PAAMAYIM_NEKUDOTAYIM' : $lt;
						if(!isset($hash[$lt]))
							continue;
		
						$map[$i] = $hash[$lt];
					}
					$this->transTable = $map;
				}
    }
#line 167 "src/engine/stmtparser.php"

/* Next is all token values, as class constants
*/
/* 
** These constants (all generated automatically by the parser generator)
** specify the various kinds of tokens (terminals) that the parser
** understands. 
**
** Each symbol here is a terminal symbol in the grammar.
*/
    const T_INCLUDE                      =  1;
    const T_INCLUDE_ONCE                 =  2;
    const T_EVAL                         =  3;
    const T_REQUIRE                      =  4;
    const T_REQUIRE_ONCE                 =  5;
    const COMMA                          =  6;
    const T_LOGICAL_OR                   =  7;
    const T_LOGICAL_XOR                  =  8;
    const T_LOGICAL_AND                  =  9;
    const T_PRINT                        = 10;
    const T_YIELD                        = 11;
    const T_DOUBLE_ARROW                 = 12;
    const T_YIELD_FROM                   = 13;
    const EQUALS                         = 14;
    const T_PLUS_EQUAL                   = 15;
    const T_MINUS_EQUAL                  = 16;
    const T_MUL_EQUAL                    = 17;
    const T_DIV_EQUAL                    = 18;
    const T_CONCAT_EQUAL                 = 19;
    const T_MOD_EQUAL                    = 20;
    const T_AND_EQUAL                    = 21;
    const T_OR_EQUAL                     = 22;
    const T_XOR_EQUAL                    = 23;
    const T_SL_EQUAL                     = 24;
    const T_SR_EQUAL                     = 25;
    const T_POW_EQUAL                    = 26;
    const QUESTION                       = 27;
    const COLON                          = 28;
    const T_COALESCE                     = 29;
    const T_BOOLEAN_OR                   = 30;
    const T_BOOLEAN_AND                  = 31;
    const BAR                            = 32;
    const CARAT                          = 33;
    const AMPERSAND                      = 34;
    const T_IS_EQUAL                     = 35;
    const T_IS_NOT_EQUAL                 = 36;
    const T_IS_IDENTICAL                 = 37;
    const T_IS_NOT_IDENTICAL             = 38;
    const T_SPACESHIP                    = 39;
    const LESSTHAN                       = 40;
    const T_IS_SMALLER_OR_EQUAL          = 41;
    const GREATERTHAN                    = 42;
    const T_IS_GREATER_OR_EQUAL          = 43;
    const T_SL                           = 44;
    const T_SR                           = 45;
    const PLUS                           = 46;
    const MINUS                          = 47;
    const DOT                            = 48;
    const TIMES                          = 49;
    const DIVIDE                         = 50;
    const PERCENT                        = 51;
    const EXCLAM                         = 52;
    const T_INSTANCEOF                   = 53;
    const TILDE                          = 54;
    const T_INC                          = 55;
    const T_DEC                          = 56;
    const T_INT_CAST                     = 57;
    const T_DOUBLE_CAST                  = 58;
    const T_STRING_CAST                  = 59;
    const T_ARRAY_CAST                   = 60;
    const T_OBJECT_CAST                  = 61;
    const T_BOOL_CAST                    = 62;
    const T_UNSET_CAST                   = 63;
    const AT                             = 64;
    const T_POW                          = 65;
    const LBRACKET                       = 66;
    const T_NEW                          = 67;
    const T_CLONE                        = 68;
    const T_NOELSE                       = 69;
    const T_ELSEIF                       = 70;
    const T_ELSE                         = 71;
    const T_ENDIF                        = 72;
    const T_STATIC                       = 73;
    const T_ABSTRACT                     = 74;
    const T_FINAL                        = 75;
    const T_PRIVATE                      = 76;
    const T_PROTECTED                    = 77;
    const T_PUBLIC                       = 78;
    const SINGLEQUOTE                    = 79;
    const T_EXIT                         = 80;
    const T_IF                           = 81;
    const T_ECHO                         = 82;
    const T_DO                           = 83;
    const T_WHILE                        = 84;
    const T_ENDWHILE                     = 85;
    const T_FOR                          = 86;
    const T_ENDFOR                       = 87;
    const T_FOREACH                      = 88;
    const T_ENDFOREACH                   = 89;
    const T_DECLARE                      = 90;
    const T_ENDDECLARE                   = 91;
    const T_AS                           = 92;
    const T_TRY                          = 93;
    const T_CATCH                        = 94;
    const T_FINALLY                      = 95;
    const T_THROW                        = 96;
    const T_USE                          = 97;
    const T_INSTEADOF                    = 98;
    const T_GLOBAL                       = 99;
    const T_VAR                          = 100;
    const T_UNSET                        = 101;
    const T_ISSET                        = 102;
    const T_EMPTY                        = 103;
    const T_CONTINUE                     = 104;
    const T_GOTO                         = 105;
    const T_FUNCTION                     = 106;
    const T_CONST                        = 107;
    const T_RETURN                       = 108;
    const T_LIST                         = 109;
    const T_SWITCH                       = 110;
    const T_ENDSWITCH                    = 111;
    const T_CASE                         = 112;
    const T_DEFAULT                      = 113;
    const T_BREAK                        = 114;
    const T_ARRAY                        = 115;
    const T_CALLABLE                     = 116;
    const T_EXTENDS                      = 117;
    const T_IMPLEMENTS                   = 118;
    const T_NAMESPACE                    = 119;
    const T_TRAIT                        = 120;
    const T_INTERFACE                    = 121;
    const T_CLASS                        = 122;
    const T_CLASS_C                      = 123;
    const T_TRAIT_C                      = 124;
    const T_FUNC_C                       = 125;
    const T_METHOD_C                     = 126;
    const T_LINE                         = 127;
    const T_FILE                         = 128;
    const T_DIR                          = 129;
    const T_NS_C                         = 130;
    const T_HALT_COMPILER                = 131;
    const T_STRING                       = 132;
    const T_NS_SEPARATOR                 = 133;
    const LPAREN                         = 134;
    const RPAREN                         = 135;
    const SEMI                           = 136;
    const LCURLY                         = 137;
    const RCURLY                         = 138;
    const T_INLINE_HTML                  = 139;
    const T_VARIABLE                     = 140;
    const T_ELLIPSIS                     = 141;
    const T_PAAMAYIM_NEKUDOTAYIM         = 142;
    const BACKQUOTE                      = 143;
    const T_ENCAPSED_AND_WHITESPACE      = 144;
    const RBRACKET                       = 145;
    const T_CONSTANT_ENCAPSED_STRING     = 146;
    const T_LNUMBER                      = 147;
    const T_DNUMBER                      = 148;
    const T_START_HEREDOC                = 149;
    const T_END_HEREDOC                  = 150;
    const DOUBLEQUOTE                    = 151;
    const T_OBJECT_OPERATOR              = 152;
    const DOLLAR                         = 153;
    const T_DOLLAR_OPEN_CURLY_BRACES     = 154;
    const T_STRING_VARNAME               = 155;
    const T_CURLY_OPEN                   = 156;
    const T_NUM_STRING                   = 157;
    const YY_NO_ACTION = 1370;
    const YY_ACCEPT_ACTION = 1369;
    const YY_ERROR_ACTION = 1368;

/* Next are that tables used to determine what action to take based on the
** current state and lookahead token.  These tables are used to implement
** functions that take a state number and lookahead value and return an
** action integer.  
**
** Suppose the action integer is N.  Then the action is determined as
** follows
**
**   0 <= N < self::YYNSTATE                              Shift N.  That is,
**                                                        push the lookahead
**                                                        token onto the stack
**                                                        and goto state N.
**
**   self::YYNSTATE <= N < self::YYNSTATE+self::YYNRULE   Reduce by rule N-YYNSTATE.
**
**   N == self::YYNSTATE+self::YYNRULE                    A syntax error has occurred.
**
**   N == self::YYNSTATE+self::YYNRULE+1                  The parser accepts its
**                                                        input. (and concludes parsing)
**
**   N == self::YYNSTATE+self::YYNRULE+2                  No such action.  Denotes unused
**                                                        slots in the yy_action[] table.
**
** The action table is constructed as a single large static array $yy_action.
** Given state S and lookahead X, the action is computed as
**
**      self::$yy_action[self::$yy_shift_ofst[S] + X ]
**
** If the index value self::$yy_shift_ofst[S]+X is out of range or if the value
** self::$yy_lookahead[self::$yy_shift_ofst[S]+X] is not equal to X or if
** self::$yy_shift_ofst[S] is equal to self::YY_SHIFT_USE_DFLT, it means that
** the action is not in the table and that self::$yy_default[S] should be used instead.  
**
** The formula above is for computing the action when the lookahead is
** a terminal symbol.  If the lookahead is a non-terminal (as occurs after
** a reduce action) then the static $yy_reduce_ofst array is used in place of
** the static $yy_shift_ofst array and self::YY_REDUCE_USE_DFLT is used in place of
** self::YY_SHIFT_USE_DFLT.
**
** The following are the tables generated in this section:
**
**  self::$yy_action        A single table containing all actions.
**  self::$yy_lookahead     A table containing the lookahead for each entry in
**                          yy_action.  Used to detect hash collisions.
**  self::$yy_shift_ofst    For each state, the offset into self::$yy_action for
**                          shifting terminals.
**  self::$yy_reduce_ofst   For each state, the offset into self::$yy_action for
**                          shifting non-terminals after a reduce.
**  self::$yy_default       Default action for each state.
*/
    const YY_SZ_ACTTAB = 14250;
static public $yy_action = array(
 /*     0 */    89,   90,  507,   92,   93,  452,  101,  229,   21,  108,
 /*    10 */    97,   49,   96,  103,  132,  134,   62,   66,   68,   55,
 /*    20 */    76,   56,   53,  117,   74,   78,   98,  100,   58,   57,
 /*    30 */    64,   63,   65,   54,   60,   59,  417,  163,  101,  229,
 /*    40 */   737,  142,  659,  649,  787,  104,  105,  734,  524,   61,
 /*    50 */    51,   77,  150,  106,  154,  152,  107,  109,  110,  111,
 /*    60 */   112,  116,  114,  115,  595,   29,  158,  121,  668,  205,
 /*    70 */   803,  199,  187,  456,  468,   95,  163,   61,  819,  253,
 /*    80 */   505,   33,   28,  541,  476,  560,  159,  502,   61,  474,
 /*    90 */   708,  225,  480,  860,  862,   85,  164,  538,  188,  671,
 /*   100 */   494,  516,  518,   43,  478,  763,  209,   47,  536,  572,
 /*   110 */   668,  249,  550,   44,  532,  669,  269,  236,  223,  440,
 /*   120 */   444,  853,  733,  733,  733,  733,  729,  731,  732,  733,
 /*   130 */   565,  570,  249,   99,  202,  743,  297,  679,  804,  819,
 /*   140 */   561,  815,  182,  519,   67,  745,  735,  728,  193,  573,
 /*   150 */   194,  756,  225,  220,   89,   90,  507,   92,   93,  839,
 /*   160 */   840,  553,  202,  108,   97,  738,   96,  103,  132,  134,
 /*   170 */    62,   66,   68,   55,   76,   56,   53,  117,   74,   78,
 /*   180 */    98,  100,   58,   57,   64,   63,   65,   54,   60,   59,
 /*   190 */   550,  163,  455,  101,  229,   30,  101,  229,  165,  104,
 /*   200 */   105,  883,  156,   61,  763,   77,  706,  106,  154,  152,
 /*   210 */   107,  109,  110,  111,  112,  116,  114,  115,  538,   29,
 /*   220 */   158,  121,  585,  839,  840,  470,  187,  456,  468,  499,
 /*   230 */   812,  668,  249,  253,  505,   33,   28,  541,  447,  560,
 /*   240 */   515,  502,  189,  474,  388,  887,  480,  772,   46,   85,
 /*   250 */   164,  550,  188,  890,  494,  516,  518,   43,  478,  763,
 /*   260 */   209,   47,  536,  572,  265,  411,  654,   44,  532,  526,
 /*   270 */   889,  601,  223,  440,  444,  853,  733,  733,  733,  733,
 /*   280 */   729,  731,  732,  733,  565,  570,  249,   99,  413,  743,
 /*   290 */   297,  891,  804,  819,  646,  218,  182,  224,  413,  745,
 /*   300 */   735,  728,  193,  647,  194,  755,  225,  738,   89,   90,
 /*   310 */   507,   92,   93,  652,  651,  573,  259,  108,   97,  573,
 /*   320 */    96,  134,   62,   66,   68,   55,   76,   56,   53,  117,
 /*   330 */    74,   78,   98,  100,   58,   57,   64,   63,   65,   54,
 /*   340 */    60,   59,  402,  163,  481,  487,  473,  484,   27,  520,
 /*   350 */   175,  441,  420,  104,  105,   61,  424,  652,  655,   77,
 /*   360 */   427,  106,  154,  152,  107,  109,  110,  111,  112,  116,
 /*   370 */   114,  115,  656,   29,  158,  121,  645,  788,  417,   84,
 /*   380 */   187,  456,  468,  552,  413, 1333,  413,  253,  505,   33,
 /*   390 */    28,  541,   51,  560,  150,  502,  422,  474,  421,  640,
 /*   400 */   480,  640,   72,   85,  164,  819,  188, 1068,  494,  516,
 /*   410 */   518,   43,  478,  763,  209,   47,  536,  572,  225, 1343,
 /*   420 */   176,   44,  532,  839,  840,  824,  223,  440,  444,  853,
 /*   430 */   733,  733,  733,  733,  729,  731,  732,  733,  565,  570,
 /*   440 */   249,   99,  665,  743,  297,   22,  804,  819,  561,  872,
 /*   450 */   182,  561,  865,  745,  735,  728,  193,  689,  194,  417,
 /*   460 */   225,  410,   89,   90,  507,   92,   93,   39,  664,  726,
 /*   470 */   177,  108,   97,   51,   96,  150,   62,   66,   68,   55,
 /*   480 */    76,   56,   53,  117,   74,   78,   98,  100,   58,   57,
 /*   490 */    64,   63,   65,   54,   60,   59, 1325,  163,  775,  768,
 /*   500 */   222,  827,  827,  827,  827,  827,  827,  104,  105,   61,
 /*   510 */   854,  246,  852,   77, 1333,  106,  154,  152,  107,  109,
 /*   520 */   110,  111,  112,  116,  114,  115,  667,   29,  158,  121,
 /*   530 */  1068,  174,  668,  263,  187,  456,  468,  272,   94,  147,
 /*   540 */   873,  253,  505,   33,   28,  541,  819,  560, 1343,  502,
 /*   550 */   868,  474,  113,  196,  480, 1342,  667,   85, 1343,  225,
 /*   560 */   188,  191,  494,  516,  518,   43,  478,  763, 1147,   47,
 /*   570 */   536,  572,  839,  840,  849,   44,  532,  839,  840,  491,
 /*   580 */   538,  440,  444,  853,  733,  733,  733,  733,  729,  731,
 /*   590 */   732,  733,  514,  570,  249,   99,  177,  743,  297,  761,
 /*   600 */   804,  819,  657,  201,  182,  561,  872,  745,  735,  728,
 /*   610 */   193,  573,  194,  247,  225,  830,   89,   90,  507,   92,
 /*   620 */    93,  839,  840,  491,  719,  108,   97,  260,   96,  659,
 /*   630 */   649,   66,   68,   55,   76,   56,   53,  117,   74,   78,
 /*   640 */    98,  100,   58,   57,   64,   63,   65,   54,   60,   59,
 /*   650 */   417,  163,  418,  425,  219,  668,  787,  492,  561,  872,
 /*   660 */   771,  104,  105,   61,   51,  863,  150,   77,  637,  106,
 /*   670 */   154,  152,  107,  109,  110,  111,  112,  116,  114,  115,
 /*   680 */   667,   29,  158,  121, 1342,  190,  668,  207,  187,  456,
 /*   690 */   468, 1327,  259,  412, 1342,  253,  505,   33,   28,  541,
 /*   700 */   180,  560,  261,  502,  239,  474,  668,  211,  480,  867,
 /*   710 */   453,   85,   38,   87,  188,   41,  494,  516,  518,   43,
 /*   720 */   478,  763,  256,   47,  536,  572,  561,  872,  658,   44,
 /*   730 */   532,  769,  148,  779,  538,  440,  444,  853,  733,  733,
 /*   740 */   733,  733,  729,  731,  732,  733,  514,  570,  249,   99,
 /*   750 */   189,  743,  297,  744,  804,  819, 1050,  753,  182,  561,
 /*   760 */   865,  745,  735,  728,  193,  217,  194,   48,  225,   35,
 /*   770 */    89,   90,  507,   92,   93,  561,  495,  738,  504,  108,
 /*   780 */    97,  147,   96,   68,   55,   76,   56,   53,  117,   74,
 /*   790 */    78,   98,  100,   58,   57,   64,   63,   65,   54,   60,
 /*   800 */    59,  548,  163,  561,  865,  228,  839,  840,  523,  561,
 /*   810 */   611,  561,  884,  573,   61,  104,  105,  508,  859,  246,
 /*   820 */   852,   77,  680,  106,  154,  152,  107,  109,  110,  111,
 /*   830 */   112,  116,  114,  115,  147,   29,  158,  121,  406,  686,
 /*   840 */   742,  704,  187,  456,  468,  777,  776,  768,  413,  253,
 /*   850 */   505,   33,   28,  541,  405,  560,  166,  502,  617,  474,
 /*   860 */   665,  497,  480,  643,  866,   85,  232,  525,  188,  263,
 /*   870 */   494,  516,  518,   43,  478,  763,  522,   47,  536,  572,
 /*   880 */   650, 1369,    3,   44,  532, 1050,  257, 1069,  538,  440,
 /*   890 */   444,  853,  733,  733,  733,  733,  729,  731,  732,  733,
 /*   900 */   514,  570,  249,   99,   32,  743,  297,  721,  804,  819,
 /*   910 */   542,  251,  182,   31,  667,  745,  735,  728,  193,  173,
 /*   920 */   194, 1264,  225,  242,   89,   90,  507,   92,   93,  483,
 /*   930 */   503,  856,  298,  108,   97,   34,   96,   55,   76,   56,
 /*   940 */    53,  117,   74,   78,   98,  100,   58,   57,   64,   63,
 /*   950 */    65,   54,   60,   59, 1303,  163,   54,   60,   59,  434,
 /*   960 */   163,  413,  817,  620,  763,  167,  596,   61,  301,  104,
 /*   970 */   105, 1304,   61,  549,  653,   77,  653,  106,  154,  152,
 /*   980 */   107,  109,  110,  111,  112,  116,  114,  115,  430,   29,
 /*   990 */   158,  121,  782,  882,  601,  691,  187,  456,  468,  429,
 /*  1000 */   667,  561,  235,  253,  505,   33,   28,  541,  431,  560,
 /*  1010 */  1069,  502,  767,  474,   80,  160,  480,  159,  762,   85,
 /*  1020 */   568,  799,  188,  653,  494,  516,  518,   43,  478,  763,
 /*  1030 */   126,   47,  536,  572, 1302,   83,  786,   44,  532,  796,
 /*  1040 */   407,  127,  538,  440,  444,  853,  733,  733,  733,  733,
 /*  1050 */   729,  731,  732,  733,  514,  570,  249,   99,  141,  743,
 /*  1060 */   297,  757,  804,  819,  241,  143,  182,  741,  783,  745,
 /*  1070 */   735,  728,  193,   71,  194,  781,  225,  192,   89,   90,
 /*  1080 */   507,   92,   93,  697,  861,  270,  784,  108,   97,  485,
 /*  1090 */    96,   64,   63,   65,   54,   60,   59,  162,  163,  264,
 /*  1100 */   746,  537,  727,  527,  244,  413,  428,  557,  831,  556,
 /*  1110 */    61,  393,  511,  203,  766,  509,  438,  204,  437,  644,
 /*  1120 */   642,  652,  655,  104,  105,  578,  179,  161,  687,   77,
 /*  1130 */    86,  106,  154,  152,  107,  109,  110,  111,  112,  116,
 /*  1140 */   114,  115,   36,   29,  158,  121,  185,  243,  279,  252,
 /*  1150 */   187,  456,  468,  276,  876,  561,  235,  253,  505,   33,
 /*  1160 */    28,  541,  716,  560,  874,  502,  580,  474,  199,  200,
 /*  1170 */   480,  870,  579,   85,  711,  273,  188,  648,  494,  516,
 /*  1180 */   518,   43,  478,  763,  262,   47,  536,  572,  886,  606,
 /*  1190 */   797,   44,  532,  282,  416,  300,  538,  440,  444,  853,
 /*  1200 */   733,  733,  733,  733,  729,  731,  732,  733,  514,  570,
 /*  1210 */   249,   99,   40,  743,  297,  696,  804,  819,  144,  293,
 /*  1220 */   182,  741,   70,  745,  735,  728,  193,   91,  194,  172,
 /*  1230 */   225,  146,   89,   90,  507,   92,   93,  469,  471,  281,
 /*  1240 */    24,  108,   97,   75,   96,  275,   54,   60,   59,  968,
 /*  1250 */   163,  197,  810,   73,  746,  537,  413,  527,  244,  413,
 /*  1260 */   569,  557,   61,  556,  203,  393,  511,  203,  766,  624,
 /*  1270 */   641,  642,  426,  644,  642,  662,  715,  104,  105,  299,
 /*  1280 */   834,  678,  602,   77,   81,  106,  154,  152,  107,  109,
 /*  1290 */   110,  111,  112,  116,  114,  115,  286,   29,  158,  121,
 /*  1300 */   454,  881,  668,    2,  187,  456,  468,  280,  864,    5,
 /*  1310 */   710,  253,  505,   33,   28,  541,  807,  560,  170,  502,
 /*  1320 */   821,  474,  736,    1,  480,    6,  267,   85,   82,  750,
 /*  1330 */   188,  183,  494,  516,  518,   43,  478,  763,  292,   47,
 /*  1340 */   536,  572,  829,   31,  283,   44,  532,  181,  885,  277,
 /*  1350 */   538,  440,  444,  853,  733,  733,  733,  733,  729,  731,
 /*  1360 */   732,  733,  514,  570,  249,   99,  528,  743,  297,  684,
 /*  1370 */   804,  819,   17,  540,  182,  561,  865,  745,  735,  728,
 /*  1380 */   193,  266,  194,   19,  225,  500,   89,   90,  507,   92,
 /*  1390 */    93,  489,  171,  466,   20,  108,   97,    8,   96,   74,
 /*  1400 */    78,   98,  100,   58,   57,   64,   63,   65,   54,   60,
 /*  1410 */    59,    7,  163,   18,   54,   60,   59,  449,  163,   14,
 /*  1420 */    15,  397,  233,   16,   61,  498,  443,  446,    4,  395,
 /*  1430 */    61,  104,  105,  508,  859,  246,  852,   77,  198,  106,
 /*  1440 */   154,  152,  107,  109,  110,  111,  112,  116,  114,  115,
 /*  1450 */   168,   29,  158,  121,  245,  227,  559,  488,  187,  456,
 /*  1460 */   468,  770,  723,  561,  235,  253,  505,   33,   28,  541,
 /*  1470 */   551,  560,  778,  502,  178,  474,   37,  398,  480,  284,
 /*  1480 */   285,   85,  724,  855,  188,  555,  494,  516,  518,   43,
 /*  1490 */   478,  763,  858,   47,  536,  572,  764,  547,  291,   44,
 /*  1500 */   532,  763,  386,  184,  538,  440,  444,  853,  733,  733,
 /*  1510 */   733,  733,  729,  731,  732,  733,  514,  570,  249,   99,
 /*  1520 */   258,  743,  297,  417,  804,  819,  718,  226,  182,  741,
 /*  1530 */   239,  745,  735,  728,  193,  571,  194,   51,  225,  150,
 /*  1540 */    89,   90,  507,   92,   93,  754,  210,  447,  231,  108,
 /*  1550 */    97,  238,   96,  801,  660,  752,  703,  857,  818,  216,
 /*  1560 */   860,  862,  746,  537,  538,  527,  244,  816,  295,  557,
 /*  1570 */   290,  556,  254,  393,  511,  707,  766,  668,  249,  296,
 /*  1580 */  1097,  392,  237,  690,  435,  104,  105,  278,  739,  875,
 /*  1590 */    42,   77,  811,  106,  154,  152,  107,  109,  110,  111,
 /*  1600 */   112,  116,  114,  115,    9,   29,  158,  121,  294,   10,
 /*  1610 */    11,  567,  187,  456,  468,  390,   13,  561,  235,  253,
 /*  1620 */   505,   33,   28,  541,  169,  560,  764,  502,  764,  474,
 /*  1630 */    12,  764,  480,  764,  764,   85,   45,  764,  188,  764,
 /*  1640 */   494,  516,  518,   43,  478,  763,  764,   47,  536,  572,
 /*  1650 */   764,  764,  764,   44,  532,  764,  562,  764,  538,  440,
 /*  1660 */   444,  853,  733,  733,  733,  733,  729,  731,  732,  733,
 /*  1670 */   514,  570,  249,   99,  764,  743,  297,  607,  804,  819,
 /*  1680 */   764,  764,  182,  741,  764,  745,  735,  728,  193,  764,
 /*  1690 */   194,  764,  225,  764,   89,   90,  507,   92,   93,  764,
 /*  1700 */   764,  764,  764,  108,   97,  764,   96,  131,  764,  764,
 /*  1710 */   764,  764,  230,  764, 1301,  764,  746,  537,  764,  527,
 /*  1720 */   244,  764,  195,  557,  764,  556,  764,  393,  511,  764,
 /*  1730 */   766,  764,  764,  764,  764,  764,  764,  764,  764,  104,
 /*  1740 */   105,  764,  764,  764,  764,   77,  764,  106,  154,  152,
 /*  1750 */   107,  109,  110,  111,  112,  116,  114,  115,  764,   29,
 /*  1760 */   158,  121,  764,  764,  764,  764,  187,  456,  468,  764,
 /*  1770 */   764,  561,  235,  253,  505,   33,   28,  541,  764,  560,
 /*  1780 */   764,  502, 1304,  474,  490, 1301,  480,  764,  764,   85,
 /*  1790 */  1301,  764,  188,  764,  494,  516,  518,   43,  478,  763,
 /*  1800 */  1301,   47,  536,  572,  764,  764,  764,   44,  532,  764,
 /*  1810 */   391,  764,  538,  440,  444,  853,  733,  733,  733,  733,
 /*  1820 */   729,  731,  732,  733,  514,  570,  249,   99,  764,  743,
 /*  1830 */   297,  417,  804,  819,  764,  737,  182,  741,  764,  745,
 /*  1840 */   735,  728,  193,  764,  194,   51,  225,  150,   89,   90,
 /*  1850 */   507,   92,   93,  764,  764,  764,  764,  108,   97,  764,
 /*  1860 */    96,  764,  764,  764,  764,  764,  764,  764, 1299,  764,
 /*  1870 */   746,  537,  764,  527,  244,  764,  764,  557,  764,  556,
 /*  1880 */   764,  393,  511,  764,  766,  764,  764,  764,  764,  764,
 /*  1890 */   764,  764,  764,  104,  105,  764,  764,  764,  764,   77,
 /*  1900 */   764,  106,  154,  152,  107,  109,  110,  111,  112,  116,
 /*  1910 */   114,  115,  764,   29,  158,  121,  764,  764,  764,  764,
 /*  1920 */   187,  456,  468,  764,  764,  561,  235,  253,  505,   33,
 /*  1930 */    28,  541,  764,  560,  764,  502,  496,  474,  764, 1299,
 /*  1940 */   480,  764,  764,   85, 1299,  764,  188,  764,  494,  516,
 /*  1950 */   518,   43,  478,  763, 1299,   47,  536,  572,  764,  764,
 /*  1960 */   764,   44,  532,  764,  396,  764,  538,  440,  444,  853,
 /*  1970 */   733,  733,  733,  733,  729,  731,  732,  733,  514,  570,
 /*  1980 */   249,   99,  764,  743,  297,  417,  804,  819,  764,  221,
 /*  1990 */   182,  741,  764,  745,  735,  728,  193,  764,  194,   51,
 /*  2000 */   225,  150,   89,   90,  507,   92,   93,  764,  764,  764,
 /*  2010 */   764,  108,   97,  764,   96,  764,  764,  764,  764,  764,
 /*  2020 */   764,  764, 1300,  764,  746,  537,  764,  527,  244,  764,
 /*  2030 */   764,  557,  764,  556,  764,  393,  511,  764,  766,  764,
 /*  2040 */   764,  764,  764,  764,  764,  764,  764,  104,  105,  764,
 /*  2050 */   764,  764,  764,   77,  764,  106,  154,  152,  107,  109,
 /*  2060 */   110,  111,  112,  116,  114,  115,  764,   29,  158,  121,
 /*  2070 */   764,  764,  764,  764,  187,  456,  468,  764,  764,  561,
 /*  2080 */   235,  253,  505,   33,   28,  541,  764,  560,  460,  502,
 /*  2090 */  1303,  474,  764, 1300,  480,  764,  764,   85, 1300,  764,
 /*  2100 */   188,  764,  494,  516,  518,   43,  478,  763, 1300,   47,
 /*  2110 */   536,  572,  764,  764,  764,   44,  532,  764,  404,  764,
 /*  2120 */   538,  440,  444,  853,  733,  733,  733,  733,  729,  731,
 /*  2130 */   732,  733,  514,  570,  249,   99,  764,  743,  297,  764,
 /*  2140 */   804,  819,  764,  764,  182,  741,  764,  745,  735,  728,
 /*  2150 */   193,  764,  194,  764,  225,  764,   89,   90,  507,   92,
 /*  2160 */    93,  764,  764,  764,  764,  108,   97,  764,   96,  764,
 /*  2170 */   764,  764,  764,  764,  764,  764,  764,  764,  746,  537,
 /*  2180 */   764,  527,  244,  764,  764,  557,  764,  556,  764,  393,
 /*  2190 */   511,  764,  766,  764,  764,  764,  764,  764,  764,  764,
 /*  2200 */   764,  104,  105,  764,  764,  764,  764,   77,  764,  106,
 /*  2210 */   154,  152,  107,  109,  110,  111,  112,  116,  114,  115,
 /*  2220 */   764,   29,  158,  121,  764,  764,  764,  764,  187,  456,
 /*  2230 */   468,  764,  764,  764,  764,  253,  505,   33,   28,  541,
 /*  2240 */   465,  560,  764,  502,  764,  474,  764,  764,  480,  764,
 /*  2250 */   764,   85,  764,  764,  188,  764,  494,  516,  518,   43,
 /*  2260 */   478,  763,  764,   47,  536,  572,  764,  764,  764,   44,
 /*  2270 */   532,  764,  764,  764,  538,  440,  444,  853,  733,  733,
 /*  2280 */   733,  733,  729,  731,  732,  733,  514,  570,  249,   99,
 /*  2290 */   764,  743,  297,  764,  804,  819,  764,  764,  182,  764,
 /*  2300 */   764,  745,  735,  728,  193,  764,  194,   88,  225,  764,
 /*  2310 */   720,  722,  714,  702,  692,  764,  701,  638,  685,  632,
 /*  2320 */   633,  764,   49,  764,  103,  132,  134,   62,   66,   68,
 /*  2330 */    55,   76,   56,   53,  117,   74,   78,   98,  100,   58,
 /*  2340 */    57,   64,   63,   65,   54,   60,   59,  764,  163,  764,
 /*  2350 */   764,  417,  764,  764,  764,  737,  764,  764,  764,  764,
 /*  2360 */    61,  773,  688,  764,  764,   51,  764,  150,  764,  764,
 /*  2370 */   764,  764,  764,  764,  764,  764,  683,  693,  764,  698,
 /*  2380 */   699,  700,  841,  842,  843,  844,  845,  846,  764,  694,
 /*  2390 */   695,  639,  618,  575,  574,  592,  577,  590,  583,  581,
 /*  2400 */   576,  594,  582,  584,  586,  588,  591,  593,  587,  621,
 /*  2410 */   622,  623,  625,  626,  627,  629,  630,  631,  635,  636,
 /*  2420 */   628,  616,  615,  598,  599,  603,  604,  597,  608,  609,
 /*  2430 */   610,  612,  613,  614,  725,  809,  833,  835,  836,  837,
 /*  2440 */   838,  847,  764,  764,  764,  764,   69,  122,  764,  819,
 /*  2450 */   764,   89,   90,  507,   92,   93,  764,  764,  764,  764,
 /*  2460 */   108,   97,  225,   96,  764,   49,  764,  103,  132,  134,
 /*  2470 */    62,   66,   68,   55,   76,   56,   53,  117,   74,   78,
 /*  2480 */    98,  100,   58,   57,   64,   63,   65,   54,   60,   59,
 /*  2490 */   764,  163,  764,  764,  764,  764,  104,  105,  764,  764,
 /*  2500 */   764,  764,   77,   61,  106,  154,  152,  107,  109,  110,
 /*  2510 */   111,  112,  116,  114,  115,  764,   29,  158,  121,  764,
 /*  2520 */   764,  764,  764,  187,  456,  468,  764,  764,  561,  235,
 /*  2530 */   253,  505,   33,   28,  541,  764,  560,  764,  502,  764,
 /*  2540 */   474,  764,  764,  480,  764,  764,   85,  764,  764,  188,
 /*  2550 */   764,  494,  516,  518,   43,  478,  763,  764,   47,  536,
 /*  2560 */   572,  764,  561,  865,   44,  532,  764,  389,  764,  538,
 /*  2570 */   440,  444,  853,  733,  733,  733,  733,  729,  731,  732,
 /*  2580 */   733,  514,  570,  249,   99,  764,  743,  297,  274,  804,
 /*  2590 */   819,  764,  764,  182,  741,  764,  745,  735,  728,  193,
 /*  2600 */   764,  194,  764,  225,  442,   89,   90,  507,   92,   93,
 /*  2610 */   764,  764,  764,  764,  108,   97,  764,   96,  764,  764,
 /*  2620 */   508,  859,  246,  852,  764,  764,  764,  746,  537,  764,
 /*  2630 */   527,  244,  764,  764,  557,  764,  556,  764,  393,  511,
 /*  2640 */   764,  766,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  2650 */   104,  105,  764,  764,  764,  764,   77,  764,  106,  154,
 /*  2660 */   152,  107,  109,  110,  111,  112,  116,  114,  115,  764,
 /*  2670 */    29,  158,  121,  764,  764,  764,  764,  187,  456,  468,
 /*  2680 */   764,  764,  561,  235,  253,  505,   33,   28,  541,  764,
 /*  2690 */   560,  764,  502,  764,  474,  764,  764,  480,  764,  764,
 /*  2700 */    85,  764,  764,  188,  307,  494,  516,  518,   43,  478,
 /*  2710 */   763,  764,   47,  536,  572,  764,  764,  764,   44,  532,
 /*  2720 */   764,  369,  250,  538,  440,  444,  853,  733,  733,  733,
 /*  2730 */   733,  729,  731,  732,  733,  514,  570,  249,   99,  764,
 /*  2740 */   743,  297,  764,  804,  819,  561,  865,  182,  741,  764,
 /*  2750 */   745,  735,  728,  193,  764,  194,  764,  225,  764,  720,
 /*  2760 */   722,  714,  702,  692,  764,  701,  638,  685,  632,  633,
 /*  2770 */   764,  822,  764,  740,  825,  764,  879,  764,  764,  764,
 /*  2780 */   764,  746,  537,  764,  527,  244,  764,  472,  385,  554,
 /*  2790 */   517,  764,  393,  511,  764,  766,  764,  248,  780,  764,
 /*  2800 */   764,  764,  764,  508,  859,  246,  852,  764,  764,  764,
 /*  2810 */   764,  688,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  2820 */   764,  764,  764,  764,  764,  683,  693,  764,  698,  699,
 /*  2830 */   700,  841,  842,  843,  844,  845,  846,  764,  694,  695,
 /*  2840 */   639,  618,  575,  574,  592,  577,  590,  583,  581,  576,
 /*  2850 */   594,  582,  584,  586,  588,  591,  593,  587,  621,  622,
 /*  2860 */   623,  625,  626,  627,  629,  630,  631,  635,  636,  628,
 /*  2870 */   616,  615,  598,  599,  603,  604,  597,  506,  609,  610,
 /*  2880 */   612,  613,  614,  725,  809,  833,  835,  836,  837,  838,
 /*  2890 */   482,  249,  764,  124,  136,  122,  878,  764,  720,  722,
 /*  2900 */   714,  702,  692,  764,  701,  638,  685,  632,  633,  764,
 /*  2910 */   764,  764,  764,   49,  764,  103,  132,  134,   62,   66,
 /*  2920 */    68,   55,   76,   56,   53,  117,   74,   78,   98,  100,
 /*  2930 */    58,   57,   64,   63,   65,   54,   60,   59,  764,  163,
 /*  2940 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  2950 */   688,   61,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  2960 */   764,  764,  764,  764,  683,  693,  764,  698,  699,  700,
 /*  2970 */   841,  842,  843,  844,  845,  846,  764,  694,  695,  639,
 /*  2980 */   618,  575,  574,  592,  577,  590,  583,  581,  576,  594,
 /*  2990 */   582,  584,  586,  588,  591,  593,  587,  621,  622,  623,
 /*  3000 */   625,  626,  627,  629,  630,  631,  635,  636,  628,  616,
 /*  3010 */   615,  598,  599,  603,  604,  597,  506,  609,  610,  612,
 /*  3020 */   613,  614,  725,  809,  833,  835,  836,  837,  838,  482,
 /*  3030 */   249,  457,  124,  136,  122,  880,  764,  720,  722,  714,
 /*  3040 */   702,  692,  764,  701,  638,  685,  632,  633,  764,  764,
 /*  3050 */   764,  764,   49,  102,  103,  132,  134,   62,   66,   68,
 /*  3060 */    55,   76,   56,   53,  117,   74,   78,   98,  100,   58,
 /*  3070 */    57,   64,   63,   65,   54,   60,   59,  764,  163,  764,
 /*  3080 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  688,
 /*  3090 */    61,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  3100 */   764,  764,  764,  683,  693,  764,  698,  699,  700,  841,
 /*  3110 */   842,  843,  844,  845,  846,  764,  694,  695,  639,  618,
 /*  3120 */   575,  574,  592,  577,  590,  583,  581,  576,  594,  582,
 /*  3130 */   584,  586,  588,  591,  593,  587,  621,  622,  623,  625,
 /*  3140 */   626,  627,  629,  630,  631,  635,  636,  628,  616,  615,
 /*  3150 */   598,  599,  603,  604,  597,  608,  609,  610,  612,  613,
 /*  3160 */   614,  725,  809,  833,  835,  836,  837,  838,  847,  720,
 /*  3170 */   722,  714,  702,  692,  764,  701,  638,  685,  632,  633,
 /*  3180 */   764,  764,  827,  827,  827,  827,  827,  827,  764,  764,
 /*  3190 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  3200 */   764,  764,  764,  764,  764,  764,  186,  764,  764,  820,
 /*  3210 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  3220 */   764,  688,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  3230 */   764,  764,  764,  764,  764,  683,  693,  764,  698,  699,
 /*  3240 */   700,  827,  827,  827,  827,  827,  827,  888,  694,  695,
 /*  3250 */   639,  618,  575,  574,  592,  577,  590,  583,  581,  576,
 /*  3260 */   594,  582,  584,  586,  588,  591,  593,  587,  621,  622,
 /*  3270 */   623,  625,  626,  627,  629,  630,  631,  635,  636,  628,
 /*  3280 */   616,  615,  598,  599,  603,  604,  597,  608,  609,  610,
 /*  3290 */   612,  613,  614,  725,  809,  833,  835,  836,  837,  838,
 /*  3300 */   850,   89,   90,  507,   92,   93,  764,  764,  764,  764,
 /*  3310 */   108,   97,  764,   96,  827,  827,  827,  827,  827,  827,
 /*  3320 */   764,  764,  764,  764,  764,  764,  764,  764,  289,  764,
 /*  3330 */   764,  561,  815,  764,  764,  764,  764,  764,  186,  764,
 /*  3340 */   764,  820,  764,  764,  764,  764,  104,  105,  764,  764,
 /*  3350 */   764,  764,   77,  764,  106,  154,  152,  107,  109,  110,
 /*  3360 */   111,  112,  116,  114,  115,  764,   29,  158,  121,  764,
 /*  3370 */   764,  764,  764,  187,  764,  764,  764,  764,  764,  747,
 /*  3380 */   253,  505,   33,   28,  541,  764,  560,  764,  502,  764,
 /*  3390 */   474,  764,  764,  480,  764,  764,   85,  706,  764,  188,
 /*  3400 */   764,  494,  516,  518,   43,  478,  763,  764,   47,  536,
 /*  3410 */   572,  764,  764,  764,   44,  532,  764,  764,  663,  538,
 /*  3420 */   764,  208,  764,  733,  733,  733,  733,  729,  731,  732,
 /*  3430 */   733,  515,  570,  249,   99,  388,  743,  297,  764,  804,
 /*  3440 */   819,  764,  764,  182,  764,  764,  745,  735,  728,  193,
 /*  3450 */   764,  194,  764,  225,  764,   89,   90,  507,   92,   93,
 /*  3460 */   764,  764,  764,  764,  108,   97,  764,   96,  764,  764,
 /*  3470 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  3480 */   764,  764,  287,  764,  764,  764,  764,  764,  764,  764,
 /*  3490 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  3500 */   104,  105,  764,  764,  764,  764,   77,  764,  106,  154,
 /*  3510 */   152,  107,  109,  110,  111,  112,  116,  114,  115,  764,
 /*  3520 */    29,  158,  121,  764,  764,  764,  764,  187,  764,  764,
 /*  3530 */   764,  764,  561,  235,  253,  505,   33,   28,  541,  764,
 /*  3540 */   560,  764,  502,  764,  474,  764,  764,  480,  764,  764,
 /*  3550 */    85,  764,  764,  188,  764,  494,  516,  518,   43,  478,
 /*  3560 */   763,  764,   47,  536,  572,  764,  764,  764,   44,  532,
 /*  3570 */   764,  416,  764,  538,  764,  764,  764,  733,  733,  733,
 /*  3580 */   733,  729,  731,  732,  733,  401,  570,  249,   99,  764,
 /*  3590 */   743,  297,  764,  804,  819,  764,  764,  182,  741,  764,
 /*  3600 */   745,  735,  728,  193,  764,  194,  764,  225,  764,   89,
 /*  3610 */    90,  507,   92,   93,  764,  764,  764,  764,  108,   97,
 /*  3620 */   764,   96,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  3630 */   764,  746,  537,  764,  527,  244,  288,  764,  557,  764,
 /*  3640 */   556,  764,  393,  511,  764,  766,  619,  764,  764,  764,
 /*  3650 */   764,  764,  764,  764,  104,  105,  764,  764,  764,  764,
 /*  3660 */    77,  764,  106,  154,  152,  107,  109,  110,  111,  112,
 /*  3670 */   116,  114,  115,  764,   29,  158,  121,  764,  764,  764,
 /*  3680 */   764,  187,  764,  764,  764,  764,  561,  235,  253,  505,
 /*  3690 */    33,   28,  541,  764,  560,  764,  502,  764,  474,  764,
 /*  3700 */   764,  480,  764,  764,   85,  764,  764,  188,  764,  494,
 /*  3710 */   516,  518,   43,  478,  763,  764,   47,  536,  572,  764,
 /*  3720 */   764,  764,   44,  532,  764,  416,  764,  538,  764,  764,
 /*  3730 */   764,  733,  733,  733,  733,  729,  731,  732,  733,  399,
 /*  3740 */   570,  249,   99,  764,  743,  297,  764,  804,  819,  764,
 /*  3750 */   764,  182,  741,  764,  745,  735,  728,  193,  764,  194,
 /*  3760 */   764,  225,  764,   89,   90,  507,   92,   93,  764,  764,
 /*  3770 */   764,  764,  108,   97,  764,   96,  764,  764,  764,  764,
 /*  3780 */   764,  764,  764,  764,  764,  746,  537,  764,  527,  244,
 /*  3790 */   271,  764,  557,  764,  556,  764,  393,  511,  764,  766,
 /*  3800 */   619,  764,  764,  764,  764,  764,  764,  764,  104,  105,
 /*  3810 */   764,  764,  764,  764,   77,  764,  106,  154,  152,  107,
 /*  3820 */   109,  110,  111,  112,  116,  114,  115,  764,   29,  158,
 /*  3830 */   121,  764,  764,  764,  764,  187,  764,  764,  764,  764,
 /*  3840 */   561,  235,  253,  505,   33,   28,  541,  764,  560,  764,
 /*  3850 */   502,  764,  474,  764,  764,  480,  764,  764,   85,  764,
 /*  3860 */   764,  188,  764,  494,  516,  518,   43,  478,  763,  764,
 /*  3870 */    47,  536,  572,  764,  764,  764,   44,  532,  764,  416,
 /*  3880 */   764,  538,  764,  764,  764,  733,  733,  733,  733,  729,
 /*  3890 */   731,  732,  733,  414,  570,  249,   99,  764,  743,  297,
 /*  3900 */   764,  804,  819,  764,  764,  182,  741,  764,  745,  735,
 /*  3910 */   728,  193,  764,  194,  764,  225,  764,   89,   90,  507,
 /*  3920 */    92,   93,  764,  764,  764,  764,  108,   97,  764,   96,
 /*  3930 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  746,
 /*  3940 */   537,  764,  527,  244,  268,  764,  557,  764,  556,  764,
 /*  3950 */   393,  511,  764,  766,  619,  764,  764,  764,  764,  764,
 /*  3960 */   764,  764,  104,  105,  764,  764,  764,  764,   77,  764,
 /*  3970 */   106,  154,  152,  107,  109,  110,  111,  112,  116,  114,
 /*  3980 */   115,  764,   29,  158,  121,  764,  764,  764,  764,  187,
 /*  3990 */   764,  764,  764,  764,  561,  235,  253,  505,   33,   28,
 /*  4000 */   541,  764,  560,  764,  502,  764,  474,  764,  764,  480,
 /*  4010 */   764,  764,   85,  764,  764,  188,  764,  494,  516,  518,
 /*  4020 */    43,  478,  763,  764,   47,  536,  572,  764,  764,  764,
 /*  4030 */    44,  532,  764,  387,  764,  538,  764,  764,  764,  733,
 /*  4040 */   733,  733,  733,  729,  731,  732,  733,  764,  570,  249,
 /*  4050 */    99,  764,  743,  297,  764,  804,  819,  764,  764,  182,
 /*  4060 */   741,  764,  745,  735,  728,  193,  764,  194,  764,  225,
 /*  4070 */   764,   89,   90,  507,   92,   93,  764,  764,  764,  764,
 /*  4080 */   108,   97,  764,   96,  764,  764,  764,  764,  764,  764,
 /*  4090 */   764,  764,  764,  746,  537,  764,  527,  244,  764,  764,
 /*  4100 */   557,  764,  556,  764,  393,  511,  764,  766,  764,  764,
 /*  4110 */   764,  764,  764,  764,  764,  764,  104,  105,  764,  764,
 /*  4120 */   764,  764,   77,  764,  106,  154,  152,  107,  109,  110,
 /*  4130 */   111,  112,  116,  114,  115,  764,   29,  158,  121,  764,
 /*  4140 */   764,  764,  764,  187,  764,  764,  764,  764,  764,  764,
 /*  4150 */   253,  505,   33,   28,  541,  764,  560,  764,  502,  764,
 /*  4160 */   474,  764,  764,  480,  764,  764,   85,  764,  764,  188,
 /*  4170 */   764,  494,  516,  518,   43,  478,  763,  764,   47,  536,
 /*  4180 */   572,  764,  764,  764,   44,  532,  764,  764,  764,  538,
 /*  4190 */   764,  764,  764,  733,  733,  733,  733,  729,  731,  732,
 /*  4200 */   733,  764,  570,  249,   99,  764,  743,  297,  764,  804,
 /*  4210 */   819,  561,  235,  182,  764,  764,  745,  735,  728,  193,
 /*  4220 */   764,  194,  764,  225,  764,   89,   90,  507,   92,   93,
 /*  4230 */   764,  764,  764,  336,  108,   97,  764,   96,  764,  764,
 /*  4240 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  813,
 /*  4250 */   369,  250,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  4260 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  4270 */   104,  105,  764,  764,  436,  672,   77,  741,  106,  154,
 /*  4280 */   152,  107,  109,  110,  111,  112,  116,  114,  115,  764,
 /*  4290 */    29,  158,  121,  764,  764,  538,  764,  240,  206,  764,
 /*  4300 */   822,  764,  740,  825,  253,  879,  764,  764,  668,  249,
 /*  4310 */   746,  537,  764,  527,  244,  764,  819,  385,  764,  517,
 /*  4320 */   764,  393,  511,  764,  766,  764,  516,  518,  764,  225,
 /*  4330 */   763,  764,  764,  536,  764,  764,  839,  840,  826,  532,
 /*  4340 */   561,  458,  764,  538,  764,  764,  764,  733,  733,  733,
 /*  4350 */   733,  729,  731,  732,  733,  764,  668,  249,   99,  712,
 /*  4360 */   764,  561,  235,  764,  819,  137,  764,  182,  764,  764,
 /*  4370 */   745,  735,  728,  193,  764,  194,  764,  225,  764,   89,
 /*  4380 */    90,  507,   92,   93,  764,  764,  764,  764,  108,   97,
 /*  4390 */   764,   96,  408,  764,  764,  764,  764,  764,  764,  794,
 /*  4400 */   407,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  4410 */   764,  764,  764,  764,  764,  157,  823,  450,  451,  445,
 /*  4420 */   464,  764,  764,  764,  104,  105,  764,  741,  764,  764,
 /*  4430 */    77,  764,  106,  154,  152,  107,  109,  110,  111,  112,
 /*  4440 */   116,  114,  115,  764,   29,  158,  121,  764,  764,  561,
 /*  4450 */   235,  240,  764,  764,  764,  764,  764,  764,  253,  764,
 /*  4460 */   746,  537,  764,  527,  244,  764,  764,  557,  764,  556,
 /*  4470 */   764,  393,  511,  764,  766,  764,  764,  764,  764,  764,
 /*  4480 */   516,  518,  764,  764,  763,  764,  634,  536,  409,  764,
 /*  4490 */   764,  764,  764,  532,  813,  764,  764,  538,  764,  764,
 /*  4500 */   764,  733,  733,  733,  733,  729,  731,  732,  733,  764,
 /*  4510 */   668,  249,   99,  764,  764,  741,  764,  764,  819,  137,
 /*  4520 */   764,  182,  764,  764,  745,  735,  728,  193,  764,  194,
 /*  4530 */   764,  225,  764,   89,   90,  507,   92,   93,  764,  764,
 /*  4540 */   538,  764,  108,   97,  764,   96,  764,  764,  746,  537,
 /*  4550 */   764,  527,  244,  668,  249,  557,  764,  556,  764,  393,
 /*  4560 */   511,  819,  766,  764,  764,  764,  155,  764,  764,  764,
 /*  4570 */   764,  764,  764,  764,  225,  764,  764,  764,  104,  105,
 /*  4580 */   764,  764,  764,  764,   77,  764,  106,  154,  152,  107,
 /*  4590 */   109,  110,  111,  112,  116,  114,  115,  764,   29,  158,
 /*  4600 */   121,  764,  764,  764,  764,  240,  764,  764,  764,  764,
 /*  4610 */   764,  764,  253,  764,  764,  764,  764,  764,  764,  827,
 /*  4620 */   827,  827,  827,  827,  827,  839,  840,  826,  764,  561,
 /*  4630 */   458,  764,  764,  764,  516,  518,  764,  764,  763,  764,
 /*  4640 */   764,  536,  764,  186,  764,  764,  820,  532,  764,  764,
 /*  4650 */   764,  538,  764,  764,  764,  733,  733,  733,  733,  729,
 /*  4660 */   731,  732,  733,  764,  668,  249,   99,  764,  764,  764,
 /*  4670 */   764,  764,  819,  561,  235,  182,  764,  764,  745,  735,
 /*  4680 */   728,  193,  764,  194,  666,  225,  764,   89,   90,  507,
 /*  4690 */    92,   93,  764,  764,  764,  330,  108,   97,  764,   96,
 /*  4700 */   764,  764,  764,  400,  764,  877,  450,  451,  445,  464,
 /*  4710 */   764,  764,  369,  250,  118,  764,  764,  764,  764,  764,
 /*  4720 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  4730 */   764,  764,  104,  105,  764,  764,  764,  764,   77,  741,
 /*  4740 */   106,  154,  152,  107,  109,  110,  111,  112,  116,  114,
 /*  4750 */   115,  764,   29,  158,  121,  764,  764,  764,  805,  240,
 /*  4760 */   764,  764,  822,  764,  740,  825,  253,  879,  764,  764,
 /*  4770 */   764,  764,  746,  537,  764,  527,  244,  764,  764,  385,
 /*  4780 */   764,  517,  764,  393,  511,  764,  766,  764,  516,  518,
 /*  4790 */   764,  764,  763,  764,  764,  536,  764,  764,  764,  764,
 /*  4800 */   764,  532,  764,  764,  764,  538,  764,  764,  764,  733,
 /*  4810 */   733,  733,  733,  729,  731,  732,  733,  764,  668,  249,
 /*  4820 */    99,  764,  764,  764,  764,  764,  819,  561,  235,  182,
 /*  4830 */   764,  764,  745,  735,  728,  193,  764,  194,  764,  225,
 /*  4840 */   764,   89,   90,  507,   92,   93,  764,  764,  764,  330,
 /*  4850 */   108,   97,  764,   96,  764,  764,  764,  827,  827,  827,
 /*  4860 */   827,  827,  827,  764,  764,  764,  369,  250,  764,  764,
 /*  4870 */   764,  764,  764,  764,  153,  764,  764,  764,  764,  764,
 /*  4880 */   764,  186,  764,  764,  820,  764,  104,  105,  764,  764,
 /*  4890 */   764,  764,   77,  741,  106,  154,  152,  107,  109,  110,
 /*  4900 */   111,  112,  116,  114,  115,  764,   29,  158,  121,  764,
 /*  4910 */   764,  764,  798,  240,  764,  764,  822,  764,  740,  825,
 /*  4920 */   253,  879,  814,  764,  764,  764,  746,  537,  764,  527,
 /*  4930 */   244,  764,  764,  385,  764,  517,  764,  393,  511,  764,
 /*  4940 */   766,  764,  516,  518,  764,  764,  763,  764,  764,  536,
 /*  4950 */   764,  764,  764,  764,  764,  532,  764,  764,  764,  538,
 /*  4960 */   764,  764,  764,  733,  733,  733,  733,  729,  731,  732,
 /*  4970 */   733,  764,  668,  249,   99,  764,  764,  764,  764,  764,
 /*  4980 */   819,  561,  235,  182,  764,  764,  745,  735,  728,  193,
 /*  4990 */   764,  194,  764,  225,  764,   89,   90,  507,   92,   93,
 /*  5000 */   764,  764,  764,  326,  108,   97,  764,   96,  475,  764,
 /*  5010 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  5020 */   369,  250,  764,  764,  764,  764,  764,  764,  149,  764,
 /*  5030 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  5040 */   104,  105,  764,  764,  764,  764,   77,  741,  106,  154,
 /*  5050 */   152,  107,  109,  110,  111,  112,  116,  114,  115,  764,
 /*  5060 */    29,  158,  121,  764,  764,  764,  764,  240,  764,  764,
 /*  5070 */   822,  764,  740,  825,  253,  879,  764,  764,  764,  764,
 /*  5080 */   746,  537,  764,  527,  244,  764,  764,  385,  764,  517,
 /*  5090 */   764,  393,  511,  764,  766,  764,  516,  518,  764,  764,
 /*  5100 */   763,  764,  764,  536,  764,  764,  764,  764,  764,  532,
 /*  5110 */   764,  764,  764,  538,  764,  764,  764,  733,  733,  733,
 /*  5120 */   733,  729,  731,  732,  733,  764,  668,  249,   99,  764,
 /*  5130 */   764,  764,  764,  764,  819,  561,  235,  182,  764,  764,
 /*  5140 */   745,  735,  728,  193,  764,  194,  764,  225,  764,   89,
 /*  5150 */    90,  507,   92,   93,  764,  764,  764,  326,  108,   97,
 /*  5160 */   764,   96,  459,  764,  764,  764,  764,  764,  764,  764,
 /*  5170 */   764,  764,  764,  764,  369,  250,  764,  764,  764,  764,
 /*  5180 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  5190 */   764,  764,  764,  764,  104,  105,  764,  764,  764,  764,
 /*  5200 */    77,  741,  106,  154,  152,  107,  109,  110,  111,  112,
 /*  5210 */   116,  114,  115,  764,   29,  158,  121,  764,  764,  764,
 /*  5220 */   764,  240,  764,  764,  822,  764,  740,  825,  253,  879,
 /*  5230 */   764,  764,  764,  764,  746,  537,  764,  527,  244,  764,
 /*  5240 */   764,  385,  764,  517,  764,  393,  511,  764,  766,  764,
 /*  5250 */   516,  518,  764,  764,  763,  764,  764,  536,  764,  764,
 /*  5260 */   764,  764,  764,  532,  764,  764,  764,  538,  764,  764,
 /*  5270 */   764,  733,  733,  733,  733,  729,  731,  732,  733,  764,
 /*  5280 */   668,  249,   99,  764,  764,  764,  764,  764,  819,  561,
 /*  5290 */   235,  182,  764,  764,  745,  735,  728,  193,  764,  194,
 /*  5300 */   764,  225,  764,  403,  764,   89,   90,  507,   92,   93,
 /*  5310 */   764,  307,  764,  764,  108,   97,  764,   96,  764,  764,
 /*  5320 */   764,  764,  764,  764,  764,  764,  764,  764,  369,  250,
 /*  5330 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  5340 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  5350 */   104,  105,  764,  764,  764,  741,   77,  764,  106,  154,
 /*  5360 */   152,  107,  109,  110,  111,  112,  116,  114,  115,  764,
 /*  5370 */    29,  158,  121,  764,  764,  764,  764,  240,  822,  764,
 /*  5380 */   740,  825,  764,  879,  253,  764,  764,  764,  746,  537,
 /*  5390 */   764,  527,  244,  764,  764,  385,  533,  517,  764,  393,
 /*  5400 */   511,  764,  766,  764,  248,  780,  516,  518,  764,  764,
 /*  5410 */   763,  764,  764,  536,  764,  764,  764,  764,  764,  532,
 /*  5420 */   764,  764,  764,  538,  764,  764,  764,  733,  733,  733,
 /*  5430 */   733,  729,  731,  732,  733,  764,  668,  249,   99,  124,
 /*  5440 */   136,  122,  764,  764,  819,  764,  764,  182,  764,  764,
 /*  5450 */   745,  735,  728,  193,  764,  194,  764,  225,  764,   49,
 /*  5460 */   617,  103,  132,  134,   62,   66,   68,   55,   76,   56,
 /*  5470 */    53,  117,   74,   78,   98,  100,   58,   57,   64,   63,
 /*  5480 */    65,   54,   60,   59,  764,  163,  764,  764,  764,  764,
 /*  5490 */   764,  764,  764,  764,  151,  764,  764,   61,  764,  764,
 /*  5500 */    50,  128,  139,  140,  120,  119,  129,  133,  135,  130,
 /*  5510 */   125,  123,  138,  764,  764,  764,  561,  235,  851,  808,
 /*  5520 */   748,  749,  751,  764,  764,  764,   29,  764,  764,  764,
 /*  5530 */   764,  764,  764,  813,  764,  869,  758,  759,  305,  764,
 /*  5540 */   764,  677,  676,  764,  764,  764,  764,  764,  764,  764,
 /*  5550 */   764,  764, 1299,  764,  764,  369,  255,  764,  764,  764,
 /*  5560 */   764,  764,  764,  501,  764,  764,  764,  764,  596,  461,
 /*  5570 */   764,  764,  439,  394,  764,  532,  764,  764,  764,  538,
 /*  5580 */   764,  764,  741,  764,  764,  764,  764,  764,  764,  764,
 /*  5590 */   764,  764,  668,  249,   79,  764,  764,  764,  764,  764,
 /*  5600 */   819,  764,  764,  764,  764,  822,  745,  740,  825,  764,
 /*  5610 */   879,  764,  764,  225,  764,  746,  537,  764,  527,  244,
 /*  5620 */   764,  764,  385, 1299,  517,  764,  393,  511, 1299,  766,
 /*  5630 */   124,  136,  122,  764,  764,  764,  764,  764, 1299,  764,
 /*  5640 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  5650 */    49,  764,  103,  132,  134,   62,   66,   68,   55,   76,
 /*  5660 */    56,   53,  117,   74,   78,   98,  100,   58,   57,   64,
 /*  5670 */    63,   65,   54,   60,   59,  764,  163,  124,  136,  122,
 /*  5680 */   764,  764,  764,  764,  764,  764,  764,  764,   61,  764,
 /*  5690 */   764,  764,  764,  764,  764,  764,  764,   49,  764,  103,
 /*  5700 */   132,  134,   62,   66,   68,   55,   76,   56,   53,  117,
 /*  5710 */    74,   78,   98,  100,   58,   57,   64,   63,   65,   54,
 /*  5720 */    60,   59,  764,  163,  764,  764,  764,  764,  764,  764,
 /*  5730 */   764,  764,  764,  764,  764,   61,  764,  764,  764,  764,
 /*  5740 */   764,  764,  764,  124,  136,  122,  764,  764,  764,  764,
 /*  5750 */   764,  764,  764,  764,  764,   29,  764,  764,   23,  764,
 /*  5760 */   764,  764,  813,   49,  764,  103,  132,  134,   62,   66,
 /*  5770 */    68,   55,   76,   56,   53,  117,   74,   78,   98,  100,
 /*  5780 */    58,   57,   64,   63,   65,   54,   60,   59,  764,  163,
 /*  5790 */   764,  792,  561,  235,  661,  670,  673,  674,  675,  764,
 /*  5800 */   764,   61,  764,  764,  532,  764,  802,  764,  538,  764,
 /*  5810 */   764,  764,  758,  759,  305,  764,  764,  764,  764,  764,
 /*  5820 */   764,  668,  249,   79,  764,  764,  764,  764,  764,  819,
 /*  5830 */   764,  369,  255,  764,  764,  745,  764,  764,  764,  501,
 /*  5840 */   764,  764,  225,  764,  764,  764,  764,  764,  439,  394,
 /*  5850 */   764,  764,  764,  764,  764,  764,  764,  764,  741,  764,
 /*  5860 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  5870 */   764,  381,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  5880 */   764,  822,  764,  740,  825,  764,  879,  764,  764,  764,
 /*  5890 */   764,  746,  537,  764,  527,  244,  764,  764,  385,  764,
 /*  5900 */   517,  764,  393,  511,  764,  766,  124,  136,  122,  764,
 /*  5910 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  5920 */   764,  764,  764,  764,  764,  764,   49,  764,  103,  132,
 /*  5930 */   134,   62,   66,   68,   55,   76,   56,   53,  117,   74,
 /*  5940 */    78,   98,  100,   58,   57,   64,   63,   65,   54,   60,
 /*  5950 */    59,  764,  163,  124,  136,  122,  764,  764,  764,  764,
 /*  5960 */   764,  764,  764,  764,   61,  764,  764,  764,  764,  764,
 /*  5970 */   764,  764,  764,   49,  764,  103,  132,  134,   62,   66,
 /*  5980 */    68,   55,   76,   56,   53,  117,   74,   78,   98,  100,
 /*  5990 */    58,   57,   64,   63,   65,   54,   60,   59,  764,  163,
 /*  6000 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  6010 */   764,   61,  764,  764,  764,  764,  764,  764,  764,  124,
 /*  6020 */   136,  122,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  6030 */   764,  764,  764,  764,  764,  764,  764,  806,  764,   49,
 /*  6040 */   764,  103,  132,  134,   62,   66,   68,   55,   76,   56,
 /*  6050 */    53,  117,   74,   78,   98,  100,   58,   57,   64,   63,
 /*  6060 */    65,   54,   60,   59,  764,  163,  124,  136,  122,  764,
 /*  6070 */   764,  764,  764,  764,  764,  764,  764,   61,  764,  764,
 /*  6080 */   764,  764,  764,  764,  709,  764,   49,  764,  103,  132,
 /*  6090 */   134,   62,   66,   68,   55,   76,   56,   53,  117,   74,
 /*  6100 */    78,   98,  100,   58,   57,   64,   63,   65,   54,   60,
 /*  6110 */    59,  764,  163,  764,  764,  764,  764,  764,  764,  764,
 /*  6120 */   764,  764,  764,  764,   61,  764,  764,  764,  764,  764,
 /*  6130 */   764,  764,  124,  136,  122,  764,  764,  764,  764,  764,
 /*  6140 */   764,  764,  764,  764,  764,  764,  764,  791,  764,  764,
 /*  6150 */   764,  764,   49,  764,  103,  132,  134,   62,   66,   68,
 /*  6160 */    55,   76,   56,   53,  117,   74,   78,   98,  100,   58,
 /*  6170 */    57,   64,   63,   65,   54,   60,   59,  764,  163,  124,
 /*  6180 */   136,  122,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  6190 */    61,  764,  764,  764,  764,  764,  764,  681,  764,   49,
 /*  6200 */   764,  103,  132,  134,   62,   66,   68,   55,   76,   56,
 /*  6210 */    53,  117,   74,   78,   98,  100,   58,   57,   64,   63,
 /*  6220 */    65,   54,   60,   59,  764,  163,  764,  764,  764,  764,
 /*  6230 */   764,  764,  764,  764,  764,  764,  764,   61,  764,  764,
 /*  6240 */   764,  764,  764,  764,  764,  124,  136,  122,  764,  764,
 /*  6250 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  6260 */    26,  764,  561,  235,  764,   49,  764,  103,  132,  134,
 /*  6270 */    62,   66,   68,   55,   76,   56,   53,  117,   74,   78,
 /*  6280 */    98,  100,   58,   57,   64,   63,   65,   54,   60,   59,
 /*  6290 */   764,  163,  764,  764,  764,  764,  764,  764,  764,  493,
 /*  6300 */   764,  409,  764,   61,  764,  764,  764,  477,  764,  764,
 /*  6310 */   764,  124,  136,  122,  764,  764,  764,  764,  764,  764,
 /*  6320 */   764,  764,  764,  764,  764,  764,  764,  764,  741,  764,
 /*  6330 */   145,   49,  764,  103,  132,  134,   62,   66,   68,   55,
 /*  6340 */    76,   56,   53,  117,   74,   78,   98,  100,   58,   57,
 /*  6350 */    64,   63,   65,   54,   60,   59,  764,  163,  124,  136,
 /*  6360 */   122,  746,  537,  764,  527,  244,  764,  764,  557,   61,
 /*  6370 */   556,  764,  393,  511,  764,  766,  764,  764,   49,  764,
 /*  6380 */   103,  132,  134,   62,   66,   68,   55,   76,   56,   53,
 /*  6390 */   117,   74,   78,   98,  100,   58,   57,   64,   63,   65,
 /*  6400 */    54,   60,   59,  764,  163,  764,  764,  764,  764,  764,
 /*  6410 */   764,  764,  764,  764,  764,  764,   61,  764,  764,  764,
 /*  6420 */   764,  764,  764,  764,  124,  136,  122,  764,  764,  764,
 /*  6430 */   764,  764,  764,  764,  764,  764,  764,  764,  764,   25,
 /*  6440 */   764,  764,  764,  764,   49,  764,  103,  132,  134,   62,
 /*  6450 */    66,   68,   55,   76,   56,   53,  117,   74,   78,   98,
 /*  6460 */   100,   58,   57,   64,   63,   65,   54,   60,   59,  764,
 /*  6470 */   163,  124,  136,  122,  764,  764,  764,  764,  764,  764,
 /*  6480 */   764,  764,   61,  764,  764,  764,  558,  764,  764,  764,
 /*  6490 */   764,   49,  764,  103,  132,  134,   62,   66,   68,   55,
 /*  6500 */    76,   56,   53,  117,   74,   78,   98,  100,   58,   57,
 /*  6510 */    64,   63,   65,   54,   60,   59,  764,  163,  764,  764,
 /*  6520 */   764,  764,  764,  764,  764,  764,  764,  764,  764,   61,
 /*  6530 */   764,  764,  764,  764,  764,  764,  764,  124,  136,  122,
 /*  6540 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  6550 */   764,  764,  764,  764,  764,  705,  764,   49,  764,  103,
 /*  6560 */   132,  134,   62,   66,   68,   55,   76,   56,   53,  117,
 /*  6570 */    74,   78,   98,  100,   58,   57,   64,   63,   65,   54,
 /*  6580 */    60,   59,  764,  163,  124,  136,  122,  764,  764,   52,
 /*  6590 */   764,  764,  764,  764,  764,   61,  764,  764,  764,  793,
 /*  6600 */   764,  764,  764,  764,   49,  764,  103,  132,  134,   62,
 /*  6610 */    66,   68,   55,   76,   56,   53,  117,   74,   78,   98,
 /*  6620 */   100,   58,   57,   64,   63,   65,   54,   60,   59,  764,
 /*  6630 */   163,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  6640 */   764,  764,   61,  764,  764,  764,  764,  764,  764,  764,
 /*  6650 */   124,  136,  122,  764,  764,  764,  764,  764,  764,  764,
 /*  6660 */   764,  764,  764,  764,  764,  764,  730,  764,  764,  764,
 /*  6670 */    49,  764,  103,  132,  134,   62,   66,   68,   55,   76,
 /*  6680 */    56,   53,  117,   74,   78,   98,  100,   58,   57,   64,
 /*  6690 */    63,   65,   54,   60,   59,  764,  163,  124,  136,  122,
 /*  6700 */   764,  764,  764,  764,  764,  764,  764,  764,   61,  764,
 /*  6710 */   764,  764,  764,  764,  764,  764,  764,   49,  764,  103,
 /*  6720 */   132,  134,   62,   66,   68,   55,   76,   56,   53,  117,
 /*  6730 */    74,   78,   98,  100,   58,   57,   64,   63,   65,   54,
 /*  6740 */    60,   59,  764,  163,  764,  764,  764,  764,  764,  764,
 /*  6750 */   764,  764,  764,  764,  764,   61,  764,  764,  764,  764,
 /*  6760 */   764,  764,  764,  124,  136,  122,  764,  764,  764,  764,
 /*  6770 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  6780 */   764,  871,  764,   49,  764,  103,  132,  134,   62,   66,
 /*  6790 */    68,   55,   76,   56,   53,  117,   74,   78,   98,  100,
 /*  6800 */    58,   57,   64,   63,   65,   54,   60,   59,  764,  163,
 /*  6810 */   124,  136,  122,  764,  764,  764,  764,  764,  764,  764,
 /*  6820 */   764,   61,  764,  764,  764,  764,  764,  764,  800,  764,
 /*  6830 */    49,  764,  103,  132,  134,   62,   66,   68,   55,   76,
 /*  6840 */    56,   53,  117,   74,   78,   98,  100,   58,   57,   64,
 /*  6850 */    63,   65,   54,   60,   59,  764,  163,  764,  764,  764,
 /*  6860 */   764,  764,  764,  764,  764,  764,  764,  764,   61,  764,
 /*  6870 */   764,  764,  764,  764,  764,  764,  124,  136,  122,  764,
 /*  6880 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  6890 */   764,  546,  764,  764,  764,  764,   49,  764,  103,  132,
 /*  6900 */   134,   62,   66,   68,   55,   76,   56,   53,  117,   74,
 /*  6910 */    78,   98,  100,   58,   57,   64,   63,   65,   54,   60,
 /*  6920 */    59,  764,  163,  136,  122,  764,  764,  764,  764,  764,
 /*  6930 */   764,  764,  764,  764,   61,  764,  764,  764,  234,  764,
 /*  6940 */   764,  764,   49,  764,  103,  132,  134,   62,   66,   68,
 /*  6950 */    55,   76,   56,   53,  117,   74,   78,   98,  100,   58,
 /*  6960 */    57,   64,   63,   65,   54,   60,   59,  764,  163,  561,
 /*  6970 */   235,  605,  764,  764,  764,  764,  764,  764,  764,   29,
 /*  6980 */    61,  764,  764,  764,  764,  764,  813,  764,  764,  758,
 /*  6990 */   759,  305,  764,  764,  764,  764,  764,  764,  561,  235,
 /*  7000 */   682,  764,  764,  765,  764,  764,  764,  764,  369,  250,
 /*  7010 */   764,  764,  764,  764,  764,  764,  764,  764,  758,  759,
 /*  7020 */   305,  760,  448,  764,  764,  439,  394,  764,  532,  764,
 /*  7030 */   764,  764,  538,  764,  764,  741,  764,  369,  250,  764,
 /*  7040 */   764,  764,  764,  764,  764,  668,  249,   79,  764,  764,
 /*  7050 */   764,  764,  764,  819,  439,  394,  764,  764,  822,  745,
 /*  7060 */   740,  825,  764,  879,  741,  764,  225,  764,  746,  537,
 /*  7070 */   764,  527,  244,  764,  764,  385,  764,  517,  764,  393,
 /*  7080 */   511,  764,  766,  561,  235,  764,  764,  822,  764,  740,
 /*  7090 */   825,  764,  879,  764,  764,  764,  764,  746,  537,  764,
 /*  7100 */   527,  244,  764,  764,  385,  326,  517,  764,  393,  511,
 /*  7110 */   467,  766,  561,  235,  600,  764,  764,  764,  764,  764,
 /*  7120 */   764,  764,  369,  250,  764,  764,  764,  764,  764,  764,
 /*  7130 */   764,  764,  758,  759,  305,  764,  764,  764,  764,  764,
 /*  7140 */   764,  764,  764,  764,  764,  790,  764,  764,  764,  741,
 /*  7150 */   764,  369,  250,  764,  764,  764,  764,  764,  764,  764,
 /*  7160 */   764,  764,  764,  764,  764,  764,  764,  764,  439,  394,
 /*  7170 */   764,  764,  822,  764,  740,  825,  764,  879,  741,  764,
 /*  7180 */   764,  764,  746,  537,  764,  527,  244,  764,  764,  385,
 /*  7190 */   764,  517,  764,  393,  511,  764,  766,  764,  764,  764,
 /*  7200 */   764,  822,  764,  740,  825,  764,  879,  764,  764,  764,
 /*  7210 */   764,  746,  537,  764,  527,  244,  764,  764,  385,  764,
 /*  7220 */   517,  764,  393,  511,  764,  766,  561,  235,  589,  764,
 /*  7230 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  7240 */   764,  764,  764,  764,  764,  764,  758,  759,  305,  764,
 /*  7250 */   764,  785,  764,  764,  764,  561,  235,  828,  764,  764,
 /*  7260 */   764,  764,  764,  764,  764,  369,  250,  764,  764,  764,
 /*  7270 */   764,  764,  764,  764,  764,  758,  759,  305,  764,  764,
 /*  7280 */   764,  764,  439,  394,  764,  764,  764,  764,  764,  764,
 /*  7290 */   764,  764,  741,  764,  369,  250,  764,  764,  764,  764,
 /*  7300 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  7310 */   764,  439,  394,  764,  764,  822,  764,  740,  825,  764,
 /*  7320 */   879,  741,  764,  764,  764,  746,  537,  764,  527,  244,
 /*  7330 */   764,  764,  385,  764,  517,  764,  393,  511,  764,  766,
 /*  7340 */   764,  764,  764,  764,  822,  764,  740,  825,  764,  879,
 /*  7350 */   764,  764,  764,  764,  746,  537,  764,  527,  244,  764,
 /*  7360 */   764,  385,  764,  517,  764,  393,  511,  764,  766,  561,
 /*  7370 */   235,  848,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  7380 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  758,
 /*  7390 */   759,  305,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  7400 */   764,  764,  764,  764,  764,  764,  764,  764,  369,  250,
 /*  7410 */   764,  764,  764,  764,  764,  764,  764,  561,  235,  832,
 /*  7420 */   764,  764,  764,  764,  764,  439,  394,  764,  764,  764,
 /*  7430 */   764,  764,  764,  764,  764,  741,  764,  758,  759,  305,
 /*  7440 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  7450 */   764,  764,  764,  764,  764,  764,  369,  250,  822,  764,
 /*  7460 */   740,  825,  764,  879,  764,  764,  764,  764,  746,  537,
 /*  7470 */   764,  527,  244,  439,  394,  385,  764,  517,  764,  393,
 /*  7480 */   511,  764,  766,  741,  764,  764,  764,  764,  764,  764,
 /*  7490 */   764,  764,  561,  235,  535,  764,  764,  764,  764,  764,
 /*  7500 */   764,  764,  764,  764,  764,  764,  822,  764,  740,  825,
 /*  7510 */   764,  879,  758,  759,  305,  764,  746,  537,  764,  527,
 /*  7520 */   244,  561,  235,  385,  764,  517,  764,  393,  511,  764,
 /*  7530 */   766,  369,  250,  764,  764,  764,  764,  764,  764,  764,
 /*  7540 */   764,  764,  764,  337,  764,  563,  764,  764,  439,  394,
 /*  7550 */   764,  764,  764,  764,  764,  764,  764,  764,  741,  764,
 /*  7560 */   369,  250,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  7570 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  7580 */   764,  822,  764,  740,  825,  764,  879,  741,  764,  764,
 /*  7590 */   764,  746,  537,  764,  527,  244,  764,  764,  385,  764,
 /*  7600 */   517,  764,  393,  511,  764,  766,  764,  462,  764,  764,
 /*  7610 */   822,  764,  740,  825,  764,  879,  764,  764,  764,  764,
 /*  7620 */   746,  537,  764,  527,  244,  764,  764,  385,  764,  517,
 /*  7630 */   764,  393,  511,  764,  766,  561,  235,  764,  764,  764,
 /*  7640 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  7650 */   764,  764,  764,  764,  764,  764,  764,  332,  764,  764,
 /*  7660 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  7670 */   764,  764,  764,  764,  369,  250,  764,  764,  561,  235,
 /*  7680 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  7690 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  7700 */   337,  741,  566,  764,  764,  764,  764,  764,  764,  764,
 /*  7710 */   764,  764,  764,  764,  764,  764,  764,  369,  250,  764,
 /*  7720 */   764,  764,  764,  764,  822,  764,  740,  825,  764,  879,
 /*  7730 */   764,  764,  764,  764,  746,  537,  764,  527,  244,  764,
 /*  7740 */   764,  385,  764,  517,  741,  393,  511,  764,  766,  764,
 /*  7750 */   764,  764,  764,  764,  415,  789,  764,  764,  764,  764,
 /*  7760 */   764,  561,  235,  764,  462,  764,  764,  822,  764,  740,
 /*  7770 */   825,  764,  879,  764,  764,  764,  764,  746,  537,  764,
 /*  7780 */   527,  244,  764,  337,  385,  564,  517,  764,  393,  511,
 /*  7790 */   764,  766,  764,  561,  235,  764,  764,  764,  764,  764,
 /*  7800 */   369,  250,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  7810 */   764,  764,  764,  764,  764,  319,  764,  764,  764,  764,
 /*  7820 */   764,  764,  764,  764,  764,  479,  764,  741,  764,  764,
 /*  7830 */   764,  764,  369,  250,  764,  764,  764,  764,  764,  764,
 /*  7840 */   764,  764,  764,  764,  764,  764,  764,  462,  764,  764,
 /*  7850 */   822,  764,  740,  825,  764,  879,  764,  764,  764,  741,
 /*  7860 */   746,  537,  764,  527,  244,  764,  764,  385,  764,  517,
 /*  7870 */   764,  393,  511,  764,  766,  764,  764,  764,  764,  764,
 /*  7880 */   764,  764,  822,  764,  740,  825,  764,  879,  764,  764,
 /*  7890 */   561,  235,  746,  537,  764,  527,  244,  764,  764,  385,
 /*  7900 */   764,  517,  764,  393,  511,  764,  766,  764,  764,  764,
 /*  7910 */   764,  764,  326,  764,  764,  764,  764,  545,  764,  764,
 /*  7920 */   764,  561,  235,  764,  764,  764,  764,  764,  764,  369,
 /*  7930 */   250,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  7940 */   764,  764,  764,  336,  764,  764,  764,  764,  764,  764,
 /*  7950 */   764,  764,  764,  764,  764,  764,  741,  764,  764,  764,
 /*  7960 */   369,  250,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  7970 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  822,
 /*  7980 */   764,  740,  825,  764,  879,  713,  764,  741,  764,  746,
 /*  7990 */   537,  764,  527,  244,  764,  764,  385,  764,  517,  764,
 /*  8000 */   393,  511,  764,  766,  764,  764,  764,  764,  764,  764,
 /*  8010 */   822,  764,  740,  825,  764,  879,  561,  235,  764,  764,
 /*  8020 */   746,  537,  764,  527,  244,  764,  764,  385,  764,  517,
 /*  8030 */   764,  393,  511,  764,  766,  764,  764,  764,  307,  764,
 /*  8040 */   764,  764,  764,  764,  764,  764,  764,  764,  561,  235,
 /*  8050 */   764,  764,  764,  764,  764,  369,  250,  764,  764,  764,
 /*  8060 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  8070 */   326,  764,  764,  764,  764,  463,  764,  764,  764,  764,
 /*  8080 */   764,  764,  741,  764,  764,  764,  764,  369,  250,  764,
 /*  8090 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  8100 */   764,  764,  764,  764,  764,  822,  764,  740,  825,  764,
 /*  8110 */   879,  764,  764,  764,  741,  746,  537,  764,  527,  244,
 /*  8120 */   764,  764,  385,  764,  517,  764,  393,  511,  764,  766,
 /*  8130 */   764,  764,  774,  764,  764,  764,  764,  822,  764,  740,
 /*  8140 */   825,  764,  879,  764,  764,  561,  235,  746,  537,  764,
 /*  8150 */   527,  244,  764,  764,  385,  764,  517,  764,  393,  511,
 /*  8160 */   764,  766,  764,  764,  764,  764,  764,  332,  764,  764,
 /*  8170 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  8180 */   764,  764,  764,  764,  369,  250,  561,  235,  764,  764,
 /*  8190 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  8200 */   764,  764,  764,  764,  764,  764,  764,  764,  326,  764,
 /*  8210 */   764,  741,  764,  486,  764,  764,  764,  764,  764,  764,
 /*  8220 */   764,  764,  764,  764,  764,  369,  250,  764,  764,  764,
 /*  8230 */   764,  764,  764,  764,  822,  764,  740,  825,  764,  879,
 /*  8240 */   764,  764,  764,  764,  746,  537,  764,  527,  244,  764,
 /*  8250 */   764,  385,  741,  517,  764,  393,  511,  764,  766,  764,
 /*  8260 */   764,  764,  764,  764,  764,  795,  764,  764,  764,  764,
 /*  8270 */   764,  561,  235,  764,  764,  822,  764,  740,  825,  764,
 /*  8280 */   879,  764,  764,  764,  764,  746,  537,  764,  527,  244,
 /*  8290 */   764,  764,  385,  326,  517,  764,  393,  511,  513,  766,
 /*  8300 */   764,  764,  764,  561,  235,  764,  764,  764,  764,  764,
 /*  8310 */   369,  250,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  8320 */   764,  764,  764,  764,  764,  335,  764,  764,  764,  764,
 /*  8330 */   764,  764,  764,  764,  764,  764,  764,  741,  764,  764,
 /*  8340 */   764,  764,  369,  250,  764,  764,  764,  764,  764,  764,
 /*  8350 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  8360 */   822,  764,  740,  825,  764,  879,  764,  764,  764,  741,
 /*  8370 */   746,  537,  764,  527,  244,  764,  764,  385,  764,  517,
 /*  8380 */   764,  393,  511,  764,  766,  764,  764,  764,  764,  764,
 /*  8390 */   764,  764,  822,  764,  740,  825,  764,  879,  764,  764,
 /*  8400 */   561,  235,  746,  537,  764,  527,  244,  764,  764,  385,
 /*  8410 */   764,  517,  764,  393,  511,  764,  766,  764,  764,  764,
 /*  8420 */   764,  764,  384,  764,  764,  764,  764,  764,  764,  764,
 /*  8430 */   764,  561,  235,  764,  764,  764,  764,  764,  764,  369,
 /*  8440 */   250,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  8450 */   764,  764,  764,  383,  764,  764,  764,  764,  764,  764,
 /*  8460 */   764,  764,  764,  764,  764,  764,  741,  764,  764,  764,
 /*  8470 */   369,  250,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  8480 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  822,
 /*  8490 */   764,  740,  825,  764,  879,  764,  764,  741,  764,  746,
 /*  8500 */   537,  764,  527,  244,  764,  764,  385,  764,  517,  764,
 /*  8510 */   393,  511,  764,  766,  764,  764,  764,  764,  764,  764,
 /*  8520 */   822,  764,  740,  825,  764,  879,  561,  235,  764,  764,
 /*  8530 */   746,  537,  764,  527,  244,  764,  764,  385,  764,  517,
 /*  8540 */   764,  393,  511,  764,  766,  764,  764,  764,  382,  764,
 /*  8550 */   764,  764,  764,  764,  764,  764,  764,  764,  561,  235,
 /*  8560 */   764,  764,  764,  764,  764,  369,  250,  764,  764,  764,
 /*  8570 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  8580 */   365,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  8590 */   764,  764,  741,  764,  764,  764,  764,  369,  250,  764,
 /*  8600 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  8610 */   764,  764,  764,  764,  764,  822,  764,  740,  825,  764,
 /*  8620 */   879,  764,  764,  764,  741,  746,  537,  764,  527,  244,
 /*  8630 */   764,  764,  385,  764,  517,  764,  393,  511,  764,  766,
 /*  8640 */   764,  764,  764,  764,  764,  764,  764,  822,  764,  740,
 /*  8650 */   825,  764,  879,  764,  764,  561,  235,  746,  537,  764,
 /*  8660 */   527,  244,  764,  764,  385,  764,  517,  764,  393,  511,
 /*  8670 */   764,  766,  764,  764,  764,  764,  764,  309,  764,  764,
 /*  8680 */   764,  764,  764,  764,  764,  764,  561,  235,  764,  764,
 /*  8690 */   764,  764,  764,  764,  369,  250,  764,  764,  764,  764,
 /*  8700 */   764,  764,  764,  764,  764,  764,  764,  764,  370,  764,
 /*  8710 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  8720 */   764,  741,  764,  764,  764,  369,  250,  764,  764,  764,
 /*  8730 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  8740 */   764,  764,  764,  764,  822,  764,  740,  825,  764,  879,
 /*  8750 */   764,  764,  741,  764,  746,  537,  764,  527,  244,  764,
 /*  8760 */   764,  385,  764,  517,  764,  393,  511,  764,  766,  764,
 /*  8770 */   764,  764,  764,  764,  764,  822,  764,  740,  825,  764,
 /*  8780 */   879,  561,  235,  764,  764,  746,  537,  764,  527,  244,
 /*  8790 */   764,  764,  385,  764,  517,  764,  393,  511,  764,  766,
 /*  8800 */   764,  764,  764,  321,  764,  764,  764,  764,  764,  764,
 /*  8810 */   764,  764,  764,  561,  235,  764,  764,  764,  764,  764,
 /*  8820 */   369,  250,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  8830 */   764,  764,  764,  764,  764,  315,  764,  764,  764,  764,
 /*  8840 */   764,  764,  764,  764,  764,  764,  764,  741,  764,  764,
 /*  8850 */   764,  764,  369,  250,  764,  764,  764,  764,  764,  764,
 /*  8860 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  8870 */   822,  764,  740,  825,  764,  879,  764,  764,  764,  741,
 /*  8880 */   746,  537,  764,  527,  244,  764,  764,  385,  764,  517,
 /*  8890 */   764,  393,  511,  764,  766,  764,  764,  764,  764,  764,
 /*  8900 */   764,  764,  822,  764,  740,  825,  764,  879,  764,  764,
 /*  8910 */   561,  235,  746,  537,  764,  527,  244,  764,  764,  385,
 /*  8920 */   764,  517,  764,  393,  511,  764,  766,  764,  764,  764,
 /*  8930 */   764,  764,  304,  764,  764,  764,  764,  764,  764,  764,
 /*  8940 */   764,  561,  235,  764,  764,  764,  764,  764,  764,  369,
 /*  8950 */   250,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  8960 */   764,  764,  764,  333,  764,  764,  764,  764,  764,  764,
 /*  8970 */   764,  764,  764,  764,  764,  764,  741,  764,  764,  764,
 /*  8980 */   369,  250,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  8990 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  822,
 /*  9000 */   764,  740,  825,  764,  879,  764,  764,  741,  764,  746,
 /*  9010 */   537,  764,  527,  244,  764,  764,  385,  764,  517,  764,
 /*  9020 */   393,  511,  764,  766,  764,  764,  764,  764,  764,  764,
 /*  9030 */   822,  764,  740,  825,  764,  879,  561,  235,  764,  764,
 /*  9040 */   746,  537,  764,  527,  244,  764,  764,  385,  764,  517,
 /*  9050 */   764,  393,  511,  764,  766,  764,  764,  764,  521,  764,
 /*  9060 */   764,  764,  764,  764,  764,  764,  764,  764,  561,  235,
 /*  9070 */   764,  764,  764,  764,  764,  369,  250,  764,  764,  764,
 /*  9080 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  9090 */   320,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  9100 */   764,  764,  741,  764,  764,  764,  764,  369,  250,  764,
 /*  9110 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  9120 */   764,  764,  764,  764,  764,  822,  764,  740,  825,  764,
 /*  9130 */   879,  764,  764,  764,  741,  746,  537,  764,  527,  244,
 /*  9140 */   764,  764,  385,  764,  517,  764,  393,  511,  764,  766,
 /*  9150 */   764,  764,  764,  764,  764,  764,  764,  822,  764,  740,
 /*  9160 */   825,  764,  879,  764,  764,  561,  235,  746,  537,  764,
 /*  9170 */   527,  244,  764,  764,  385,  764,  517,  764,  393,  511,
 /*  9180 */   764,  766,  764,  764,  764,  764,  764,  311,  764,  764,
 /*  9190 */   764,  764,  764,  764,  764,  764,  561,  235,  764,  764,
 /*  9200 */   764,  764,  764,  764,  369,  250,  764,  764,  764,  764,
 /*  9210 */   764,  764,  764,  764,  764,  764,  764,  764,  318,  764,
 /*  9220 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  9230 */   764,  741,  764,  764,  764,  369,  250,  764,  764,  764,
 /*  9240 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  9250 */   764,  764,  764,  764,  822,  764,  740,  825,  764,  879,
 /*  9260 */   764,  764,  741,  764,  746,  537,  764,  527,  244,  764,
 /*  9270 */   764,  385,  764,  517,  764,  393,  511,  764,  766,  764,
 /*  9280 */   764,  764,  764,  764,  764,  822,  764,  740,  825,  764,
 /*  9290 */   879,  561,  235,  764,  764,  746,  537,  764,  527,  244,
 /*  9300 */   764,  764,  385,  764,  517,  764,  393,  511,  764,  766,
 /*  9310 */   764,  764,  764,  374,  764,  764,  764,  764,  764,  764,
 /*  9320 */   764,  764,  764,  561,  235,  764,  764,  764,  764,  764,
 /*  9330 */   369,  250,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  9340 */   764,  764,  764,  764,  764,  322,  764,  764,  764,  764,
 /*  9350 */   764,  764,  764,  764,  764,  764,  764,  741,  764,  764,
 /*  9360 */   764,  764,  369,  250,  764,  764,  764,  764,  764,  764,
 /*  9370 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  9380 */   822,  764,  740,  825,  764,  879,  764,  764,  764,  741,
 /*  9390 */   746,  537,  764,  527,  244,  764,  764,  385,  764,  517,
 /*  9400 */   764,  393,  511,  764,  766,  764,  764,  764,  764,  764,
 /*  9410 */   764,  764,  822,  764,  740,  825,  764,  879,  764,  764,
 /*  9420 */   561,  235,  746,  537,  764,  527,  244,  764,  764,  385,
 /*  9430 */   764,  517,  764,  393,  511,  764,  766,  764,  764,  764,
 /*  9440 */   764,  764,  543,  764,  764,  764,  764,  764,  764,  764,
 /*  9450 */   764,  561,  235,  764,  764,  764,  764,  764,  764,  369,
 /*  9460 */   250,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  9470 */   764,  764,  764,  367,  764,  764,  764,  764,  764,  764,
 /*  9480 */   764,  764,  764,  764,  764,  764,  741,  764,  764,  764,
 /*  9490 */   369,  250,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  9500 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  822,
 /*  9510 */   764,  740,  825,  764,  879,  764,  764,  741,  764,  746,
 /*  9520 */   537,  764,  527,  244,  764,  764,  385,  764,  517,  764,
 /*  9530 */   393,  511,  764,  766,  764,  764,  764,  764,  764,  764,
 /*  9540 */   822,  764,  740,  825,  764,  879,  561,  235,  764,  764,
 /*  9550 */   746,  537,  764,  527,  244,  764,  764,  385,  764,  517,
 /*  9560 */   764,  393,  511,  764,  766,  764,  764,  764,  302,  764,
 /*  9570 */   764,  764,  764,  764,  764,  764,  764,  764,  561,  235,
 /*  9580 */   764,  764,  764,  764,  764,  369,  250,  764,  764,  764,
 /*  9590 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  9600 */   423,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  9610 */   764,  764,  741,  764,  764,  764,  764,  369,  250,  764,
 /*  9620 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  9630 */   764,  764,  764,  764,  764,  822,  764,  740,  825,  764,
 /*  9640 */   879,  764,  764,  764,  741,  746,  537,  764,  527,  244,
 /*  9650 */   764,  764,  385,  764,  517,  764,  393,  511,  764,  766,
 /*  9660 */   764,  764,  764,  764,  764,  764,  764,  822,  764,  740,
 /*  9670 */   825,  764,  879,  764,  764,  561,  235,  746,  537,  764,
 /*  9680 */   527,  244,  764,  764,  385,  764,  517,  764,  393,  511,
 /*  9690 */   764,  766,  764,  764,  764,  764,  764,  364,  764,  764,
 /*  9700 */   764,  764,  764,  764,  764,  764,  561,  235,  764,  764,
 /*  9710 */   764,  764,  764,  764,  369,  250,  764,  764,  764,  764,
 /*  9720 */   764,  764,  764,  764,  764,  764,  764,  764,  433,  764,
 /*  9730 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  9740 */   764,  741,  764,  764,  764,  369,  250,  764,  764,  764,
 /*  9750 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  9760 */   764,  764,  764,  764,  822,  764,  740,  825,  764,  879,
 /*  9770 */   764,  764,  741,  764,  746,  537,  764,  527,  244,  764,
 /*  9780 */   764,  385,  764,  517,  764,  393,  511,  764,  766,  764,
 /*  9790 */   764,  764,  764,  764,  764,  822,  764,  740,  825,  764,
 /*  9800 */   879,  561,  235,  764,  764,  746,  537,  764,  527,  244,
 /*  9810 */   764,  764,  385,  764,  517,  764,  393,  511,  764,  766,
 /*  9820 */   764,  764,  764,  323,  764,  764,  764,  764,  764,  764,
 /*  9830 */   764,  764,  764,  561,  235,  764,  764,  764,  764,  764,
 /*  9840 */   369,  250,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  9850 */   764,  764,  764,  764,  764,  419,  764,  764,  764,  764,
 /*  9860 */   764,  764,  764,  764,  764,  764,  764,  741,  764,  764,
 /*  9870 */   764,  764,  369,  250,  764,  764,  764,  764,  764,  764,
 /*  9880 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  9890 */   822,  764,  740,  825,  764,  879,  764,  764,  764,  741,
 /*  9900 */   746,  537,  764,  527,  244,  764,  764,  385,  764,  517,
 /*  9910 */   764,  393,  511,  764,  766,  764,  764,  764,  764,  764,
 /*  9920 */   764,  764,  822,  764,  740,  825,  764,  879,  764,  764,
 /*  9930 */   561,  235,  746,  537,  764,  527,  244,  764,  764,  385,
 /*  9940 */   764,  517,  764,  393,  511,  764,  766,  764,  764,  764,
 /*  9950 */   764,  764,  343,  764,  764,  764,  764,  764,  764,  764,
 /*  9960 */   764,  561,  235,  764,  764,  764,  764,  764,  764,  369,
 /*  9970 */   250,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /*  9980 */   764,  764,  764,  327,  764,  764,  764,  764,  764,  764,
 /*  9990 */   764,  764,  764,  764,  764,  764,  741,  764,  764,  764,
 /* 10000 */   369,  250,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 10010 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  822,
 /* 10020 */   764,  740,  825,  764,  879,  764,  764,  741,  764,  746,
 /* 10030 */   537,  764,  527,  244,  764,  764,  385,  764,  517,  764,
 /* 10040 */   393,  511,  764,  766,  764,  764,  764,  764,  764,  764,
 /* 10050 */   822,  764,  740,  825,  764,  879,  561,  235,  764,  764,
 /* 10060 */   746,  537,  764,  527,  244,  764,  764,  385,  764,  517,
 /* 10070 */   764,  393,  511,  764,  766,  764,  764,  764,  306,  764,
 /* 10080 */   764,  764,  764,  764,  764,  764,  764,  764,  561,  235,
 /* 10090 */   764,  764,  764,  764,  764,  369,  250,  764,  764,  764,
 /* 10100 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 10110 */   324,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 10120 */   764,  764,  741,  764,  764,  764,  764,  369,  250,  764,
 /* 10130 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 10140 */   764,  764,  764,  764,  764,  822,  764,  740,  825,  764,
 /* 10150 */   879,  764,  764,  764,  741,  746,  537,  764,  527,  244,
 /* 10160 */   764,  764,  385,  764,  517,  764,  393,  511,  764,  766,
 /* 10170 */   764,  764,  764,  764,  764,  764,  764,  822,  764,  740,
 /* 10180 */   825,  764,  879,  764,  764,  561,  235,  746,  537,  764,
 /* 10190 */   527,  244,  764,  764,  385,  764,  517,  764,  393,  511,
 /* 10200 */   764,  766,  764,  764,  764,  764,  764,  368,  764,  764,
 /* 10210 */   764,  764,  764,  764,  764,  764,  561,  235,  764,  764,
 /* 10220 */   764,  764,  764,  764,  369,  250,  764,  764,  764,  764,
 /* 10230 */   764,  764,  764,  764,  764,  764,  764,  764,  432,  764,
 /* 10240 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 10250 */   764,  741,  764,  764,  764,  369,  250,  764,  764,  764,
 /* 10260 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 10270 */   764,  764,  764,  764,  822,  764,  740,  825,  764,  879,
 /* 10280 */   764,  764,  741,  764,  746,  537,  764,  527,  244,  764,
 /* 10290 */   764,  385,  764,  517,  764,  393,  511,  764,  766,  764,
 /* 10300 */   764,  764,  764,  764,  764,  822,  764,  740,  825,  764,
 /* 10310 */   879,  561,  235,  764,  764,  746,  537,  764,  527,  244,
 /* 10320 */   764,  764,  385,  764,  517,  764,  393,  511,  764,  766,
 /* 10330 */   764,  764,  764,  213,  764,  764,  764,  764,  764,  764,
 /* 10340 */   764,  764,  764,  561,  235,  764,  764,  764,  764,  764,
 /* 10350 */   369,  250,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 10360 */   764,  764,  764,  764,  764,  371,  764,  764,  764,  764,
 /* 10370 */   764,  764,  764,  764,  764,  764,  764,  741,  764,  764,
 /* 10380 */   764,  764,  369,  250,  764,  764,  764,  764,  764,  764,
 /* 10390 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 10400 */   822,  764,  740,  825,  764,  879,  764,  764,  764,  741,
 /* 10410 */   746,  537,  764,  527,  244,  764,  764,  385,  764,  517,
 /* 10420 */   764,  393,  511,  764,  766,  764,  764,  764,  764,  764,
 /* 10430 */   764,  764,  822,  764,  740,  825,  764,  879,  764,  764,
 /* 10440 */   561,  235,  746,  537,  764,  527,  244,  764,  764,  385,
 /* 10450 */   764,  517,  764,  393,  511,  764,  766,  764,  764,  764,
 /* 10460 */   764,  764,  215,  764,  764,  764,  764,  764,  764,  764,
 /* 10470 */   764,  561,  235,  764,  764,  764,  764,  764,  764,  369,
 /* 10480 */   250,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 10490 */   764,  764,  764,  312,  764,  764,  764,  764,  764,  764,
 /* 10500 */   764,  764,  764,  764,  764,  764,  741,  764,  764,  764,
 /* 10510 */   369,  250,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 10520 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  822,
 /* 10530 */   764,  740,  825,  764,  879,  764,  764,  741,  764,  746,
 /* 10540 */   537,  764,  527,  244,  764,  764,  385,  764,  517,  764,
 /* 10550 */   393,  511,  764,  766,  764,  764,  764,  764,  764,  764,
 /* 10560 */   822,  764,  740,  825,  764,  879,  561,  235,  764,  764,
 /* 10570 */   746,  537,  764,  527,  244,  764,  764,  385,  764,  517,
 /* 10580 */   764,  393,  511,  764,  766,  764,  764,  764,  366,  764,
 /* 10590 */   764,  764,  764,  764,  764,  764,  764,  764,  561,  235,
 /* 10600 */   764,  764,  764,  764,  764,  369,  250,  764,  764,  764,
 /* 10610 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 10620 */   377,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 10630 */   764,  764,  741,  764,  764,  764,  764,  369,  250,  764,
 /* 10640 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 10650 */   764,  764,  764,  764,  764,  822,  764,  740,  825,  764,
 /* 10660 */   879,  764,  764,  764,  741,  746,  537,  764,  527,  244,
 /* 10670 */   764,  764,  385,  764,  517,  764,  393,  511,  764,  766,
 /* 10680 */   764,  764,  764,  764,  764,  764,  764,  822,  764,  740,
 /* 10690 */   825,  764,  879,  764,  764,  561,  235,  746,  537,  764,
 /* 10700 */   527,  244,  764,  764,  385,  764,  517,  764,  393,  511,
 /* 10710 */   764,  766,  764,  764,  764,  764,  764,  303,  764,  764,
 /* 10720 */   764,  764,  764,  764,  764,  764,  561,  235,  764,  764,
 /* 10730 */   764,  764,  764,  764,  369,  250,  764,  764,  764,  764,
 /* 10740 */   764,  764,  764,  764,  764,  764,  764,  764,  378,  764,
 /* 10750 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 10760 */   764,  741,  764,  764,  764,  369,  250,  764,  764,  764,
 /* 10770 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 10780 */   764,  764,  764,  764,  822,  764,  740,  825,  764,  879,
 /* 10790 */   764,  764,  741,  764,  746,  537,  764,  527,  244,  764,
 /* 10800 */   764,  385,  764,  517,  764,  393,  511,  764,  766,  764,
 /* 10810 */   764,  764,  764,  764,  764,  822,  764,  740,  825,  764,
 /* 10820 */   879,  561,  235,  764,  764,  746,  537,  764,  527,  244,
 /* 10830 */   764,  764,  385,  764,  517,  764,  393,  511,  764,  766,
 /* 10840 */   764,  764,  764,  510,  764,  764,  764,  764,  764,  764,
 /* 10850 */   764,  764,  764,  561,  235,  764,  764,  764,  764,  764,
 /* 10860 */   369,  250,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 10870 */   764,  764,  764,  764,  764,  375,  764,  764,  764,  764,
 /* 10880 */   764,  764,  764,  764,  764,  764,  764,  741,  764,  764,
 /* 10890 */   764,  764,  369,  250,  764,  764,  764,  764,  764,  764,
 /* 10900 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 10910 */   822,  764,  740,  825,  764,  879,  764,  764,  764,  741,
 /* 10920 */   746,  537,  764,  527,  244,  764,  764,  385,  764,  517,
 /* 10930 */   764,  393,  511,  764,  766,  764,  764,  764,  764,  764,
 /* 10940 */   764,  764,  822,  764,  740,  825,  764,  879,  764,  764,
 /* 10950 */   561,  235,  746,  537,  764,  527,  244,  764,  764,  385,
 /* 10960 */   764,  517,  764,  393,  511,  764,  766,  764,  764,  764,
 /* 10970 */   764,  764,  358,  764,  764,  764,  764,  764,  764,  764,
 /* 10980 */   764,  561,  235,  764,  764,  764,  764,  764,  764,  369,
 /* 10990 */   250,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 11000 */   764,  764,  764,  373,  764,  764,  764,  764,  764,  764,
 /* 11010 */   764,  764,  764,  764,  764,  764,  741,  764,  764,  764,
 /* 11020 */   369,  250,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 11030 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  822,
 /* 11040 */   764,  740,  825,  764,  879,  764,  764,  741,  764,  746,
 /* 11050 */   537,  764,  527,  244,  764,  764,  385,  764,  517,  764,
 /* 11060 */   393,  511,  764,  766,  764,  764,  764,  764,  764,  764,
 /* 11070 */   822,  764,  740,  825,  764,  879,  561,  235,  764,  764,
 /* 11080 */   746,  537,  764,  527,  244,  764,  764,  385,  764,  517,
 /* 11090 */   764,  393,  511,  764,  766,  764,  764,  764,  361,  764,
 /* 11100 */   764,  764,  764,  764,  764,  764,  764,  764,  561,  235,
 /* 11110 */   764,  764,  764,  764,  764,  369,  250,  764,  764,  764,
 /* 11120 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 11130 */   353,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 11140 */   764,  764,  741,  764,  764,  764,  764,  369,  250,  764,
 /* 11150 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 11160 */   764,  764,  764,  764,  764,  822,  764,  740,  825,  764,
 /* 11170 */   879,  764,  764,  764,  741,  746,  537,  764,  527,  244,
 /* 11180 */   764,  764,  385,  764,  517,  764,  393,  511,  764,  766,
 /* 11190 */   764,  764,  764,  764,  764,  764,  764,  822,  764,  740,
 /* 11200 */   825,  764,  879,  764,  764,  561,  235,  746,  537,  764,
 /* 11210 */   527,  244,  764,  764,  385,  764,  517,  764,  393,  511,
 /* 11220 */   764,  766,  764,  764,  764,  764,  764,  212,  764,  764,
 /* 11230 */   764,  764,  764,  764,  764,  764,  561,  235,  764,  764,
 /* 11240 */   764,  764,  764,  764,  369,  250,  764,  764,  764,  764,
 /* 11250 */   764,  764,  764,  764,  764,  764,  764,  764,  356,  764,
 /* 11260 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 11270 */   764,  741,  764,  764,  764,  369,  250,  764,  764,  764,
 /* 11280 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 11290 */   764,  764,  764,  764,  822,  764,  740,  825,  764,  879,
 /* 11300 */   764,  764,  741,  764,  746,  537,  764,  527,  244,  764,
 /* 11310 */   764,  385,  764,  517,  764,  393,  511,  764,  766,  764,
 /* 11320 */   764,  764,  764,  764,  764,  822,  764,  740,  825,  764,
 /* 11330 */   879,  561,  235,  764,  764,  746,  537,  764,  527,  244,
 /* 11340 */   764,  764,  385,  764,  517,  764,  393,  511,  764,  766,
 /* 11350 */   764,  764,  764,  376,  764,  764,  764,  764,  764,  764,
 /* 11360 */   764,  764,  764,  561,  235,  764,  764,  764,  764,  764,
 /* 11370 */   369,  250,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 11380 */   764,  764,  764,  764,  764,  349,  764,  764,  764,  764,
 /* 11390 */   764,  764,  764,  764,  764,  764,  764,  741,  764,  764,
 /* 11400 */   764,  764,  369,  250,  764,  764,  764,  764,  764,  764,
 /* 11410 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 11420 */   822,  764,  740,  825,  764,  879,  764,  764,  764,  741,
 /* 11430 */   746,  537,  764,  527,  244,  764,  764,  385,  764,  517,
 /* 11440 */   764,  393,  511,  764,  766,  764,  764,  764,  764,  764,
 /* 11450 */   764,  764,  822,  764,  740,  825,  764,  879,  764,  764,
 /* 11460 */   561,  235,  746,  537,  764,  527,  244,  764,  764,  385,
 /* 11470 */   764,  517,  764,  393,  511,  764,  766,  764,  764,  764,
 /* 11480 */   764,  764,  317,  764,  764,  764,  764,  764,  764,  764,
 /* 11490 */   764,  561,  235,  764,  764,  764,  764,  764,  764,  369,
 /* 11500 */   250,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 11510 */   764,  764,  764,  316,  764,  764,  764,  764,  764,  764,
 /* 11520 */   764,  764,  764,  764,  764,  764,  741,  764,  764,  764,
 /* 11530 */   369,  250,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 11540 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  822,
 /* 11550 */   764,  740,  825,  764,  879,  764,  764,  741,  764,  746,
 /* 11560 */   537,  764,  527,  244,  764,  764,  385,  764,  517,  764,
 /* 11570 */   393,  511,  764,  766,  764,  764,  764,  764,  764,  764,
 /* 11580 */   822,  764,  740,  825,  764,  879,  561,  235,  764,  764,
 /* 11590 */   746,  537,  764,  527,  244,  764,  764,  385,  764,  517,
 /* 11600 */   764,  393,  511,  764,  766,  764,  764,  764,  362,  764,
 /* 11610 */   764,  764,  764,  764,  764,  764,  764,  764,  561,  235,
 /* 11620 */   764,  764,  764,  764,  764,  369,  250,  764,  764,  764,
 /* 11630 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 11640 */   360,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 11650 */   764,  764,  741,  764,  764,  764,  764,  369,  250,  764,
 /* 11660 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 11670 */   764,  764,  764,  764,  764,  822,  764,  740,  825,  764,
 /* 11680 */   879,  764,  764,  764,  741,  746,  537,  764,  527,  244,
 /* 11690 */   764,  764,  385,  764,  517,  764,  393,  511,  764,  766,
 /* 11700 */   764,  764,  764,  764,  764,  764,  764,  822,  764,  740,
 /* 11710 */   825,  764,  879,  764,  764,  561,  235,  746,  537,  764,
 /* 11720 */   527,  244,  764,  764,  385,  764,  517,  764,  393,  511,
 /* 11730 */   764,  766,  764,  764,  764,  764,  764,  340,  764,  764,
 /* 11740 */   764,  764,  764,  764,  764,  764,  561,  235,  764,  764,
 /* 11750 */   764,  764,  764,  764,  369,  250,  764,  764,  764,  764,
 /* 11760 */   764,  764,  764,  764,  764,  764,  764,  764,  354,  764,
 /* 11770 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 11780 */   764,  741,  764,  764,  764,  369,  250,  764,  764,  764,
 /* 11790 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 11800 */   764,  764,  764,  764,  822,  764,  740,  825,  764,  879,
 /* 11810 */   764,  764,  741,  764,  746,  537,  764,  527,  244,  764,
 /* 11820 */   764,  385,  764,  517,  764,  393,  511,  764,  766,  764,
 /* 11830 */   764,  764,  764,  764,  764,  822,  764,  740,  825,  764,
 /* 11840 */   879,  561,  235,  764,  764,  746,  537,  764,  527,  244,
 /* 11850 */   764,  764,  385,  764,  517,  764,  393,  511,  764,  766,
 /* 11860 */   764,  764,  764,  352,  764,  764,  764,  764,  764,  764,
 /* 11870 */   764,  764,  764,  561,  235,  764,  764,  764,  764,  764,
 /* 11880 */   369,  250,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 11890 */   764,  764,  764,  764,  764,  363,  764,  764,  764,  764,
 /* 11900 */   764,  764,  764,  764,  764,  764,  764,  741,  764,  764,
 /* 11910 */   764,  764,  369,  250,  764,  764,  764,  764,  764,  764,
 /* 11920 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 11930 */   822,  764,  740,  825,  764,  879,  764,  764,  764,  741,
 /* 11940 */   746,  537,  764,  527,  244,  764,  764,  385,  764,  517,
 /* 11950 */   764,  393,  511,  764,  766,  764,  764,  764,  764,  764,
 /* 11960 */   764,  764,  822,  764,  740,  825,  764,  879,  764,  764,
 /* 11970 */   561,  235,  746,  537,  764,  527,  244,  764,  764,  385,
 /* 11980 */   764,  517,  764,  393,  511,  764,  766,  764,  764,  764,
 /* 11990 */   764,  764,  313,  764,  764,  764,  764,  764,  764,  764,
 /* 12000 */   764,  561,  235,  764,  764,  764,  764,  764,  764,  369,
 /* 12010 */   250,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 12020 */   764,  764,  764,  342,  764,  764,  764,  764,  764,  764,
 /* 12030 */   764,  764,  764,  764,  764,  764,  741,  764,  764,  764,
 /* 12040 */   369,  250,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 12050 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  822,
 /* 12060 */   764,  740,  825,  764,  879,  764,  764,  741,  764,  746,
 /* 12070 */   537,  764,  527,  244,  764,  764,  385,  764,  517,  764,
 /* 12080 */   393,  511,  764,  766,  764,  764,  764,  764,  764,  764,
 /* 12090 */   822,  764,  740,  825,  764,  879,  561,  235,  764,  764,
 /* 12100 */   746,  537,  764,  527,  244,  764,  764,  385,  764,  517,
 /* 12110 */   764,  393,  511,  764,  766,  764,  764,  764,  308,  764,
 /* 12120 */   764,  764,  764,  764,  764,  764,  764,  764,  561,  235,
 /* 12130 */   764,  764,  764,  764,  764,  369,  250,  764,  764,  764,
 /* 12140 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 12150 */   334,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 12160 */   764,  764,  741,  764,  764,  764,  764,  369,  250,  764,
 /* 12170 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 12180 */   764,  764,  764,  764,  764,  822,  764,  740,  825,  764,
 /* 12190 */   879,  764,  764,  764,  741,  746,  537,  764,  527,  244,
 /* 12200 */   764,  764,  385,  764,  517,  764,  393,  511,  764,  766,
 /* 12210 */   764,  764,  764,  764,  764,  764,  764,  822,  764,  740,
 /* 12220 */   825,  764,  879,  764,  764,  561,  235,  746,  537,  764,
 /* 12230 */   527,  244,  764,  764,  385,  764,  517,  764,  393,  511,
 /* 12240 */   764,  766,  764,  764,  764,  764,  764,  329,  764,  764,
 /* 12250 */   764,  764,  764,  764,  764,  764,  561,  235,  764,  764,
 /* 12260 */   764,  764,  764,  764,  369,  250,  764,  764,  764,  764,
 /* 12270 */   764,  764,  764,  764,  764,  764,  764,  764,  214,  764,
 /* 12280 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 12290 */   764,  741,  764,  764,  764,  369,  250,  764,  764,  764,
 /* 12300 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 12310 */   764,  764,  764,  764,  822,  764,  740,  825,  764,  879,
 /* 12320 */   764,  764,  741,  764,  746,  537,  764,  527,  244,  764,
 /* 12330 */   764,  385,  764,  517,  764,  393,  511,  764,  766,  764,
 /* 12340 */   764,  764,  764,  764,  764,  822,  764,  740,  825,  764,
 /* 12350 */   879,  561,  235,  764,  764,  746,  537,  764,  527,  244,
 /* 12360 */   764,  764,  385,  764,  517,  764,  393,  511,  764,  766,
 /* 12370 */   764,  764,  764,  355,  764,  764,  764,  764,  764,  764,
 /* 12380 */   764,  764,  764,  561,  235,  764,  764,  764,  764,  764,
 /* 12390 */   369,  250,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 12400 */   764,  764,  764,  764,  764,  357,  764,  764,  764,  764,
 /* 12410 */   764,  764,  764,  764,  764,  764,  764,  741,  764,  764,
 /* 12420 */   764,  764,  369,  250,  764,  764,  764,  764,  764,  764,
 /* 12430 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 12440 */   822,  764,  740,  825,  764,  879,  764,  764,  764,  741,
 /* 12450 */   746,  537,  764,  527,  244,  764,  764,  385,  764,  517,
 /* 12460 */   764,  393,  511,  764,  766,  764,  764,  764,  764,  764,
 /* 12470 */   764,  764,  822,  764,  740,  825,  764,  879,  764,  764,
 /* 12480 */   561,  235,  746,  537,  764,  527,  244,  764,  764,  385,
 /* 12490 */   764,  517,  764,  393,  511,  764,  766,  764,  764,  764,
 /* 12500 */   764,  764,  344,  764,  764,  764,  764,  764,  764,  764,
 /* 12510 */   764,  561,  235,  764,  764,  764,  764,  764,  764,  369,
 /* 12520 */   250,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 12530 */   764,  764,  764,  529,  764,  764,  764,  764,  764,  764,
 /* 12540 */   764,  764,  764,  764,  764,  764,  741,  764,  764,  764,
 /* 12550 */   369,  250,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 12560 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  822,
 /* 12570 */   764,  740,  825,  764,  879,  764,  764,  741,  764,  746,
 /* 12580 */   537,  764,  527,  244,  764,  764,  385,  764,  517,  764,
 /* 12590 */   393,  511,  764,  766,  764,  764,  764,  764,  764,  764,
 /* 12600 */   822,  764,  740,  825,  764,  879,  561,  235,  764,  764,
 /* 12610 */   746,  537,  764,  527,  244,  764,  764,  385,  764,  517,
 /* 12620 */   764,  393,  511,  764,  766,  764,  764,  764,  314,  764,
 /* 12630 */   764,  764,  764,  764,  764,  764,  764,  764,  561,  235,
 /* 12640 */   764,  764,  764,  764,  764,  369,  250,  764,  764,  764,
 /* 12650 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 12660 */   372,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 12670 */   764,  764,  741,  764,  764,  764,  764,  369,  250,  764,
 /* 12680 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 12690 */   764,  764,  764,  764,  764,  822,  764,  740,  825,  764,
 /* 12700 */   879,  764,  764,  764,  741,  746,  537,  764,  527,  244,
 /* 12710 */   764,  764,  385,  764,  517,  764,  393,  511,  764,  766,
 /* 12720 */   764,  764,  764,  764,  764,  764,  764,  822,  764,  740,
 /* 12730 */   825,  764,  879,  764,  764,  561,  235,  746,  537,  764,
 /* 12740 */   527,  244,  764,  764,  385,  764,  517,  764,  393,  511,
 /* 12750 */   764,  766,  764,  764,  764,  764,  764,  530,  764,  764,
 /* 12760 */   764,  764,  764,  764,  764,  764,  561,  235,  764,  764,
 /* 12770 */   764,  764,  764,  764,  369,  250,  764,  764,  764,  764,
 /* 12780 */   764,  764,  764,  764,  764,  764,  764,  764,  359,  764,
 /* 12790 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 12800 */   764,  741,  764,  764,  764,  369,  250,  764,  764,  764,
 /* 12810 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 12820 */   764,  764,  764,  764,  822,  764,  740,  825,  764,  879,
 /* 12830 */   764,  764,  741,  764,  746,  537,  764,  527,  244,  764,
 /* 12840 */   764,  385,  764,  517,  764,  393,  511,  764,  766,  764,
 /* 12850 */   764,  764,  764,  764,  764,  822,  764,  740,  825,  764,
 /* 12860 */   879,  561,  235,  764,  764,  746,  537,  764,  527,  244,
 /* 12870 */   764,  764,  385,  764,  517,  764,  393,  511,  764,  766,
 /* 12880 */   764,  764,  764,  531,  764,  764,  764,  764,  764,  764,
 /* 12890 */   764,  764,  764,  561,  235,  764,  764,  764,  764,  764,
 /* 12900 */   369,  250,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 12910 */   764,  764,  764,  764,  764,  348,  764,  764,  764,  764,
 /* 12920 */   764,  764,  764,  764,  764,  764,  764,  741,  764,  764,
 /* 12930 */   764,  764,  369,  250,  764,  764,  764,  764,  764,  764,
 /* 12940 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 12950 */   822,  764,  740,  825,  764,  879,  764,  764,  764,  741,
 /* 12960 */   746,  537,  764,  527,  244,  764,  764,  385,  764,  517,
 /* 12970 */   764,  393,  511,  764,  766,  764,  764,  764,  764,  764,
 /* 12980 */   764,  764,  822,  764,  740,  825,  764,  879,  764,  764,
 /* 12990 */   561,  235,  746,  537,  764,  527,  244,  764,  764,  385,
 /* 13000 */   764,  517,  764,  393,  511,  764,  766,  764,  764,  764,
 /* 13010 */   764,  764,  534,  764,  764,  764,  764,  764,  764,  764,
 /* 13020 */   764,  561,  235,  764,  764,  764,  764,  764,  764,  369,
 /* 13030 */   250,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 13040 */   764,  764,  764,  539,  764,  764,  764,  764,  764,  764,
 /* 13050 */   764,  764,  764,  764,  764,  764,  741,  764,  764,  764,
 /* 13060 */   369,  250,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 13070 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  822,
 /* 13080 */   764,  740,  825,  764,  879,  764,  764,  741,  764,  746,
 /* 13090 */   537,  764,  527,  244,  764,  764,  385,  764,  517,  764,
 /* 13100 */   393,  511,  764,  766,  764,  764,  764,  764,  764,  764,
 /* 13110 */   822,  764,  740,  825,  764,  879,  561,  235,  764,  764,
 /* 13120 */   746,  537,  764,  527,  244,  764,  764,  385,  764,  517,
 /* 13130 */   764,  393,  511,  764,  766,  764,  764,  764,  379,  764,
 /* 13140 */   764,  764,  764,  764,  764,  764,  764,  764,  561,  235,
 /* 13150 */   764,  764,  764,  764,  764,  369,  250,  764,  764,  764,
 /* 13160 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 13170 */   717,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 13180 */   764,  764,  741,  764,  764,  764,  764,  369,  250,  764,
 /* 13190 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 13200 */   764,  764,  764,  764,  764,  822,  764,  740,  825,  764,
 /* 13210 */   879,  764,  764,  764,  741,  746,  537,  764,  527,  244,
 /* 13220 */   764,  764,  385,  764,  517,  764,  393,  511,  764,  766,
 /* 13230 */   764,  764,  764,  764,  764,  764,  764,  822,  764,  740,
 /* 13240 */   825,  764,  879,  764,  764,  561,  235,  746,  537,  764,
 /* 13250 */   527,  244,  764,  764,  385,  764,  517,  764,  393,  511,
 /* 13260 */   764,  766,  764,  764,  764,  764,  764,  347,  764,  764,
 /* 13270 */   764,  764,  764,  764,  764,  764,  561,  235,  764,  764,
 /* 13280 */   764,  764,  764,  764,  369,  250,  764,  764,  764,  764,
 /* 13290 */   764,  764,  764,  764,  764,  764,  764,  764,  350,  764,
 /* 13300 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 13310 */   764,  741,  764,  764,  764,  369,  250,  764,  764,  764,
 /* 13320 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 13330 */   764,  764,  764,  764,  822,  764,  740,  825,  764,  879,
 /* 13340 */   764,  764,  741,  764,  746,  537,  764,  527,  244,  764,
 /* 13350 */   764,  385,  764,  517,  764,  393,  511,  764,  766,  764,
 /* 13360 */   764,  764,  764,  764,  764,  822,  764,  740,  825,  764,
 /* 13370 */   879,  561,  235,  764,  764,  746,  537,  764,  527,  244,
 /* 13380 */   764,  764,  385,  764,  517,  764,  393,  511,  764,  766,
 /* 13390 */   764,  764,  764,  544,  764,  764,  764,  764,  764,  764,
 /* 13400 */   764,  764,  764,  561,  235,  764,  764,  764,  764,  764,
 /* 13410 */   369,  250,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 13420 */   764,  764,  764,  764,  764,  341,  764,  764,  764,  764,
 /* 13430 */   764,  764,  764,  764,  764,  764,  764,  741,  764,  764,
 /* 13440 */   764,  764,  369,  250,  764,  764,  764,  764,  764,  764,
 /* 13450 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 13460 */   822,  764,  740,  825,  764,  879,  764,  764,  764,  741,
 /* 13470 */   746,  537,  764,  527,  244,  764,  764,  385,  764,  517,
 /* 13480 */   764,  393,  511,  764,  766,  764,  764,  764,  764,  764,
 /* 13490 */   764,  764,  822,  764,  740,  825,  764,  879,  764,  764,
 /* 13500 */   561,  235,  746,  537,  764,  527,  244,  764,  764,  385,
 /* 13510 */   764,  517,  764,  393,  511,  764,  766,  764,  764,  764,
 /* 13520 */   764,  764,  512,  764,  764,  764,  764,  764,  764,  764,
 /* 13530 */   764,  561,  235,  764,  764,  764,  764,  764,  764,  369,
 /* 13540 */   250,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 13550 */   764,  764,  764,  338,  764,  764,  764,  764,  764,  764,
 /* 13560 */   764,  764,  764,  764,  764,  764,  741,  764,  764,  764,
 /* 13570 */   369,  250,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 13580 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  822,
 /* 13590 */   764,  740,  825,  764,  879,  764,  764,  741,  764,  746,
 /* 13600 */   537,  764,  527,  244,  764,  764,  385,  764,  517,  764,
 /* 13610 */   393,  511,  764,  766,  764,  764,  764,  764,  764,  764,
 /* 13620 */   822,  764,  740,  825,  764,  879,  561,  235,  764,  764,
 /* 13630 */   746,  537,  764,  527,  244,  764,  764,  385,  764,  517,
 /* 13640 */   764,  393,  511,  764,  766,  764,  764,  764,  380,  764,
 /* 13650 */   764,  764,  764,  764,  764,  764,  764,  764,  561,  235,
 /* 13660 */   764,  764,  764,  764,  764,  369,  250,  764,  764,  764,
 /* 13670 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 13680 */   351,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 13690 */   764,  764,  741,  764,  764,  764,  764,  369,  250,  764,
 /* 13700 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 13710 */   764,  764,  764,  764,  764,  822,  764,  740,  825,  764,
 /* 13720 */   879,  764,  764,  764,  741,  746,  537,  764,  527,  244,
 /* 13730 */   764,  764,  385,  764,  517,  764,  393,  511,  764,  766,
 /* 13740 */   764,  764,  764,  764,  764,  764,  764,  822,  764,  740,
 /* 13750 */   825,  764,  879,  764,  764,  561,  235,  746,  537,  764,
 /* 13760 */   527,  244,  764,  764,  385,  764,  517,  764,  393,  511,
 /* 13770 */   764,  766,  764,  764,  764,  764,  764,  331,  764,  764,
 /* 13780 */   764,  764,  764,  764,  764,  764,  561,  235,  764,  764,
 /* 13790 */   764,  764,  764,  764,  369,  250,  764,  764,  764,  764,
 /* 13800 */   764,  764,  764,  764,  764,  764,  764,  764,  339,  764,
 /* 13810 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 13820 */   764,  741,  764,  764,  764,  369,  250,  764,  764,  764,
 /* 13830 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 13840 */   764,  764,  764,  764,  822,  764,  740,  825,  764,  879,
 /* 13850 */   764,  764,  741,  764,  746,  537,  764,  527,  244,  764,
 /* 13860 */   764,  385,  764,  517,  764,  393,  511,  764,  766,  764,
 /* 13870 */   764,  764,  764,  764,  764,  822,  764,  740,  825,  764,
 /* 13880 */   879,  561,  235,  764,  764,  746,  537,  764,  527,  244,
 /* 13890 */   764,  764,  385,  764,  517,  764,  393,  511,  764,  766,
 /* 13900 */   764,  764,  764,  310,  764,  764,  764,  764,  764,  764,
 /* 13910 */   764,  764,  764,  561,  235,  764,  764,  764,  764,  764,
 /* 13920 */   369,  250,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 13930 */   764,  764,  764,  764,  764,  328,  764,  764,  764,  764,
 /* 13940 */   764,  764,  764,  764,  764,  764,  764,  741,  764,  764,
 /* 13950 */   764,  764,  369,  250,  764,  764,  764,  764,  764,  764,
 /* 13960 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 13970 */   822,  764,  740,  825,  764,  879,  764,  764,  764,  741,
 /* 13980 */   746,  537,  764,  527,  244,  764,  764,  385,  764,  517,
 /* 13990 */   764,  393,  511,  764,  766,  764,  764,  764,  764,  764,
 /* 14000 */   764,  764,  822,  764,  740,  825,  764,  879,  764,  764,
 /* 14010 */   561,  235,  746,  537,  764,  527,  244,  764,  764,  385,
 /* 14020 */   764,  517,  764,  393,  511,  764,  766,  764,  764,  764,
 /* 14030 */   764,  764,  346,  764,  764,  764,  764,  764,  764,  764,
 /* 14040 */   764,  561,  235,  764,  764,  764,  764,  764,  764,  369,
 /* 14050 */   250,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 14060 */   764,  764,  764,  345,  764,  764,  764,  764,  764,  764,
 /* 14070 */   764,  764,  764,  764,  764,  764,  741,  764,  764,  764,
 /* 14080 */   369,  250,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 14090 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  822,
 /* 14100 */   764,  740,  825,  764,  879,  764,  764,  741,  764,  746,
 /* 14110 */   537,  764,  527,  244,  764,  764,  385,  764,  517,  764,
 /* 14120 */   393,  511,  764,  766,  764,  764,  764,  764,  764,  764,
 /* 14130 */   822,  764,  740,  825,  764,  879,  561,  235,  764,  764,
 /* 14140 */   746,  537,  764,  527,  244,  764,  764,  385,  764,  517,
 /* 14150 */   764,  393,  511,  764,  766,  764,  764,  764,  325,  764,
 /* 14160 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 14170 */   764,  764,  764,  764,  764,  369,  250,  764,  764,  764,
 /* 14180 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 14190 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 14200 */   764,  764,  741,  764,  764,  764,  764,  764,  764,  764,
 /* 14210 */   764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
 /* 14220 */   764,  764,  764,  764,  764,  822,  764,  740,  825,  764,
 /* 14230 */   879,  764,  764,  764,  764,  746,  537,  764,  527,  244,
 /* 14240 */   764,  764,  385,  764,  517,  764,  393,  511,  764,  766,
    );
    static public $yy_lookahead = array(
 /*     0 */     1,    2,    3,    4,    5,  111,  112,  113,  135,   10,
 /*    10 */    11,   27,   13,   29,   30,   31,   32,   33,   34,   35,
 /*    20 */    36,   37,   38,   39,   40,   41,   42,   43,   44,   45,
 /*    30 */    46,   47,   48,   49,   50,   51,  140,   53,  112,  113,
 /*    40 */   144,  134,  106,  107,  231,   46,   47,  151,   84,   65,
 /*    50 */   154,   52,  156,   54,   55,   56,   57,   58,   59,   60,
 /*    60 */    61,   62,   63,   64,  138,   66,   67,   68,  132,  133,
 /*    70 */   132,    6,   73,   74,   75,  137,   53,   65,  140,   80,
 /*    80 */    81,   82,   83,   84,  132,   86,  134,   88,   65,   90,
 /*    90 */   277,  153,   93,  115,  116,   96,   97,  119,   99,  132,
 /*   100 */   101,  102,  103,  104,  105,  106,  107,  108,  109,  110,
 /*   110 */   132,  133,  133,  114,  115,  136,  137,    6,  119,  120,
 /*   120 */   121,  122,  123,  124,  125,  126,  127,  128,  129,  130,
 /*   130 */   131,  132,  133,  134,    6,  136,  137,  138,  139,  140,
 /*   140 */   165,  166,  143,  260,  134,  146,  147,  148,  149,   92,
 /*   150 */   151,  145,  153,  270,    1,    2,    3,    4,    5,  161,
 /*   160 */   162,  163,    6,   10,   11,  282,   13,   29,   30,   31,
 /*   170 */    32,   33,   34,   35,   36,   37,   38,   39,   40,   41,
 /*   180 */    42,   43,   44,   45,   46,   47,   48,   49,   50,   51,
 /*   190 */   133,   53,  111,  112,  113,  134,  112,  113,  142,   46,
 /*   200 */    47,  136,  137,   65,  106,   52,  231,   54,   55,   56,
 /*   210 */    57,   58,   59,   60,   61,   62,   63,   64,  119,   66,
 /*   220 */    67,   68,  138,  161,  162,  163,   73,   74,   75,  231,
 /*   230 */   255,  132,  133,   80,   81,   82,   83,   84,  140,   86,
 /*   240 */   265,   88,    6,   90,  269,  132,   93,  136,    6,   96,
 /*   250 */    97,  133,   99,  140,  101,  102,  103,  104,  105,  106,
 /*   260 */   107,  108,  109,  110,  266,  176,  138,  114,  115,  135,
 /*   270 */   157,  182,  119,  120,  121,  122,  123,  124,  125,  126,
 /*   280 */   127,  128,  129,  130,  131,  132,  133,  134,  165,  136,
 /*   290 */   137,  138,  139,  140,  138,  270,  143,   66,  165,  146,
 /*   300 */   147,  148,  149,  180,  151,  136,  153,  282,    1,    2,
 /*   310 */     3,    4,    5,  180,  181,   92,    6,   10,   11,   92,
 /*   320 */    13,   31,   32,   33,   34,   35,   36,   37,   38,   39,
 /*   330 */    40,   41,   42,   43,   44,   45,   46,   47,   48,   49,
 /*   340 */    50,   51,  165,   53,   70,   71,   72,   70,   71,  172,
 /*   350 */   173,   34,  175,   46,   47,   65,  133,  180,  181,   52,
 /*   360 */   133,   54,   55,   56,   57,   58,   59,   60,   61,   62,
 /*   370 */    63,   64,  136,   66,   67,   68,  136,  135,  140,  134,
 /*   380 */    73,   74,   75,  152,  165,    6,  165,   80,   81,   82,
 /*   390 */    83,   84,  154,   86,  156,   88,  177,   90,  177,  180,
 /*   400 */    93,  180,  137,   96,   97,  140,   99,   12,  101,  102,
 /*   410 */   103,  104,  105,  106,  107,  108,  109,  110,  153,    6,
 /*   420 */     6,  114,  115,  161,  162,  163,  119,  120,  121,  122,
 /*   430 */   123,  124,  125,  126,  127,  128,  129,  130,  131,  132,
 /*   440 */   133,  134,  227,  136,  137,  135,  139,  140,  165,  166,
 /*   450 */   143,  165,  166,  146,  147,  148,  149,  140,  151,  140,
 /*   460 */   153,  193,    1,    2,    3,    4,    5,   66,  253,  150,
 /*   470 */     6,   10,   11,  154,   13,  156,   32,   33,   34,   35,
 /*   480 */    36,   37,   38,   39,   40,   41,   42,   43,   44,   45,
 /*   490 */    46,   47,   48,   49,   50,   51,  134,   53,  230,  231,
 /*   500 */   217,   73,   74,   75,   76,   77,   78,   46,   47,   65,
 /*   510 */   224,  225,  226,   52,  135,   54,   55,   56,   57,   58,
 /*   520 */    59,   60,   61,   62,   63,   64,  132,   66,   67,   68,
 /*   530 */   135,  137,  132,  133,   73,   74,   75,  137,  137,    6,
 /*   540 */   143,   80,   81,   82,   83,   84,  140,   86,  135,   88,
 /*   550 */   136,   90,   66,  152,   93,    6,  132,   96,  145,  153,
 /*   560 */    99,  137,  101,  102,  103,  104,  105,  106,  140,  108,
 /*   570 */   109,  110,  161,  162,  163,  114,  115,  161,  162,  163,
 /*   580 */   119,  120,  121,  122,  123,  124,  125,  126,  127,  128,
 /*   590 */   129,  130,  131,  132,  133,  134,    6,  136,  137,  138,
 /*   600 */   139,  140,  138,    6,  143,  165,  166,  146,  147,  148,
 /*   610 */   149,   92,  151,   28,  153,  161,    1,    2,    3,    4,
 /*   620 */     5,  161,  162,  163,  138,   10,   11,    6,   13,  106,
 /*   630 */   107,   33,   34,   35,   36,   37,   38,   39,   40,   41,
 /*   640 */    42,   43,   44,   45,   46,   47,   48,   49,   50,   51,
 /*   650 */   140,   53,  133,  237,  144,  132,  231,  217,  165,  166,
 /*   660 */   150,   46,   47,   65,  154,  249,  156,   52,  135,   54,
 /*   670 */    55,   56,   57,   58,   59,   60,   61,   62,   63,   64,
 /*   680 */   132,   66,   67,   68,  135,  137,  132,  133,   73,   74,
 /*   690 */    75,  134,    6,  194,  145,   80,   81,   82,   83,   84,
 /*   700 */   246,   86,  277,   88,  205,   90,  132,  133,   93,  249,
 /*   710 */   217,   96,    6,  134,   99,    6,  101,  102,  103,  104,
 /*   720 */   105,  106,  137,  108,  109,  110,  165,  166,  138,  114,
 /*   730 */   115,  232,    6,  136,  119,  120,  121,  122,  123,  124,
 /*   740 */   125,  126,  127,  128,  129,  130,  131,  132,  133,  134,
 /*   750 */     6,  136,  137,  138,  139,  140,    6,  136,  143,  165,
 /*   760 */   166,  146,  147,  148,  149,  270,  151,   66,  153,  134,
 /*   770 */     1,    2,    3,    4,    5,  165,  166,  282,  217,   10,
 /*   780 */    11,    6,   13,   34,   35,   36,   37,   38,   39,   40,
 /*   790 */    41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
 /*   800 */    51,  207,   53,  165,  166,  142,  161,  162,  163,  165,
 /*   810 */   166,  165,  166,   92,   65,   46,   47,  223,  224,  225,
 /*   820 */   226,   52,  136,   54,   55,   56,   57,   58,   59,   60,
 /*   830 */    61,   62,   63,   64,    6,   66,   67,   68,  262,  263,
 /*   840 */   145,  135,   73,   74,   75,  136,  230,  231,  165,   80,
 /*   850 */    81,   82,   83,   84,  133,   86,  142,   88,   28,   90,
 /*   860 */   227,  135,   93,  180,  226,   96,    6,  134,   99,  133,
 /*   870 */   101,  102,  103,  104,  105,  106,  231,  108,  109,  110,
 /*   880 */   136,  159,  160,  114,  115,  135,  253,   12,  119,  120,
 /*   890 */   121,  122,  123,  124,  125,  126,  127,  128,  129,  130,
 /*   900 */   131,  132,  133,  134,  136,  136,  137,  138,  139,  140,
 /*   910 */   135,  266,  143,  134,  132,  146,  147,  148,  149,  137,
 /*   920 */   151,  142,  153,  135,    1,    2,    3,    4,    5,   94,
 /*   930 */    95,  136,  137,   10,   11,  134,   13,   35,   36,   37,
 /*   940 */    38,   39,   40,   41,   42,   43,   44,   45,   46,   47,
 /*   950 */    48,   49,   50,   51,  134,   53,   49,   50,   51,  165,
 /*   960 */    53,  165,   55,  135,  106,  107,  136,   65,  137,   46,
 /*   970 */    47,  134,   65,  140,  180,   52,  180,   54,   55,   56,
 /*   980 */    57,   58,   59,   60,   61,   62,   63,   64,  176,   66,
 /*   990 */    67,   68,  135,  132,  182,  135,   73,   74,   75,  235,
 /*  1000 */   132,  165,  166,   80,   81,   82,   83,   84,  165,   86,
 /*  1010 */   135,   88,  248,   90,   14,  134,   93,  134,  136,   96,
 /*  1020 */   134,  145,   99,  180,  101,  102,  103,  104,  105,  106,
 /*  1030 */    14,  108,  109,  110,  134,  134,  138,  114,  115,  203,
 /*  1040 */   204,   14,  119,  120,  121,  122,  123,  124,  125,  126,
 /*  1050 */   127,  128,  129,  130,  131,  132,  133,  134,  134,  136,
 /*  1060 */   137,  138,  139,  140,  135,  134,  143,  231,  136,  146,
 /*  1070 */   147,  148,  149,    6,  151,  136,  153,   92,    1,    2,
 /*  1080 */     3,    4,    5,  136,  122,  137,  136,   10,   11,  135,
 /*  1090 */    13,   46,   47,   48,   49,   50,   51,  134,   53,  135,
 /*  1100 */   264,  265,  136,  267,  268,  165,  165,  271,  136,  273,
 /*  1110 */    65,  275,  276,  173,  278,  174,  175,  134,  178,  179,
 /*  1120 */   180,  180,  181,   46,   47,  136,  142,  134,  140,   52,
 /*  1130 */    14,   54,   55,   56,   57,   58,   59,   60,   61,   62,
 /*  1140 */    63,   64,  136,   66,   67,   68,   98,  132,  137,  135,
 /*  1150 */    73,   74,   75,  132,  136,  165,  166,   80,   81,   82,
 /*  1160 */    83,   84,  138,   86,  136,   88,  136,   90,    6,  134,
 /*  1170 */    93,  122,  136,   96,  145,   28,   99,  136,  101,  102,
 /*  1180 */   103,  104,  105,  106,  132,  108,  109,  110,  145,  136,
 /*  1190 */   136,  114,  115,  137,  204,  137,  119,  120,  121,  122,
 /*  1200 */   123,  124,  125,  126,  127,  128,  129,  130,  131,  132,
 /*  1210 */   133,  134,  134,  136,  137,  138,  139,  140,  134,  137,
 /*  1220 */   143,  231,  134,  146,  147,  148,  149,  134,  151,    6,
 /*  1230 */   153,   12,    1,    2,    3,    4,    5,  140,  132,  137,
 /*  1240 */   135,   10,   11,  134,   13,  137,   49,   50,   51,   92,
 /*  1250 */    53,  134,   55,  134,  264,  265,  165,  267,  268,  165,
 /*  1260 */   135,  271,   65,  273,  173,  275,  276,  173,  278,  279,
 /*  1270 */   179,  180,  178,  179,  180,   28,  135,   46,   47,   28,
 /*  1280 */   136,  136,  136,   52,   14,   54,   55,   56,   57,   58,
 /*  1290 */    59,   60,   61,   62,   63,   64,  137,   66,   67,   68,
 /*  1300 */    97,  282,  132,  160,   73,   74,   75,  220,  209,  183,
 /*  1310 */   209,   80,   81,   82,   83,   84,  209,   86,  215,   88,
 /*  1320 */   246,   90,  282,  160,   93,  183,  140,   96,   14,  209,
 /*  1330 */    99,  118,  101,  102,  103,  104,  105,  106,  214,  108,
 /*  1340 */   109,  110,  227,  134,  208,  114,  115,   28,  238,  137,
 /*  1350 */   119,  120,  121,  122,  123,  124,  125,  126,  127,  128,
 /*  1360 */   129,  130,  131,  132,  133,  134,  165,  136,  137,  138,
 /*  1370 */   139,  140,  183,  132,  143,  165,  166,  146,  147,  148,
 /*  1380 */   149,  213,  151,  183,  153,  209,    1,    2,    3,    4,
 /*  1390 */     5,  209,  215,  209,  183,   10,   11,  183,   13,   40,
 /*  1400 */    41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
 /*  1410 */    51,  183,   53,  183,   49,   50,   51,  207,   53,  183,
 /*  1420 */   183,  219,  200,  183,   65,  209,  209,  209,  183,  165,
 /*  1430 */    65,   46,   47,  223,  224,  225,  226,   52,  117,   54,
 /*  1440 */    55,   56,   57,   58,   59,   60,   61,   62,   63,   64,
 /*  1450 */   215,   66,   67,   68,  210,  209,  206,   72,   73,   74,
 /*  1460 */    75,  232,   34,  165,  166,   80,   81,   82,   83,   84,
 /*  1470 */   165,   86,  274,   88,  206,   90,    6,  219,   93,  136,
 /*  1480 */   214,   96,  227,   34,   99,  211,  101,  102,  103,  104,
 /*  1490 */   105,  106,  141,  108,  109,  110,  227,  206,  216,  114,
 /*  1500 */   115,  106,  204,  117,  119,  120,  121,  122,  123,  124,
 /*  1510 */   125,  126,  127,  128,  129,  130,  131,  132,  133,  134,
 /*  1520 */   261,  136,  137,  140,  139,  140,  227,  144,  143,  231,
 /*  1530 */   205,  146,  147,  148,  149,  283,  151,  154,  153,  156,
 /*  1540 */     1,    2,    3,    4,    5,  233,  234,  140,  236,   10,
 /*  1550 */    11,  213,   13,  227,  231,  248,  182,  239,  246,  247,
 /*  1560 */   115,  116,  264,  265,  119,  267,  268,  231,  208,  271,
 /*  1570 */   220,  273,  261,  275,  276,  231,  278,  132,  133,  136,
 /*  1580 */   135,  219,  205,  263,  206,   46,   47,  208,  201,  258,
 /*  1590 */   134,   52,  191,   54,   55,   56,   57,   58,   59,   60,
 /*  1600 */    61,   62,   63,   64,  183,   66,   67,   68,  208,  183,
 /*  1610 */   183,  209,   73,   74,   75,  219,  183,  165,  166,   80,
 /*  1620 */    81,   82,   83,   84,  215,   86,  286,   88,  286,   90,
 /*  1630 */   183,  286,   93,  286,  286,   96,   66,  286,   99,  286,
 /*  1640 */   101,  102,  103,  104,  105,  106,  286,  108,  109,  110,
 /*  1650 */   286,  286,  286,  114,  115,  286,  204,  286,  119,  120,
 /*  1660 */   121,  122,  123,  124,  125,  126,  127,  128,  129,  130,
 /*  1670 */   131,  132,  133,  134,  286,  136,  137,  138,  139,  140,
 /*  1680 */   286,  286,  143,  231,  286,  146,  147,  148,  149,  286,
 /*  1690 */   151,  286,  153,  286,    1,    2,    3,    4,    5,  286,
 /*  1700 */   286,  286,  286,   10,   11,  286,   13,  137,  286,  286,
 /*  1710 */   286,  286,  142,  286,   66,  286,  264,  265,  286,  267,
 /*  1720 */   268,  286,  152,  271,  286,  273,  286,  275,  276,  286,
 /*  1730 */   278,  286,  286,  286,  286,  286,  286,  286,  286,   46,
 /*  1740 */    47,  286,  286,  286,  286,   52,  286,   54,   55,   56,
 /*  1750 */    57,   58,   59,   60,   61,   62,   63,   64,  286,   66,
 /*  1760 */    67,   68,  286,  286,  286,  286,   73,   74,   75,  286,
 /*  1770 */   286,  165,  166,   80,   81,   82,   83,   84,  286,   86,
 /*  1780 */   286,   88,  134,   90,   91,  137,   93,  286,  286,   96,
 /*  1790 */   142,  286,   99,  286,  101,  102,  103,  104,  105,  106,
 /*  1800 */   152,  108,  109,  110,  286,  286,  286,  114,  115,  286,
 /*  1810 */   204,  286,  119,  120,  121,  122,  123,  124,  125,  126,
 /*  1820 */   127,  128,  129,  130,  131,  132,  133,  134,  286,  136,
 /*  1830 */   137,  140,  139,  140,  286,  144,  143,  231,  286,  146,
 /*  1840 */   147,  148,  149,  286,  151,  154,  153,  156,    1,    2,
 /*  1850 */     3,    4,    5,  286,  286,  286,  286,   10,   11,  286,
 /*  1860 */    13,  286,  286,  286,  286,  286,  286,  286,   66,  286,
 /*  1870 */   264,  265,  286,  267,  268,  286,  286,  271,  286,  273,
 /*  1880 */   286,  275,  276,  286,  278,  286,  286,  286,  286,  286,
 /*  1890 */   286,  286,  286,   46,   47,  286,  286,  286,  286,   52,
 /*  1900 */   286,   54,   55,   56,   57,   58,   59,   60,   61,   62,
 /*  1910 */    63,   64,  286,   66,   67,   68,  286,  286,  286,  286,
 /*  1920 */    73,   74,   75,  286,  286,  165,  166,   80,   81,   82,
 /*  1930 */    83,   84,  286,   86,  286,   88,   89,   90,  286,  137,
 /*  1940 */    93,  286,  286,   96,  142,  286,   99,  286,  101,  102,
 /*  1950 */   103,  104,  105,  106,  152,  108,  109,  110,  286,  286,
 /*  1960 */   286,  114,  115,  286,  204,  286,  119,  120,  121,  122,
 /*  1970 */   123,  124,  125,  126,  127,  128,  129,  130,  131,  132,
 /*  1980 */   133,  134,  286,  136,  137,  140,  139,  140,  286,  144,
 /*  1990 */   143,  231,  286,  146,  147,  148,  149,  286,  151,  154,
 /*  2000 */   153,  156,    1,    2,    3,    4,    5,  286,  286,  286,
 /*  2010 */   286,   10,   11,  286,   13,  286,  286,  286,  286,  286,
 /*  2020 */   286,  286,   66,  286,  264,  265,  286,  267,  268,  286,
 /*  2030 */   286,  271,  286,  273,  286,  275,  276,  286,  278,  286,
 /*  2040 */   286,  286,  286,  286,  286,  286,  286,   46,   47,  286,
 /*  2050 */   286,  286,  286,   52,  286,   54,   55,   56,   57,   58,
 /*  2060 */    59,   60,   61,   62,   63,   64,  286,   66,   67,   68,
 /*  2070 */   286,  286,  286,  286,   73,   74,   75,  286,  286,  165,
 /*  2080 */   166,   80,   81,   82,   83,   84,  286,   86,   87,   88,
 /*  2090 */   134,   90,  286,  137,   93,  286,  286,   96,  142,  286,
 /*  2100 */    99,  286,  101,  102,  103,  104,  105,  106,  152,  108,
 /*  2110 */   109,  110,  286,  286,  286,  114,  115,  286,  204,  286,
 /*  2120 */   119,  120,  121,  122,  123,  124,  125,  126,  127,  128,
 /*  2130 */   129,  130,  131,  132,  133,  134,  286,  136,  137,  286,
 /*  2140 */   139,  140,  286,  286,  143,  231,  286,  146,  147,  148,
 /*  2150 */   149,  286,  151,  286,  153,  286,    1,    2,    3,    4,
 /*  2160 */     5,  286,  286,  286,  286,   10,   11,  286,   13,  286,
 /*  2170 */   286,  286,  286,  286,  286,  286,  286,  286,  264,  265,
 /*  2180 */   286,  267,  268,  286,  286,  271,  286,  273,  286,  275,
 /*  2190 */   276,  286,  278,  286,  286,  286,  286,  286,  286,  286,
 /*  2200 */   286,   46,   47,  286,  286,  286,  286,   52,  286,   54,
 /*  2210 */    55,   56,   57,   58,   59,   60,   61,   62,   63,   64,
 /*  2220 */   286,   66,   67,   68,  286,  286,  286,  286,   73,   74,
 /*  2230 */    75,  286,  286,  286,  286,   80,   81,   82,   83,   84,
 /*  2240 */    85,   86,  286,   88,  286,   90,  286,  286,   93,  286,
 /*  2250 */   286,   96,  286,  286,   99,  286,  101,  102,  103,  104,
 /*  2260 */   105,  106,  286,  108,  109,  110,  286,  286,  286,  114,
 /*  2270 */   115,  286,  286,  286,  119,  120,  121,  122,  123,  124,
 /*  2280 */   125,  126,  127,  128,  129,  130,  131,  132,  133,  134,
 /*  2290 */   286,  136,  137,  286,  139,  140,  286,  286,  143,  286,
 /*  2300 */   286,  146,  147,  148,  149,  286,  151,   12,  153,  286,
 /*  2310 */     1,    2,    3,    4,    5,  286,    7,    8,    9,   10,
 /*  2320 */    11,  286,   27,  286,   29,   30,   31,   32,   33,   34,
 /*  2330 */    35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
 /*  2340 */    45,   46,   47,   48,   49,   50,   51,  286,   53,  286,
 /*  2350 */   286,  140,  286,  286,  286,  144,  286,  286,  286,  286,
 /*  2360 */    65,  150,   53,  286,  286,  154,  286,  156,  286,  286,
 /*  2370 */   286,  286,  286,  286,  286,  286,   67,   68,  286,   70,
 /*  2380 */    71,   72,   73,   74,   75,   76,   77,   78,  286,   80,
 /*  2390 */    81,   82,   83,   84,   85,   86,   87,   88,   89,   90,
 /*  2400 */    91,   92,   93,   94,   95,   96,   97,   98,   99,  100,
 /*  2410 */   101,  102,  103,  104,  105,  106,  107,  108,  109,  110,
 /*  2420 */   111,  112,  113,  114,  115,  116,  117,  118,  119,  120,
 /*  2430 */   121,  122,  123,  124,  125,  126,  127,  128,  129,  130,
 /*  2440 */   131,  132,  286,  286,  286,  286,  137,    9,  286,  140,
 /*  2450 */   286,    1,    2,    3,    4,    5,  286,  286,  286,  286,
 /*  2460 */    10,   11,  153,   13,  286,   27,  286,   29,   30,   31,
 /*  2470 */    32,   33,   34,   35,   36,   37,   38,   39,   40,   41,
 /*  2480 */    42,   43,   44,   45,   46,   47,   48,   49,   50,   51,
 /*  2490 */   286,   53,  286,  286,  286,  286,   46,   47,  286,  286,
 /*  2500 */   286,  286,   52,   65,   54,   55,   56,   57,   58,   59,
 /*  2510 */    60,   61,   62,   63,   64,  286,   66,   67,   68,  286,
 /*  2520 */   286,  286,  286,   73,   74,   75,  286,  286,  165,  166,
 /*  2530 */    80,   81,   82,   83,   84,  286,   86,  286,   88,  286,
 /*  2540 */    90,  286,  286,   93,  286,  286,   96,  286,  286,   99,
 /*  2550 */   286,  101,  102,  103,  104,  105,  106,  286,  108,  109,
 /*  2560 */   110,  286,  165,  166,  114,  115,  286,  204,  286,  119,
 /*  2570 */   120,  121,  122,  123,  124,  125,  126,  127,  128,  129,
 /*  2580 */   130,  131,  132,  133,  134,  286,  136,  137,  138,  139,
 /*  2590 */   140,  286,  286,  143,  231,  286,  146,  147,  148,  149,
 /*  2600 */   286,  151,  286,  153,  207,    1,    2,    3,    4,    5,
 /*  2610 */   286,  286,  286,  286,   10,   11,  286,   13,  286,  286,
 /*  2620 */   223,  224,  225,  226,  286,  286,  286,  264,  265,  286,
 /*  2630 */   267,  268,  286,  286,  271,  286,  273,  286,  275,  276,
 /*  2640 */   286,  278,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  2650 */    46,   47,  286,  286,  286,  286,   52,  286,   54,   55,
 /*  2660 */    56,   57,   58,   59,   60,   61,   62,   63,   64,  286,
 /*  2670 */    66,   67,   68,  286,  286,  286,  286,   73,   74,   75,
 /*  2680 */   286,  286,  165,  166,   80,   81,   82,   83,   84,  286,
 /*  2690 */    86,  286,   88,  286,   90,  286,  286,   93,  286,  286,
 /*  2700 */    96,  286,  286,   99,  187,  101,  102,  103,  104,  105,
 /*  2710 */   106,  286,  108,  109,  110,  286,  286,  286,  114,  115,
 /*  2720 */   286,  204,  205,  119,  120,  121,  122,  123,  124,  125,
 /*  2730 */   126,  127,  128,  129,  130,  131,  132,  133,  134,  286,
 /*  2740 */   136,  137,  286,  139,  140,  165,  166,  143,  231,  286,
 /*  2750 */   146,  147,  148,  149,  286,  151,  286,  153,  286,    1,
 /*  2760 */     2,    3,    4,    5,  286,    7,    8,    9,   10,   11,
 /*  2770 */   286,  254,  286,  256,  257,  286,  259,  286,  286,  286,
 /*  2780 */   286,  264,  265,  286,  267,  268,  286,  207,  271,  272,
 /*  2790 */   273,  286,  275,  276,  286,  278,  286,  280,  281,  286,
 /*  2800 */   286,  286,  286,  223,  224,  225,  226,  286,  286,  286,
 /*  2810 */   286,   53,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  2820 */   286,  286,  286,  286,  286,   67,   68,  286,   70,   71,
 /*  2830 */    72,   73,   74,   75,   76,   77,   78,  286,   80,   81,
 /*  2840 */    82,   83,   84,   85,   86,   87,   88,   89,   90,   91,
 /*  2850 */    92,   93,   94,   95,   96,   97,   98,   99,  100,  101,
 /*  2860 */   102,  103,  104,  105,  106,  107,  108,  109,  110,  111,
 /*  2870 */   112,  113,  114,  115,  116,  117,  118,  119,  120,  121,
 /*  2880 */   122,  123,  124,  125,  126,  127,  128,  129,  130,  131,
 /*  2890 */   132,  133,  286,    7,    8,    9,  138,  286,    1,    2,
 /*  2900 */     3,    4,    5,  286,    7,    8,    9,   10,   11,  286,
 /*  2910 */   286,  286,  286,   27,  286,   29,   30,   31,   32,   33,
 /*  2920 */    34,   35,   36,   37,   38,   39,   40,   41,   42,   43,
 /*  2930 */    44,   45,   46,   47,   48,   49,   50,   51,  286,   53,
 /*  2940 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  2950 */    53,   65,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  2960 */   286,  286,  286,  286,   67,   68,  286,   70,   71,   72,
 /*  2970 */    73,   74,   75,   76,   77,   78,  286,   80,   81,   82,
 /*  2980 */    83,   84,   85,   86,   87,   88,   89,   90,   91,   92,
 /*  2990 */    93,   94,   95,   96,   97,   98,   99,  100,  101,  102,
 /*  3000 */   103,  104,  105,  106,  107,  108,  109,  110,  111,  112,
 /*  3010 */   113,  114,  115,  116,  117,  118,  119,  120,  121,  122,
 /*  3020 */   123,  124,  125,  126,  127,  128,  129,  130,  131,  132,
 /*  3030 */   133,  145,    7,    8,    9,  138,  286,    1,    2,    3,
 /*  3040 */     4,    5,  286,    7,    8,    9,   10,   11,  286,  286,
 /*  3050 */   286,  286,   27,   28,   29,   30,   31,   32,   33,   34,
 /*  3060 */    35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
 /*  3070 */    45,   46,   47,   48,   49,   50,   51,  286,   53,  286,
 /*  3080 */   286,  286,  286,  286,  286,  286,  286,  286,  286,   53,
 /*  3090 */    65,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  3100 */   286,  286,  286,   67,   68,  286,   70,   71,   72,   73,
 /*  3110 */    74,   75,   76,   77,   78,  286,   80,   81,   82,   83,
 /*  3120 */    84,   85,   86,   87,   88,   89,   90,   91,   92,   93,
 /*  3130 */    94,   95,   96,   97,   98,   99,  100,  101,  102,  103,
 /*  3140 */   104,  105,  106,  107,  108,  109,  110,  111,  112,  113,
 /*  3150 */   114,  115,  116,  117,  118,  119,  120,  121,  122,  123,
 /*  3160 */   124,  125,  126,  127,  128,  129,  130,  131,  132,    1,
 /*  3170 */     2,    3,    4,    5,  286,    7,    8,    9,   10,   11,
 /*  3180 */   286,  286,   73,   74,   75,   76,   77,   78,  286,  286,
 /*  3190 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  3200 */   286,  286,  286,  286,  286,  286,   97,  286,  286,  100,
 /*  3210 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  3220 */   286,   53,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  3230 */   286,  286,  286,  286,  286,   67,   68,  286,   70,   71,
 /*  3240 */    72,   73,   74,   75,   76,   77,   78,  138,   80,   81,
 /*  3250 */    82,   83,   84,   85,   86,   87,   88,   89,   90,   91,
 /*  3260 */    92,   93,   94,   95,   96,   97,   98,   99,  100,  101,
 /*  3270 */   102,  103,  104,  105,  106,  107,  108,  109,  110,  111,
 /*  3280 */   112,  113,  114,  115,  116,  117,  118,  119,  120,  121,
 /*  3290 */   122,  123,  124,  125,  126,  127,  128,  129,  130,  131,
 /*  3300 */   132,    1,    2,    3,    4,    5,  286,  286,  286,  286,
 /*  3310 */    10,   11,  286,   13,   73,   74,   75,   76,   77,   78,
 /*  3320 */   286,  286,  286,  286,  286,  286,  286,  286,   28,  286,
 /*  3330 */   286,  165,  166,  286,  286,  286,  286,  286,   97,  286,
 /*  3340 */   286,  100,  286,  286,  286,  286,   46,   47,  286,  286,
 /*  3350 */   286,  286,   52,  286,   54,   55,   56,   57,   58,   59,
 /*  3360 */    60,   61,   62,   63,   64,  286,   66,   67,   68,  286,
 /*  3370 */   286,  286,  286,   73,  286,  286,  286,  286,  286,  138,
 /*  3380 */    80,   81,   82,   83,   84,  286,   86,  286,   88,  286,
 /*  3390 */    90,  286,  286,   93,  286,  286,   96,  231,  286,   99,
 /*  3400 */   286,  101,  102,  103,  104,  105,  106,  286,  108,  109,
 /*  3410 */   110,  286,  286,  286,  114,  115,  286,  286,  252,  119,
 /*  3420 */   286,  255,  286,  123,  124,  125,  126,  127,  128,  129,
 /*  3430 */   130,  265,  132,  133,  134,  269,  136,  137,  286,  139,
 /*  3440 */   140,  286,  286,  143,  286,  286,  146,  147,  148,  149,
 /*  3450 */   286,  151,  286,  153,  286,    1,    2,    3,    4,    5,
 /*  3460 */   286,  286,  286,  286,   10,   11,  286,   13,  286,  286,
 /*  3470 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  3480 */   286,  286,   28,  286,  286,  286,  286,  286,  286,  286,
 /*  3490 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  3500 */    46,   47,  286,  286,  286,  286,   52,  286,   54,   55,
 /*  3510 */    56,   57,   58,   59,   60,   61,   62,   63,   64,  286,
 /*  3520 */    66,   67,   68,  286,  286,  286,  286,   73,  286,  286,
 /*  3530 */   286,  286,  165,  166,   80,   81,   82,   83,   84,  286,
 /*  3540 */    86,  286,   88,  286,   90,  286,  286,   93,  286,  286,
 /*  3550 */    96,  286,  286,   99,  286,  101,  102,  103,  104,  105,
 /*  3560 */   106,  286,  108,  109,  110,  286,  286,  286,  114,  115,
 /*  3570 */   286,  204,  286,  119,  286,  286,  286,  123,  124,  125,
 /*  3580 */   126,  127,  128,  129,  130,  218,  132,  133,  134,  286,
 /*  3590 */   136,  137,  286,  139,  140,  286,  286,  143,  231,  286,
 /*  3600 */   146,  147,  148,  149,  286,  151,  286,  153,  286,    1,
 /*  3610 */     2,    3,    4,    5,  286,  286,  286,  286,   10,   11,
 /*  3620 */   286,   13,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  3630 */   286,  264,  265,  286,  267,  268,   28,  286,  271,  286,
 /*  3640 */   273,  286,  275,  276,  286,  278,  279,  286,  286,  286,
 /*  3650 */   286,  286,  286,  286,   46,   47,  286,  286,  286,  286,
 /*  3660 */    52,  286,   54,   55,   56,   57,   58,   59,   60,   61,
 /*  3670 */    62,   63,   64,  286,   66,   67,   68,  286,  286,  286,
 /*  3680 */   286,   73,  286,  286,  286,  286,  165,  166,   80,   81,
 /*  3690 */    82,   83,   84,  286,   86,  286,   88,  286,   90,  286,
 /*  3700 */   286,   93,  286,  286,   96,  286,  286,   99,  286,  101,
 /*  3710 */   102,  103,  104,  105,  106,  286,  108,  109,  110,  286,
 /*  3720 */   286,  286,  114,  115,  286,  204,  286,  119,  286,  286,
 /*  3730 */   286,  123,  124,  125,  126,  127,  128,  129,  130,  218,
 /*  3740 */   132,  133,  134,  286,  136,  137,  286,  139,  140,  286,
 /*  3750 */   286,  143,  231,  286,  146,  147,  148,  149,  286,  151,
 /*  3760 */   286,  153,  286,    1,    2,    3,    4,    5,  286,  286,
 /*  3770 */   286,  286,   10,   11,  286,   13,  286,  286,  286,  286,
 /*  3780 */   286,  286,  286,  286,  286,  264,  265,  286,  267,  268,
 /*  3790 */    28,  286,  271,  286,  273,  286,  275,  276,  286,  278,
 /*  3800 */   279,  286,  286,  286,  286,  286,  286,  286,   46,   47,
 /*  3810 */   286,  286,  286,  286,   52,  286,   54,   55,   56,   57,
 /*  3820 */    58,   59,   60,   61,   62,   63,   64,  286,   66,   67,
 /*  3830 */    68,  286,  286,  286,  286,   73,  286,  286,  286,  286,
 /*  3840 */   165,  166,   80,   81,   82,   83,   84,  286,   86,  286,
 /*  3850 */    88,  286,   90,  286,  286,   93,  286,  286,   96,  286,
 /*  3860 */   286,   99,  286,  101,  102,  103,  104,  105,  106,  286,
 /*  3870 */   108,  109,  110,  286,  286,  286,  114,  115,  286,  204,
 /*  3880 */   286,  119,  286,  286,  286,  123,  124,  125,  126,  127,
 /*  3890 */   128,  129,  130,  218,  132,  133,  134,  286,  136,  137,
 /*  3900 */   286,  139,  140,  286,  286,  143,  231,  286,  146,  147,
 /*  3910 */   148,  149,  286,  151,  286,  153,  286,    1,    2,    3,
 /*  3920 */     4,    5,  286,  286,  286,  286,   10,   11,  286,   13,
 /*  3930 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  264,
 /*  3940 */   265,  286,  267,  268,   28,  286,  271,  286,  273,  286,
 /*  3950 */   275,  276,  286,  278,  279,  286,  286,  286,  286,  286,
 /*  3960 */   286,  286,   46,   47,  286,  286,  286,  286,   52,  286,
 /*  3970 */    54,   55,   56,   57,   58,   59,   60,   61,   62,   63,
 /*  3980 */    64,  286,   66,   67,   68,  286,  286,  286,  286,   73,
 /*  3990 */   286,  286,  286,  286,  165,  166,   80,   81,   82,   83,
 /*  4000 */    84,  286,   86,  286,   88,  286,   90,  286,  286,   93,
 /*  4010 */   286,  286,   96,  286,  286,   99,  286,  101,  102,  103,
 /*  4020 */   104,  105,  106,  286,  108,  109,  110,  286,  286,  286,
 /*  4030 */   114,  115,  286,  204,  286,  119,  286,  286,  286,  123,
 /*  4040 */   124,  125,  126,  127,  128,  129,  130,  286,  132,  133,
 /*  4050 */   134,  286,  136,  137,  286,  139,  140,  286,  286,  143,
 /*  4060 */   231,  286,  146,  147,  148,  149,  286,  151,  286,  153,
 /*  4070 */   286,    1,    2,    3,    4,    5,  286,  286,  286,  286,
 /*  4080 */    10,   11,  286,   13,  286,  286,  286,  286,  286,  286,
 /*  4090 */   286,  286,  286,  264,  265,  286,  267,  268,  286,  286,
 /*  4100 */   271,  286,  273,  286,  275,  276,  286,  278,  286,  286,
 /*  4110 */   286,  286,  286,  286,  286,  286,   46,   47,  286,  286,
 /*  4120 */   286,  286,   52,  286,   54,   55,   56,   57,   58,   59,
 /*  4130 */    60,   61,   62,   63,   64,  286,   66,   67,   68,  286,
 /*  4140 */   286,  286,  286,   73,  286,  286,  286,  286,  286,  286,
 /*  4150 */    80,   81,   82,   83,   84,  286,   86,  286,   88,  286,
 /*  4160 */    90,  286,  286,   93,  286,  286,   96,  286,  286,   99,
 /*  4170 */   286,  101,  102,  103,  104,  105,  106,  286,  108,  109,
 /*  4180 */   110,  286,  286,  286,  114,  115,  286,  286,  286,  119,
 /*  4190 */   286,  286,  286,  123,  124,  125,  126,  127,  128,  129,
 /*  4200 */   130,  286,  132,  133,  134,  286,  136,  137,  286,  139,
 /*  4210 */   140,  165,  166,  143,  286,  286,  146,  147,  148,  149,
 /*  4220 */   286,  151,  286,  153,  286,    1,    2,    3,    4,    5,
 /*  4230 */   286,  286,  286,  187,   10,   11,  286,   13,  286,  286,
 /*  4240 */   286,  286,  286,  286,  286,  286,  286,  286,  286,   73,
 /*  4250 */   204,  205,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  4260 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  4270 */    46,   47,  286,  286,  228,  229,   52,  231,   54,   55,
 /*  4280 */    56,   57,   58,   59,   60,   61,   62,   63,   64,  286,
 /*  4290 */    66,   67,   68,  286,  286,  119,  286,   73,  122,  286,
 /*  4300 */   254,  286,  256,  257,   80,  259,  286,  286,  132,  133,
 /*  4310 */   264,  265,  286,  267,  268,  286,  140,  271,  286,  273,
 /*  4320 */   286,  275,  276,  286,  278,  286,  102,  103,  286,  153,
 /*  4330 */   106,  286,  286,  109,  286,  286,  161,  162,  163,  115,
 /*  4340 */   165,  166,  286,  119,  286,  286,  286,  123,  124,  125,
 /*  4350 */   126,  127,  128,  129,  130,  286,  132,  133,  134,  135,
 /*  4360 */   286,  165,  166,  286,  140,  141,  286,  143,  286,  286,
 /*  4370 */   146,  147,  148,  149,  286,  151,  286,  153,  286,    1,
 /*  4380 */     2,    3,    4,    5,  286,  286,  286,  286,   10,   11,
 /*  4390 */   286,   13,  196,  286,  286,  286,  286,  286,  286,  203,
 /*  4400 */   204,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  4410 */   286,  286,  286,  286,  286,  240,  241,  242,  243,  244,
 /*  4420 */   245,  286,  286,  286,   46,   47,  286,  231,  286,  286,
 /*  4430 */    52,  286,   54,   55,   56,   57,   58,   59,   60,   61,
 /*  4440 */    62,   63,   64,  286,   66,   67,   68,  286,  286,  165,
 /*  4450 */   166,   73,  286,  286,  286,  286,  286,  286,   80,  286,
 /*  4460 */   264,  265,  286,  267,  268,  286,  286,  271,  286,  273,
 /*  4470 */   286,  275,  276,  286,  278,  286,  286,  286,  286,  286,
 /*  4480 */   102,  103,  286,  286,  106,  286,  202,  109,  204,  286,
 /*  4490 */   286,  286,  286,  115,   73,  286,  286,  119,  286,  286,
 /*  4500 */   286,  123,  124,  125,  126,  127,  128,  129,  130,  286,
 /*  4510 */   132,  133,  134,  286,  286,  231,  286,  286,  140,  141,
 /*  4520 */   286,  143,  286,  286,  146,  147,  148,  149,  286,  151,
 /*  4530 */   286,  153,  286,    1,    2,    3,    4,    5,  286,  286,
 /*  4540 */   119,  286,   10,   11,  286,   13,  286,  286,  264,  265,
 /*  4550 */   286,  267,  268,  132,  133,  271,  286,  273,  286,  275,
 /*  4560 */   276,  140,  278,  286,  286,  286,   34,  286,  286,  286,
 /*  4570 */   286,  286,  286,  286,  153,  286,  286,  286,   46,   47,
 /*  4580 */   286,  286,  286,  286,   52,  286,   54,   55,   56,   57,
 /*  4590 */    58,   59,   60,   61,   62,   63,   64,  286,   66,   67,
 /*  4600 */    68,  286,  286,  286,  286,   73,  286,  286,  286,  286,
 /*  4610 */   286,  286,   80,  286,  286,  286,  286,  286,  286,   73,
 /*  4620 */    74,   75,   76,   77,   78,  161,  162,  163,  286,  165,
 /*  4630 */   166,  286,  286,  286,  102,  103,  286,  286,  106,  286,
 /*  4640 */   286,  109,  286,   97,  286,  286,  100,  115,  286,  286,
 /*  4650 */   286,  119,  286,  286,  286,  123,  124,  125,  126,  127,
 /*  4660 */   128,  129,  130,  286,  132,  133,  134,  286,  286,  286,
 /*  4670 */   286,  286,  140,  165,  166,  143,  286,  286,  146,  147,
 /*  4680 */   148,  149,  286,  151,  138,  153,  286,    1,    2,    3,
 /*  4690 */     4,    5,  286,  286,  286,  187,   10,   11,  286,   13,
 /*  4700 */   286,  286,  286,  195,  286,  241,  242,  243,  244,  245,
 /*  4710 */   286,  286,  204,  205,   28,  286,  286,  286,  286,  286,
 /*  4720 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  4730 */   286,  286,   46,   47,  286,  286,  286,  286,   52,  231,
 /*  4740 */    54,   55,   56,   57,   58,   59,   60,   61,   62,   63,
 /*  4750 */    64,  286,   66,   67,   68,  286,  286,  286,  250,   73,
 /*  4760 */   286,  286,  254,  286,  256,  257,   80,  259,  286,  286,
 /*  4770 */   286,  286,  264,  265,  286,  267,  268,  286,  286,  271,
 /*  4780 */   286,  273,  286,  275,  276,  286,  278,  286,  102,  103,
 /*  4790 */   286,  286,  106,  286,  286,  109,  286,  286,  286,  286,
 /*  4800 */   286,  115,  286,  286,  286,  119,  286,  286,  286,  123,
 /*  4810 */   124,  125,  126,  127,  128,  129,  130,  286,  132,  133,
 /*  4820 */   134,  286,  286,  286,  286,  286,  140,  165,  166,  143,
 /*  4830 */   286,  286,  146,  147,  148,  149,  286,  151,  286,  153,
 /*  4840 */   286,    1,    2,    3,    4,    5,  286,  286,  286,  187,
 /*  4850 */    10,   11,  286,   13,  286,  286,  286,   73,   74,   75,
 /*  4860 */    76,   77,   78,  286,  286,  286,  204,  205,  286,  286,
 /*  4870 */   286,  286,  286,  286,   34,  286,  286,  286,  286,  286,
 /*  4880 */   286,   97,  286,  286,  100,  286,   46,   47,  286,  286,
 /*  4890 */   286,  286,   52,  231,   54,   55,   56,   57,   58,   59,
 /*  4900 */    60,   61,   62,   63,   64,  286,   66,   67,   68,  286,
 /*  4910 */   286,  286,  250,   73,  286,  286,  254,  286,  256,  257,
 /*  4920 */    80,  259,  138,  286,  286,  286,  264,  265,  286,  267,
 /*  4930 */   268,  286,  286,  271,  286,  273,  286,  275,  276,  286,
 /*  4940 */   278,  286,  102,  103,  286,  286,  106,  286,  286,  109,
 /*  4950 */   286,  286,  286,  286,  286,  115,  286,  286,  286,  119,
 /*  4960 */   286,  286,  286,  123,  124,  125,  126,  127,  128,  129,
 /*  4970 */   130,  286,  132,  133,  134,  286,  286,  286,  286,  286,
 /*  4980 */   140,  165,  166,  143,  286,  286,  146,  147,  148,  149,
 /*  4990 */   286,  151,  286,  153,  286,    1,    2,    3,    4,    5,
 /*  5000 */   286,  286,  286,  187,   10,   11,  286,   13,  192,  286,
 /*  5010 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  5020 */   204,  205,  286,  286,  286,  286,  286,  286,   34,  286,
 /*  5030 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  5040 */    46,   47,  286,  286,  286,  286,   52,  231,   54,   55,
 /*  5050 */    56,   57,   58,   59,   60,   61,   62,   63,   64,  286,
 /*  5060 */    66,   67,   68,  286,  286,  286,  286,   73,  286,  286,
 /*  5070 */   254,  286,  256,  257,   80,  259,  286,  286,  286,  286,
 /*  5080 */   264,  265,  286,  267,  268,  286,  286,  271,  286,  273,
 /*  5090 */   286,  275,  276,  286,  278,  286,  102,  103,  286,  286,
 /*  5100 */   106,  286,  286,  109,  286,  286,  286,  286,  286,  115,
 /*  5110 */   286,  286,  286,  119,  286,  286,  286,  123,  124,  125,
 /*  5120 */   126,  127,  128,  129,  130,  286,  132,  133,  134,  286,
 /*  5130 */   286,  286,  286,  286,  140,  165,  166,  143,  286,  286,
 /*  5140 */   146,  147,  148,  149,  286,  151,  286,  153,  286,    1,
 /*  5150 */     2,    3,    4,    5,  286,  286,  286,  187,   10,   11,
 /*  5160 */   286,   13,  192,  286,  286,  286,  286,  286,  286,  286,
 /*  5170 */   286,  286,  286,  286,  204,  205,  286,  286,  286,  286,
 /*  5180 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  5190 */   286,  286,  286,  286,   46,   47,  286,  286,  286,  286,
 /*  5200 */    52,  231,   54,   55,   56,   57,   58,   59,   60,   61,
 /*  5210 */    62,   63,   64,  286,   66,   67,   68,  286,  286,  286,
 /*  5220 */   286,   73,  286,  286,  254,  286,  256,  257,   80,  259,
 /*  5230 */   286,  286,  286,  286,  264,  265,  286,  267,  268,  286,
 /*  5240 */   286,  271,  286,  273,  286,  275,  276,  286,  278,  286,
 /*  5250 */   102,  103,  286,  286,  106,  286,  286,  109,  286,  286,
 /*  5260 */   286,  286,  286,  115,  286,  286,  286,  119,  286,  286,
 /*  5270 */   286,  123,  124,  125,  126,  127,  128,  129,  130,  286,
 /*  5280 */   132,  133,  134,  286,  286,  286,  286,  286,  140,  165,
 /*  5290 */   166,  143,  286,  286,  146,  147,  148,  149,  286,  151,
 /*  5300 */   286,  153,  286,  155,  286,    1,    2,    3,    4,    5,
 /*  5310 */   286,  187,  286,  286,   10,   11,  286,   13,  286,  286,
 /*  5320 */   286,  286,  286,  286,  286,  286,  286,  286,  204,  205,
 /*  5330 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  5340 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  5350 */    46,   47,  286,  286,  286,  231,   52,  286,   54,   55,
 /*  5360 */    56,   57,   58,   59,   60,   61,   62,   63,   64,  286,
 /*  5370 */    66,   67,   68,  286,  286,  286,  286,   73,  254,  286,
 /*  5380 */   256,  257,  286,  259,   80,  286,  286,  286,  264,  265,
 /*  5390 */   286,  267,  268,  286,  286,  271,  272,  273,  286,  275,
 /*  5400 */   276,  286,  278,  286,  280,  281,  102,  103,  286,  286,
 /*  5410 */   106,  286,  286,  109,  286,  286,  286,  286,  286,  115,
 /*  5420 */   286,  286,  286,  119,  286,  286,  286,  123,  124,  125,
 /*  5430 */   126,  127,  128,  129,  130,  286,  132,  133,  134,    7,
 /*  5440 */     8,    9,  286,  286,  140,  286,  286,  143,  286,  286,
 /*  5450 */   146,  147,  148,  149,  286,  151,  286,  153,  286,   27,
 /*  5460 */    28,   29,   30,   31,   32,   33,   34,   35,   36,   37,
 /*  5470 */    38,   39,   40,   41,   42,   43,   44,   45,   46,   47,
 /*  5480 */    48,   49,   50,   51,  286,   53,  286,  286,  286,  286,
 /*  5490 */   286,  286,  286,  286,   34,  286,  286,   65,  286,  286,
 /*  5500 */    14,   15,   16,   17,   18,   19,   20,   21,   22,   23,
 /*  5510 */    24,   25,   26,  286,  286,  286,  165,  166,  167,  168,
 /*  5520 */   169,  170,  171,  286,  286,  286,   66,  286,  286,  286,
 /*  5530 */   286,  286,  286,   73,  286,  184,  185,  186,  187,  286,
 /*  5540 */   286,   55,   56,  286,  286,  286,  286,  286,  286,  286,
 /*  5550 */   286,  286,   66,  286,  286,  204,  205,  286,  286,  286,
 /*  5560 */   286,  286,  286,  212,  286,  286,  286,  286,  136,  109,
 /*  5570 */   286,  286,  221,  222,  286,  115,  286,  286,  286,  119,
 /*  5580 */   286,  286,  231,  286,  286,  286,  286,  286,  286,  286,
 /*  5590 */   286,  286,  132,  133,  134,  286,  286,  286,  286,  286,
 /*  5600 */   140,  286,  286,  286,  286,  254,  146,  256,  257,  286,
 /*  5610 */   259,  286,  286,  153,  286,  264,  265,  286,  267,  268,
 /*  5620 */   286,  286,  271,  137,  273,  286,  275,  276,  142,  278,
 /*  5630 */     7,    8,    9,  286,  286,  286,  286,  286,  152,  286,
 /*  5640 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  5650 */    27,  286,   29,   30,   31,   32,   33,   34,   35,   36,
 /*  5660 */    37,   38,   39,   40,   41,   42,   43,   44,   45,   46,
 /*  5670 */    47,   48,   49,   50,   51,  286,   53,    7,    8,    9,
 /*  5680 */   286,  286,  286,  286,  286,  286,  286,  286,   65,  286,
 /*  5690 */   286,  286,  286,  286,  286,  286,  286,   27,  286,   29,
 /*  5700 */    30,   31,   32,   33,   34,   35,   36,   37,   38,   39,
 /*  5710 */    40,   41,   42,   43,   44,   45,   46,   47,   48,   49,
 /*  5720 */    50,   51,  286,   53,  286,  286,  286,  286,  286,  286,
 /*  5730 */   286,  286,  286,  286,  286,   65,  286,  286,  286,  286,
 /*  5740 */   286,  286,  286,    7,    8,    9,  286,  286,  286,  286,
 /*  5750 */   286,  286,  286,  286,  286,   66,  286,  286,  135,  286,
 /*  5760 */   286,  286,   73,   27,  286,   29,   30,   31,   32,   33,
 /*  5770 */    34,   35,   36,   37,   38,   39,   40,   41,   42,   43,
 /*  5780 */    44,   45,   46,   47,   48,   49,   50,   51,  286,   53,
 /*  5790 */   286,  164,  165,  166,  167,  168,  169,  170,  171,  286,
 /*  5800 */   286,   65,  286,  286,  115,  286,  136,  286,  119,  286,
 /*  5810 */   286,  286,  185,  186,  187,  286,  286,  286,  286,  286,
 /*  5820 */   286,  132,  133,  134,  286,  286,  286,  286,  286,  140,
 /*  5830 */   286,  204,  205,  286,  286,  146,  286,  286,  286,  212,
 /*  5840 */   286,  286,  153,  286,  286,  286,  286,  286,  221,  222,
 /*  5850 */   286,  286,  286,  286,  286,  286,  286,  286,  231,  286,
 /*  5860 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  5870 */   286,  135,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  5880 */   286,  254,  286,  256,  257,  286,  259,  286,  286,  286,
 /*  5890 */   286,  264,  265,  286,  267,  268,  286,  286,  271,  286,
 /*  5900 */   273,  286,  275,  276,  286,  278,    7,    8,    9,  286,
 /*  5910 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  5920 */   286,  286,  286,  286,  286,  286,   27,  286,   29,   30,
 /*  5930 */    31,   32,   33,   34,   35,   36,   37,   38,   39,   40,
 /*  5940 */    41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
 /*  5950 */    51,  286,   53,    7,    8,    9,  286,  286,  286,  286,
 /*  5960 */   286,  286,  286,  286,   65,  286,  286,  286,  286,  286,
 /*  5970 */   286,  286,  286,   27,  286,   29,   30,   31,   32,   33,
 /*  5980 */    34,   35,   36,   37,   38,   39,   40,   41,   42,   43,
 /*  5990 */    44,   45,   46,   47,   48,   49,   50,   51,  286,   53,
 /*  6000 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  6010 */   286,   65,  286,  286,  286,  286,  286,  286,  286,    7,
 /*  6020 */     8,    9,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  6030 */   286,  286,  286,  286,  286,  286,  286,  138,  286,   27,
 /*  6040 */   286,   29,   30,   31,   32,   33,   34,   35,   36,   37,
 /*  6050 */    38,   39,   40,   41,   42,   43,   44,   45,   46,   47,
 /*  6060 */    48,   49,   50,   51,  286,   53,    7,    8,    9,  286,
 /*  6070 */   286,  286,  286,  286,  286,  286,  286,   65,  286,  286,
 /*  6080 */   286,  286,  286,  286,  138,  286,   27,  286,   29,   30,
 /*  6090 */    31,   32,   33,   34,   35,   36,   37,   38,   39,   40,
 /*  6100 */    41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
 /*  6110 */    51,  286,   53,  286,  286,  286,  286,  286,  286,  286,
 /*  6120 */   286,  286,  286,  286,   65,  286,  286,  286,  286,  286,
 /*  6130 */   286,  286,    7,    8,    9,  286,  286,  286,  286,  286,
 /*  6140 */   286,  286,  286,  286,  286,  286,  286,  135,  286,  286,
 /*  6150 */   286,  286,   27,  286,   29,   30,   31,   32,   33,   34,
 /*  6160 */    35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
 /*  6170 */    45,   46,   47,   48,   49,   50,   51,  286,   53,    7,
 /*  6180 */     8,    9,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  6190 */    65,  286,  286,  286,  286,  286,  286,  138,  286,   27,
 /*  6200 */   286,   29,   30,   31,   32,   33,   34,   35,   36,   37,
 /*  6210 */    38,   39,   40,   41,   42,   43,   44,   45,   46,   47,
 /*  6220 */    48,   49,   50,   51,  286,   53,  286,  286,  286,  286,
 /*  6230 */   286,  286,  286,  286,  286,  286,  286,   65,  286,  286,
 /*  6240 */   286,  286,  286,  286,  286,    7,    8,    9,  286,  286,
 /*  6250 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  6260 */   135,  286,  165,  166,  286,   27,  286,   29,   30,   31,
 /*  6270 */    32,   33,   34,   35,   36,   37,   38,   39,   40,   41,
 /*  6280 */    42,   43,   44,   45,   46,   47,   48,   49,   50,   51,
 /*  6290 */   286,   53,  286,  286,  286,  286,  286,  286,  286,  202,
 /*  6300 */   286,  204,  286,   65,  286,  286,  286,  135,  286,  286,
 /*  6310 */   286,    7,    8,    9,  286,  286,  286,  286,  286,  286,
 /*  6320 */   286,  286,  286,  286,  286,  286,  286,  286,  231,  286,
 /*  6330 */    92,   27,  286,   29,   30,   31,   32,   33,   34,   35,
 /*  6340 */    36,   37,   38,   39,   40,   41,   42,   43,   44,   45,
 /*  6350 */    46,   47,   48,   49,   50,   51,  286,   53,    7,    8,
 /*  6360 */     9,  264,  265,  286,  267,  268,  286,  286,  271,   65,
 /*  6370 */   273,  286,  275,  276,  286,  278,  286,  286,   27,  286,
 /*  6380 */    29,   30,   31,   32,   33,   34,   35,   36,   37,   38,
 /*  6390 */    39,   40,   41,   42,   43,   44,   45,   46,   47,   48,
 /*  6400 */    49,   50,   51,  286,   53,  286,  286,  286,  286,  286,
 /*  6410 */   286,  286,  286,  286,  286,  286,   65,  286,  286,  286,
 /*  6420 */   286,  286,  286,  286,    7,    8,    9,  286,  286,  286,
 /*  6430 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  135,
 /*  6440 */   286,  286,  286,  286,   27,  286,   29,   30,   31,   32,
 /*  6450 */    33,   34,   35,   36,   37,   38,   39,   40,   41,   42,
 /*  6460 */    43,   44,   45,   46,   47,   48,   49,   50,   51,  286,
 /*  6470 */    53,    7,    8,    9,  286,  286,  286,  286,  286,  286,
 /*  6480 */   286,  286,   65,  286,  286,  286,  135,  286,  286,  286,
 /*  6490 */   286,   27,  286,   29,   30,   31,   32,   33,   34,   35,
 /*  6500 */    36,   37,   38,   39,   40,   41,   42,   43,   44,   45,
 /*  6510 */    46,   47,   48,   49,   50,   51,  286,   53,  286,  286,
 /*  6520 */   286,  286,  286,  286,  286,  286,  286,  286,  286,   65,
 /*  6530 */   286,  286,  286,  286,  286,  286,  286,    7,    8,    9,
 /*  6540 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  6550 */   286,  286,  286,  286,  286,  138,  286,   27,  286,   29,
 /*  6560 */    30,   31,   32,   33,   34,   35,   36,   37,   38,   39,
 /*  6570 */    40,   41,   42,   43,   44,   45,   46,   47,   48,   49,
 /*  6580 */    50,   51,  286,   53,    7,    8,    9,  286,  286,   12,
 /*  6590 */   286,  286,  286,  286,  286,   65,  286,  286,  286,  135,
 /*  6600 */   286,  286,  286,  286,   27,  286,   29,   30,   31,   32,
 /*  6610 */    33,   34,   35,   36,   37,   38,   39,   40,   41,   42,
 /*  6620 */    43,   44,   45,   46,   47,   48,   49,   50,   51,  286,
 /*  6630 */    53,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  6640 */   286,  286,   65,  286,  286,  286,  286,  286,  286,  286,
 /*  6650 */     7,    8,    9,  286,  286,  286,  286,  286,  286,  286,
 /*  6660 */   286,  286,  286,  286,  286,  286,  136,  286,  286,  286,
 /*  6670 */    27,  286,   29,   30,   31,   32,   33,   34,   35,   36,
 /*  6680 */    37,   38,   39,   40,   41,   42,   43,   44,   45,   46,
 /*  6690 */    47,   48,   49,   50,   51,  286,   53,    7,    8,    9,
 /*  6700 */   286,  286,  286,  286,  286,  286,  286,  286,   65,  286,
 /*  6710 */   286,  286,  286,  286,  286,  286,  286,   27,  286,   29,
 /*  6720 */    30,   31,   32,   33,   34,   35,   36,   37,   38,   39,
 /*  6730 */    40,   41,   42,   43,   44,   45,   46,   47,   48,   49,
 /*  6740 */    50,   51,  286,   53,  286,  286,  286,  286,  286,  286,
 /*  6750 */   286,  286,  286,  286,  286,   65,  286,  286,  286,  286,
 /*  6760 */   286,  286,  286,    7,    8,    9,  286,  286,  286,  286,
 /*  6770 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  6780 */   286,  138,  286,   27,  286,   29,   30,   31,   32,   33,
 /*  6790 */    34,   35,   36,   37,   38,   39,   40,   41,   42,   43,
 /*  6800 */    44,   45,   46,   47,   48,   49,   50,   51,  286,   53,
 /*  6810 */     7,    8,    9,  286,  286,  286,  286,  286,  286,  286,
 /*  6820 */   286,   65,  286,  286,  286,  286,  286,  286,  138,  286,
 /*  6830 */    27,  286,   29,   30,   31,   32,   33,   34,   35,   36,
 /*  6840 */    37,   38,   39,   40,   41,   42,   43,   44,   45,   46,
 /*  6850 */    47,   48,   49,   50,   51,  286,   53,  286,  286,  286,
 /*  6860 */   286,  286,  286,  286,  286,  286,  286,  286,   65,  286,
 /*  6870 */   286,  286,  286,  286,  286,  286,    7,    8,    9,  286,
 /*  6880 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  6890 */   286,  135,  286,  286,  286,  286,   27,  286,   29,   30,
 /*  6900 */    31,   32,   33,   34,   35,   36,   37,   38,   39,   40,
 /*  6910 */    41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
 /*  6920 */    51,  286,   53,    8,    9,  286,  286,  286,  286,  286,
 /*  6930 */   286,  286,  286,  286,   65,  286,  286,  286,  135,  286,
 /*  6940 */   286,  286,   27,  286,   29,   30,   31,   32,   33,   34,
 /*  6950 */    35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
 /*  6960 */    45,   46,   47,   48,   49,   50,   51,  286,   53,  165,
 /*  6970 */   166,  167,  286,  286,  286,  286,  286,  286,  286,   66,
 /*  6980 */    65,  286,  286,  286,  286,  286,   73,  286,  286,  185,
 /*  6990 */   186,  187,  286,  286,  286,  286,  286,  286,  165,  166,
 /*  7000 */   167,  286,  286,  199,  286,  286,  286,  286,  204,  205,
 /*  7010 */   286,  286,  286,  286,  286,  286,  286,  286,  185,  186,
 /*  7020 */   187,  188,  109,  286,  286,  221,  222,  286,  115,  286,
 /*  7030 */   286,  286,  119,  286,  286,  231,  286,  204,  205,  286,
 /*  7040 */   286,  286,  286,  286,  286,  132,  133,  134,  286,  286,
 /*  7050 */   286,  286,  286,  140,  221,  222,  286,  286,  254,  146,
 /*  7060 */   256,  257,  286,  259,  231,  286,  153,  286,  264,  265,
 /*  7070 */   286,  267,  268,  286,  286,  271,  286,  273,  286,  275,
 /*  7080 */   276,  286,  278,  165,  166,  286,  286,  254,  286,  256,
 /*  7090 */   257,  286,  259,  286,  286,  286,  286,  264,  265,  286,
 /*  7100 */   267,  268,  286,  286,  271,  187,  273,  286,  275,  276,
 /*  7110 */   192,  278,  165,  166,  167,  286,  286,  286,  286,  286,
 /*  7120 */   286,  286,  204,  205,  286,  286,  286,  286,  286,  286,
 /*  7130 */   286,  286,  185,  186,  187,  286,  286,  286,  286,  286,
 /*  7140 */   286,  286,  286,  286,  286,  198,  286,  286,  286,  231,
 /*  7150 */   286,  204,  205,  286,  286,  286,  286,  286,  286,  286,
 /*  7160 */   286,  286,  286,  286,  286,  286,  286,  286,  221,  222,
 /*  7170 */   286,  286,  254,  286,  256,  257,  286,  259,  231,  286,
 /*  7180 */   286,  286,  264,  265,  286,  267,  268,  286,  286,  271,
 /*  7190 */   286,  273,  286,  275,  276,  286,  278,  286,  286,  286,
 /*  7200 */   286,  254,  286,  256,  257,  286,  259,  286,  286,  286,
 /*  7210 */   286,  264,  265,  286,  267,  268,  286,  286,  271,  286,
 /*  7220 */   273,  286,  275,  276,  286,  278,  165,  166,  167,  286,
 /*  7230 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  7240 */   286,  286,  286,  286,  286,  286,  185,  186,  187,  286,
 /*  7250 */   286,  190,  286,  286,  286,  165,  166,  167,  286,  286,
 /*  7260 */   286,  286,  286,  286,  286,  204,  205,  286,  286,  286,
 /*  7270 */   286,  286,  286,  286,  286,  185,  186,  187,  286,  286,
 /*  7280 */   286,  286,  221,  222,  286,  286,  286,  286,  286,  286,
 /*  7290 */   286,  286,  231,  286,  204,  205,  286,  286,  286,  286,
 /*  7300 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  7310 */   286,  221,  222,  286,  286,  254,  286,  256,  257,  286,
 /*  7320 */   259,  231,  286,  286,  286,  264,  265,  286,  267,  268,
 /*  7330 */   286,  286,  271,  286,  273,  286,  275,  276,  286,  278,
 /*  7340 */   286,  286,  286,  286,  254,  286,  256,  257,  286,  259,
 /*  7350 */   286,  286,  286,  286,  264,  265,  286,  267,  268,  286,
 /*  7360 */   286,  271,  286,  273,  286,  275,  276,  286,  278,  165,
 /*  7370 */   166,  167,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  7380 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  185,
 /*  7390 */   186,  187,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  7400 */   286,  286,  286,  286,  286,  286,  286,  286,  204,  205,
 /*  7410 */   286,  286,  286,  286,  286,  286,  286,  165,  166,  167,
 /*  7420 */   286,  286,  286,  286,  286,  221,  222,  286,  286,  286,
 /*  7430 */   286,  286,  286,  286,  286,  231,  286,  185,  186,  187,
 /*  7440 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  7450 */   286,  286,  286,  286,  286,  286,  204,  205,  254,  286,
 /*  7460 */   256,  257,  286,  259,  286,  286,  286,  286,  264,  265,
 /*  7470 */   286,  267,  268,  221,  222,  271,  286,  273,  286,  275,
 /*  7480 */   276,  286,  278,  231,  286,  286,  286,  286,  286,  286,
 /*  7490 */   286,  286,  165,  166,  167,  286,  286,  286,  286,  286,
 /*  7500 */   286,  286,  286,  286,  286,  286,  254,  286,  256,  257,
 /*  7510 */   286,  259,  185,  186,  187,  286,  264,  265,  286,  267,
 /*  7520 */   268,  165,  166,  271,  286,  273,  286,  275,  276,  286,
 /*  7530 */   278,  204,  205,  286,  286,  286,  286,  286,  286,  286,
 /*  7540 */   286,  286,  286,  187,  286,  189,  286,  286,  221,  222,
 /*  7550 */   286,  286,  286,  286,  286,  286,  286,  286,  231,  286,
 /*  7560 */   204,  205,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  7570 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  7580 */   286,  254,  286,  256,  257,  286,  259,  231,  286,  286,
 /*  7590 */   286,  264,  265,  286,  267,  268,  286,  286,  271,  286,
 /*  7600 */   273,  286,  275,  276,  286,  278,  286,  251,  286,  286,
 /*  7610 */   254,  286,  256,  257,  286,  259,  286,  286,  286,  286,
 /*  7620 */   264,  265,  286,  267,  268,  286,  286,  271,  286,  273,
 /*  7630 */   286,  275,  276,  286,  278,  165,  166,  286,  286,  286,
 /*  7640 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  7650 */   286,  286,  286,  286,  286,  286,  286,  187,  286,  286,
 /*  7660 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  7670 */   286,  286,  286,  286,  204,  205,  286,  286,  165,  166,
 /*  7680 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  7690 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  7700 */   187,  231,  189,  286,  286,  286,  286,  286,  286,  286,
 /*  7710 */   286,  286,  286,  286,  286,  286,  286,  204,  205,  286,
 /*  7720 */   286,  286,  286,  286,  254,  286,  256,  257,  286,  259,
 /*  7730 */   286,  286,  286,  286,  264,  265,  286,  267,  268,  286,
 /*  7740 */   286,  271,  286,  273,  231,  275,  276,  286,  278,  286,
 /*  7750 */   286,  286,  286,  286,  284,  285,  286,  286,  286,  286,
 /*  7760 */   286,  165,  166,  286,  251,  286,  286,  254,  286,  256,
 /*  7770 */   257,  286,  259,  286,  286,  286,  286,  264,  265,  286,
 /*  7780 */   267,  268,  286,  187,  271,  189,  273,  286,  275,  276,
 /*  7790 */   286,  278,  286,  165,  166,  286,  286,  286,  286,  286,
 /*  7800 */   204,  205,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  7810 */   286,  286,  286,  286,  286,  187,  286,  286,  286,  286,
 /*  7820 */   286,  286,  286,  286,  286,  197,  286,  231,  286,  286,
 /*  7830 */   286,  286,  204,  205,  286,  286,  286,  286,  286,  286,
 /*  7840 */   286,  286,  286,  286,  286,  286,  286,  251,  286,  286,
 /*  7850 */   254,  286,  256,  257,  286,  259,  286,  286,  286,  231,
 /*  7860 */   264,  265,  286,  267,  268,  286,  286,  271,  286,  273,
 /*  7870 */   286,  275,  276,  286,  278,  286,  286,  286,  286,  286,
 /*  7880 */   286,  286,  254,  286,  256,  257,  286,  259,  286,  286,
 /*  7890 */   165,  166,  264,  265,  286,  267,  268,  286,  286,  271,
 /*  7900 */   286,  273,  286,  275,  276,  286,  278,  286,  286,  286,
 /*  7910 */   286,  286,  187,  286,  286,  286,  286,  192,  286,  286,
 /*  7920 */   286,  165,  166,  286,  286,  286,  286,  286,  286,  204,
 /*  7930 */   205,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  7940 */   286,  286,  286,  187,  286,  286,  286,  286,  286,  286,
 /*  7950 */   286,  286,  286,  286,  286,  286,  231,  286,  286,  286,
 /*  7960 */   204,  205,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  7970 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  254,
 /*  7980 */   286,  256,  257,  286,  259,  229,  286,  231,  286,  264,
 /*  7990 */   265,  286,  267,  268,  286,  286,  271,  286,  273,  286,
 /*  8000 */   275,  276,  286,  278,  286,  286,  286,  286,  286,  286,
 /*  8010 */   254,  286,  256,  257,  286,  259,  165,  166,  286,  286,
 /*  8020 */   264,  265,  286,  267,  268,  286,  286,  271,  286,  273,
 /*  8030 */   286,  275,  276,  286,  278,  286,  286,  286,  187,  286,
 /*  8040 */   286,  286,  286,  286,  286,  286,  286,  286,  165,  166,
 /*  8050 */   286,  286,  286,  286,  286,  204,  205,  286,  286,  286,
 /*  8060 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  8070 */   187,  286,  286,  286,  286,  192,  286,  286,  286,  286,
 /*  8080 */   286,  286,  231,  286,  286,  286,  286,  204,  205,  286,
 /*  8090 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  8100 */   286,  286,  286,  286,  286,  254,  286,  256,  257,  286,
 /*  8110 */   259,  286,  286,  286,  231,  264,  265,  286,  267,  268,
 /*  8120 */   286,  286,  271,  286,  273,  286,  275,  276,  286,  278,
 /*  8130 */   286,  286,  281,  286,  286,  286,  286,  254,  286,  256,
 /*  8140 */   257,  286,  259,  286,  286,  165,  166,  264,  265,  286,
 /*  8150 */   267,  268,  286,  286,  271,  286,  273,  286,  275,  276,
 /*  8160 */   286,  278,  286,  286,  286,  286,  286,  187,  286,  286,
 /*  8170 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  8180 */   286,  286,  286,  286,  204,  205,  165,  166,  286,  286,
 /*  8190 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  8200 */   286,  286,  286,  286,  286,  286,  286,  286,  187,  286,
 /*  8210 */   286,  231,  286,  192,  286,  286,  286,  286,  286,  286,
 /*  8220 */   286,  286,  286,  286,  286,  204,  205,  286,  286,  286,
 /*  8230 */   286,  286,  286,  286,  254,  286,  256,  257,  286,  259,
 /*  8240 */   286,  286,  286,  286,  264,  265,  286,  267,  268,  286,
 /*  8250 */   286,  271,  231,  273,  286,  275,  276,  286,  278,  286,
 /*  8260 */   286,  286,  286,  286,  286,  285,  286,  286,  286,  286,
 /*  8270 */   286,  165,  166,  286,  286,  254,  286,  256,  257,  286,
 /*  8280 */   259,  286,  286,  286,  286,  264,  265,  286,  267,  268,
 /*  8290 */   286,  286,  271,  187,  273,  286,  275,  276,  192,  278,
 /*  8300 */   286,  286,  286,  165,  166,  286,  286,  286,  286,  286,
 /*  8310 */   204,  205,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  8320 */   286,  286,  286,  286,  286,  187,  286,  286,  286,  286,
 /*  8330 */   286,  286,  286,  286,  286,  286,  286,  231,  286,  286,
 /*  8340 */   286,  286,  204,  205,  286,  286,  286,  286,  286,  286,
 /*  8350 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  8360 */   254,  286,  256,  257,  286,  259,  286,  286,  286,  231,
 /*  8370 */   264,  265,  286,  267,  268,  286,  286,  271,  286,  273,
 /*  8380 */   286,  275,  276,  286,  278,  286,  286,  286,  286,  286,
 /*  8390 */   286,  286,  254,  286,  256,  257,  286,  259,  286,  286,
 /*  8400 */   165,  166,  264,  265,  286,  267,  268,  286,  286,  271,
 /*  8410 */   286,  273,  286,  275,  276,  286,  278,  286,  286,  286,
 /*  8420 */   286,  286,  187,  286,  286,  286,  286,  286,  286,  286,
 /*  8430 */   286,  165,  166,  286,  286,  286,  286,  286,  286,  204,
 /*  8440 */   205,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  8450 */   286,  286,  286,  187,  286,  286,  286,  286,  286,  286,
 /*  8460 */   286,  286,  286,  286,  286,  286,  231,  286,  286,  286,
 /*  8470 */   204,  205,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  8480 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  254,
 /*  8490 */   286,  256,  257,  286,  259,  286,  286,  231,  286,  264,
 /*  8500 */   265,  286,  267,  268,  286,  286,  271,  286,  273,  286,
 /*  8510 */   275,  276,  286,  278,  286,  286,  286,  286,  286,  286,
 /*  8520 */   254,  286,  256,  257,  286,  259,  165,  166,  286,  286,
 /*  8530 */   264,  265,  286,  267,  268,  286,  286,  271,  286,  273,
 /*  8540 */   286,  275,  276,  286,  278,  286,  286,  286,  187,  286,
 /*  8550 */   286,  286,  286,  286,  286,  286,  286,  286,  165,  166,
 /*  8560 */   286,  286,  286,  286,  286,  204,  205,  286,  286,  286,
 /*  8570 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  8580 */   187,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  8590 */   286,  286,  231,  286,  286,  286,  286,  204,  205,  286,
 /*  8600 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  8610 */   286,  286,  286,  286,  286,  254,  286,  256,  257,  286,
 /*  8620 */   259,  286,  286,  286,  231,  264,  265,  286,  267,  268,
 /*  8630 */   286,  286,  271,  286,  273,  286,  275,  276,  286,  278,
 /*  8640 */   286,  286,  286,  286,  286,  286,  286,  254,  286,  256,
 /*  8650 */   257,  286,  259,  286,  286,  165,  166,  264,  265,  286,
 /*  8660 */   267,  268,  286,  286,  271,  286,  273,  286,  275,  276,
 /*  8670 */   286,  278,  286,  286,  286,  286,  286,  187,  286,  286,
 /*  8680 */   286,  286,  286,  286,  286,  286,  165,  166,  286,  286,
 /*  8690 */   286,  286,  286,  286,  204,  205,  286,  286,  286,  286,
 /*  8700 */   286,  286,  286,  286,  286,  286,  286,  286,  187,  286,
 /*  8710 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  8720 */   286,  231,  286,  286,  286,  204,  205,  286,  286,  286,
 /*  8730 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  8740 */   286,  286,  286,  286,  254,  286,  256,  257,  286,  259,
 /*  8750 */   286,  286,  231,  286,  264,  265,  286,  267,  268,  286,
 /*  8760 */   286,  271,  286,  273,  286,  275,  276,  286,  278,  286,
 /*  8770 */   286,  286,  286,  286,  286,  254,  286,  256,  257,  286,
 /*  8780 */   259,  165,  166,  286,  286,  264,  265,  286,  267,  268,
 /*  8790 */   286,  286,  271,  286,  273,  286,  275,  276,  286,  278,
 /*  8800 */   286,  286,  286,  187,  286,  286,  286,  286,  286,  286,
 /*  8810 */   286,  286,  286,  165,  166,  286,  286,  286,  286,  286,
 /*  8820 */   204,  205,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  8830 */   286,  286,  286,  286,  286,  187,  286,  286,  286,  286,
 /*  8840 */   286,  286,  286,  286,  286,  286,  286,  231,  286,  286,
 /*  8850 */   286,  286,  204,  205,  286,  286,  286,  286,  286,  286,
 /*  8860 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  8870 */   254,  286,  256,  257,  286,  259,  286,  286,  286,  231,
 /*  8880 */   264,  265,  286,  267,  268,  286,  286,  271,  286,  273,
 /*  8890 */   286,  275,  276,  286,  278,  286,  286,  286,  286,  286,
 /*  8900 */   286,  286,  254,  286,  256,  257,  286,  259,  286,  286,
 /*  8910 */   165,  166,  264,  265,  286,  267,  268,  286,  286,  271,
 /*  8920 */   286,  273,  286,  275,  276,  286,  278,  286,  286,  286,
 /*  8930 */   286,  286,  187,  286,  286,  286,  286,  286,  286,  286,
 /*  8940 */   286,  165,  166,  286,  286,  286,  286,  286,  286,  204,
 /*  8950 */   205,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  8960 */   286,  286,  286,  187,  286,  286,  286,  286,  286,  286,
 /*  8970 */   286,  286,  286,  286,  286,  286,  231,  286,  286,  286,
 /*  8980 */   204,  205,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  8990 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  254,
 /*  9000 */   286,  256,  257,  286,  259,  286,  286,  231,  286,  264,
 /*  9010 */   265,  286,  267,  268,  286,  286,  271,  286,  273,  286,
 /*  9020 */   275,  276,  286,  278,  286,  286,  286,  286,  286,  286,
 /*  9030 */   254,  286,  256,  257,  286,  259,  165,  166,  286,  286,
 /*  9040 */   264,  265,  286,  267,  268,  286,  286,  271,  286,  273,
 /*  9050 */   286,  275,  276,  286,  278,  286,  286,  286,  187,  286,
 /*  9060 */   286,  286,  286,  286,  286,  286,  286,  286,  165,  166,
 /*  9070 */   286,  286,  286,  286,  286,  204,  205,  286,  286,  286,
 /*  9080 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  9090 */   187,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  9100 */   286,  286,  231,  286,  286,  286,  286,  204,  205,  286,
 /*  9110 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  9120 */   286,  286,  286,  286,  286,  254,  286,  256,  257,  286,
 /*  9130 */   259,  286,  286,  286,  231,  264,  265,  286,  267,  268,
 /*  9140 */   286,  286,  271,  286,  273,  286,  275,  276,  286,  278,
 /*  9150 */   286,  286,  286,  286,  286,  286,  286,  254,  286,  256,
 /*  9160 */   257,  286,  259,  286,  286,  165,  166,  264,  265,  286,
 /*  9170 */   267,  268,  286,  286,  271,  286,  273,  286,  275,  276,
 /*  9180 */   286,  278,  286,  286,  286,  286,  286,  187,  286,  286,
 /*  9190 */   286,  286,  286,  286,  286,  286,  165,  166,  286,  286,
 /*  9200 */   286,  286,  286,  286,  204,  205,  286,  286,  286,  286,
 /*  9210 */   286,  286,  286,  286,  286,  286,  286,  286,  187,  286,
 /*  9220 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  9230 */   286,  231,  286,  286,  286,  204,  205,  286,  286,  286,
 /*  9240 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  9250 */   286,  286,  286,  286,  254,  286,  256,  257,  286,  259,
 /*  9260 */   286,  286,  231,  286,  264,  265,  286,  267,  268,  286,
 /*  9270 */   286,  271,  286,  273,  286,  275,  276,  286,  278,  286,
 /*  9280 */   286,  286,  286,  286,  286,  254,  286,  256,  257,  286,
 /*  9290 */   259,  165,  166,  286,  286,  264,  265,  286,  267,  268,
 /*  9300 */   286,  286,  271,  286,  273,  286,  275,  276,  286,  278,
 /*  9310 */   286,  286,  286,  187,  286,  286,  286,  286,  286,  286,
 /*  9320 */   286,  286,  286,  165,  166,  286,  286,  286,  286,  286,
 /*  9330 */   204,  205,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  9340 */   286,  286,  286,  286,  286,  187,  286,  286,  286,  286,
 /*  9350 */   286,  286,  286,  286,  286,  286,  286,  231,  286,  286,
 /*  9360 */   286,  286,  204,  205,  286,  286,  286,  286,  286,  286,
 /*  9370 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  9380 */   254,  286,  256,  257,  286,  259,  286,  286,  286,  231,
 /*  9390 */   264,  265,  286,  267,  268,  286,  286,  271,  286,  273,
 /*  9400 */   286,  275,  276,  286,  278,  286,  286,  286,  286,  286,
 /*  9410 */   286,  286,  254,  286,  256,  257,  286,  259,  286,  286,
 /*  9420 */   165,  166,  264,  265,  286,  267,  268,  286,  286,  271,
 /*  9430 */   286,  273,  286,  275,  276,  286,  278,  286,  286,  286,
 /*  9440 */   286,  286,  187,  286,  286,  286,  286,  286,  286,  286,
 /*  9450 */   286,  165,  166,  286,  286,  286,  286,  286,  286,  204,
 /*  9460 */   205,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  9470 */   286,  286,  286,  187,  286,  286,  286,  286,  286,  286,
 /*  9480 */   286,  286,  286,  286,  286,  286,  231,  286,  286,  286,
 /*  9490 */   204,  205,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  9500 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  254,
 /*  9510 */   286,  256,  257,  286,  259,  286,  286,  231,  286,  264,
 /*  9520 */   265,  286,  267,  268,  286,  286,  271,  286,  273,  286,
 /*  9530 */   275,  276,  286,  278,  286,  286,  286,  286,  286,  286,
 /*  9540 */   254,  286,  256,  257,  286,  259,  165,  166,  286,  286,
 /*  9550 */   264,  265,  286,  267,  268,  286,  286,  271,  286,  273,
 /*  9560 */   286,  275,  276,  286,  278,  286,  286,  286,  187,  286,
 /*  9570 */   286,  286,  286,  286,  286,  286,  286,  286,  165,  166,
 /*  9580 */   286,  286,  286,  286,  286,  204,  205,  286,  286,  286,
 /*  9590 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  9600 */   187,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  9610 */   286,  286,  231,  286,  286,  286,  286,  204,  205,  286,
 /*  9620 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  9630 */   286,  286,  286,  286,  286,  254,  286,  256,  257,  286,
 /*  9640 */   259,  286,  286,  286,  231,  264,  265,  286,  267,  268,
 /*  9650 */   286,  286,  271,  286,  273,  286,  275,  276,  286,  278,
 /*  9660 */   286,  286,  286,  286,  286,  286,  286,  254,  286,  256,
 /*  9670 */   257,  286,  259,  286,  286,  165,  166,  264,  265,  286,
 /*  9680 */   267,  268,  286,  286,  271,  286,  273,  286,  275,  276,
 /*  9690 */   286,  278,  286,  286,  286,  286,  286,  187,  286,  286,
 /*  9700 */   286,  286,  286,  286,  286,  286,  165,  166,  286,  286,
 /*  9710 */   286,  286,  286,  286,  204,  205,  286,  286,  286,  286,
 /*  9720 */   286,  286,  286,  286,  286,  286,  286,  286,  187,  286,
 /*  9730 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  9740 */   286,  231,  286,  286,  286,  204,  205,  286,  286,  286,
 /*  9750 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  9760 */   286,  286,  286,  286,  254,  286,  256,  257,  286,  259,
 /*  9770 */   286,  286,  231,  286,  264,  265,  286,  267,  268,  286,
 /*  9780 */   286,  271,  286,  273,  286,  275,  276,  286,  278,  286,
 /*  9790 */   286,  286,  286,  286,  286,  254,  286,  256,  257,  286,
 /*  9800 */   259,  165,  166,  286,  286,  264,  265,  286,  267,  268,
 /*  9810 */   286,  286,  271,  286,  273,  286,  275,  276,  286,  278,
 /*  9820 */   286,  286,  286,  187,  286,  286,  286,  286,  286,  286,
 /*  9830 */   286,  286,  286,  165,  166,  286,  286,  286,  286,  286,
 /*  9840 */   204,  205,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  9850 */   286,  286,  286,  286,  286,  187,  286,  286,  286,  286,
 /*  9860 */   286,  286,  286,  286,  286,  286,  286,  231,  286,  286,
 /*  9870 */   286,  286,  204,  205,  286,  286,  286,  286,  286,  286,
 /*  9880 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  9890 */   254,  286,  256,  257,  286,  259,  286,  286,  286,  231,
 /*  9900 */   264,  265,  286,  267,  268,  286,  286,  271,  286,  273,
 /*  9910 */   286,  275,  276,  286,  278,  286,  286,  286,  286,  286,
 /*  9920 */   286,  286,  254,  286,  256,  257,  286,  259,  286,  286,
 /*  9930 */   165,  166,  264,  265,  286,  267,  268,  286,  286,  271,
 /*  9940 */   286,  273,  286,  275,  276,  286,  278,  286,  286,  286,
 /*  9950 */   286,  286,  187,  286,  286,  286,  286,  286,  286,  286,
 /*  9960 */   286,  165,  166,  286,  286,  286,  286,  286,  286,  204,
 /*  9970 */   205,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /*  9980 */   286,  286,  286,  187,  286,  286,  286,  286,  286,  286,
 /*  9990 */   286,  286,  286,  286,  286,  286,  231,  286,  286,  286,
 /* 10000 */   204,  205,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 10010 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  254,
 /* 10020 */   286,  256,  257,  286,  259,  286,  286,  231,  286,  264,
 /* 10030 */   265,  286,  267,  268,  286,  286,  271,  286,  273,  286,
 /* 10040 */   275,  276,  286,  278,  286,  286,  286,  286,  286,  286,
 /* 10050 */   254,  286,  256,  257,  286,  259,  165,  166,  286,  286,
 /* 10060 */   264,  265,  286,  267,  268,  286,  286,  271,  286,  273,
 /* 10070 */   286,  275,  276,  286,  278,  286,  286,  286,  187,  286,
 /* 10080 */   286,  286,  286,  286,  286,  286,  286,  286,  165,  166,
 /* 10090 */   286,  286,  286,  286,  286,  204,  205,  286,  286,  286,
 /* 10100 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 10110 */   187,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 10120 */   286,  286,  231,  286,  286,  286,  286,  204,  205,  286,
 /* 10130 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 10140 */   286,  286,  286,  286,  286,  254,  286,  256,  257,  286,
 /* 10150 */   259,  286,  286,  286,  231,  264,  265,  286,  267,  268,
 /* 10160 */   286,  286,  271,  286,  273,  286,  275,  276,  286,  278,
 /* 10170 */   286,  286,  286,  286,  286,  286,  286,  254,  286,  256,
 /* 10180 */   257,  286,  259,  286,  286,  165,  166,  264,  265,  286,
 /* 10190 */   267,  268,  286,  286,  271,  286,  273,  286,  275,  276,
 /* 10200 */   286,  278,  286,  286,  286,  286,  286,  187,  286,  286,
 /* 10210 */   286,  286,  286,  286,  286,  286,  165,  166,  286,  286,
 /* 10220 */   286,  286,  286,  286,  204,  205,  286,  286,  286,  286,
 /* 10230 */   286,  286,  286,  286,  286,  286,  286,  286,  187,  286,
 /* 10240 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 10250 */   286,  231,  286,  286,  286,  204,  205,  286,  286,  286,
 /* 10260 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 10270 */   286,  286,  286,  286,  254,  286,  256,  257,  286,  259,
 /* 10280 */   286,  286,  231,  286,  264,  265,  286,  267,  268,  286,
 /* 10290 */   286,  271,  286,  273,  286,  275,  276,  286,  278,  286,
 /* 10300 */   286,  286,  286,  286,  286,  254,  286,  256,  257,  286,
 /* 10310 */   259,  165,  166,  286,  286,  264,  265,  286,  267,  268,
 /* 10320 */   286,  286,  271,  286,  273,  286,  275,  276,  286,  278,
 /* 10330 */   286,  286,  286,  187,  286,  286,  286,  286,  286,  286,
 /* 10340 */   286,  286,  286,  165,  166,  286,  286,  286,  286,  286,
 /* 10350 */   204,  205,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 10360 */   286,  286,  286,  286,  286,  187,  286,  286,  286,  286,
 /* 10370 */   286,  286,  286,  286,  286,  286,  286,  231,  286,  286,
 /* 10380 */   286,  286,  204,  205,  286,  286,  286,  286,  286,  286,
 /* 10390 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 10400 */   254,  286,  256,  257,  286,  259,  286,  286,  286,  231,
 /* 10410 */   264,  265,  286,  267,  268,  286,  286,  271,  286,  273,
 /* 10420 */   286,  275,  276,  286,  278,  286,  286,  286,  286,  286,
 /* 10430 */   286,  286,  254,  286,  256,  257,  286,  259,  286,  286,
 /* 10440 */   165,  166,  264,  265,  286,  267,  268,  286,  286,  271,
 /* 10450 */   286,  273,  286,  275,  276,  286,  278,  286,  286,  286,
 /* 10460 */   286,  286,  187,  286,  286,  286,  286,  286,  286,  286,
 /* 10470 */   286,  165,  166,  286,  286,  286,  286,  286,  286,  204,
 /* 10480 */   205,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 10490 */   286,  286,  286,  187,  286,  286,  286,  286,  286,  286,
 /* 10500 */   286,  286,  286,  286,  286,  286,  231,  286,  286,  286,
 /* 10510 */   204,  205,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 10520 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  254,
 /* 10530 */   286,  256,  257,  286,  259,  286,  286,  231,  286,  264,
 /* 10540 */   265,  286,  267,  268,  286,  286,  271,  286,  273,  286,
 /* 10550 */   275,  276,  286,  278,  286,  286,  286,  286,  286,  286,
 /* 10560 */   254,  286,  256,  257,  286,  259,  165,  166,  286,  286,
 /* 10570 */   264,  265,  286,  267,  268,  286,  286,  271,  286,  273,
 /* 10580 */   286,  275,  276,  286,  278,  286,  286,  286,  187,  286,
 /* 10590 */   286,  286,  286,  286,  286,  286,  286,  286,  165,  166,
 /* 10600 */   286,  286,  286,  286,  286,  204,  205,  286,  286,  286,
 /* 10610 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 10620 */   187,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 10630 */   286,  286,  231,  286,  286,  286,  286,  204,  205,  286,
 /* 10640 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 10650 */   286,  286,  286,  286,  286,  254,  286,  256,  257,  286,
 /* 10660 */   259,  286,  286,  286,  231,  264,  265,  286,  267,  268,
 /* 10670 */   286,  286,  271,  286,  273,  286,  275,  276,  286,  278,
 /* 10680 */   286,  286,  286,  286,  286,  286,  286,  254,  286,  256,
 /* 10690 */   257,  286,  259,  286,  286,  165,  166,  264,  265,  286,
 /* 10700 */   267,  268,  286,  286,  271,  286,  273,  286,  275,  276,
 /* 10710 */   286,  278,  286,  286,  286,  286,  286,  187,  286,  286,
 /* 10720 */   286,  286,  286,  286,  286,  286,  165,  166,  286,  286,
 /* 10730 */   286,  286,  286,  286,  204,  205,  286,  286,  286,  286,
 /* 10740 */   286,  286,  286,  286,  286,  286,  286,  286,  187,  286,
 /* 10750 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 10760 */   286,  231,  286,  286,  286,  204,  205,  286,  286,  286,
 /* 10770 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 10780 */   286,  286,  286,  286,  254,  286,  256,  257,  286,  259,
 /* 10790 */   286,  286,  231,  286,  264,  265,  286,  267,  268,  286,
 /* 10800 */   286,  271,  286,  273,  286,  275,  276,  286,  278,  286,
 /* 10810 */   286,  286,  286,  286,  286,  254,  286,  256,  257,  286,
 /* 10820 */   259,  165,  166,  286,  286,  264,  265,  286,  267,  268,
 /* 10830 */   286,  286,  271,  286,  273,  286,  275,  276,  286,  278,
 /* 10840 */   286,  286,  286,  187,  286,  286,  286,  286,  286,  286,
 /* 10850 */   286,  286,  286,  165,  166,  286,  286,  286,  286,  286,
 /* 10860 */   204,  205,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 10870 */   286,  286,  286,  286,  286,  187,  286,  286,  286,  286,
 /* 10880 */   286,  286,  286,  286,  286,  286,  286,  231,  286,  286,
 /* 10890 */   286,  286,  204,  205,  286,  286,  286,  286,  286,  286,
 /* 10900 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 10910 */   254,  286,  256,  257,  286,  259,  286,  286,  286,  231,
 /* 10920 */   264,  265,  286,  267,  268,  286,  286,  271,  286,  273,
 /* 10930 */   286,  275,  276,  286,  278,  286,  286,  286,  286,  286,
 /* 10940 */   286,  286,  254,  286,  256,  257,  286,  259,  286,  286,
 /* 10950 */   165,  166,  264,  265,  286,  267,  268,  286,  286,  271,
 /* 10960 */   286,  273,  286,  275,  276,  286,  278,  286,  286,  286,
 /* 10970 */   286,  286,  187,  286,  286,  286,  286,  286,  286,  286,
 /* 10980 */   286,  165,  166,  286,  286,  286,  286,  286,  286,  204,
 /* 10990 */   205,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 11000 */   286,  286,  286,  187,  286,  286,  286,  286,  286,  286,
 /* 11010 */   286,  286,  286,  286,  286,  286,  231,  286,  286,  286,
 /* 11020 */   204,  205,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 11030 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  254,
 /* 11040 */   286,  256,  257,  286,  259,  286,  286,  231,  286,  264,
 /* 11050 */   265,  286,  267,  268,  286,  286,  271,  286,  273,  286,
 /* 11060 */   275,  276,  286,  278,  286,  286,  286,  286,  286,  286,
 /* 11070 */   254,  286,  256,  257,  286,  259,  165,  166,  286,  286,
 /* 11080 */   264,  265,  286,  267,  268,  286,  286,  271,  286,  273,
 /* 11090 */   286,  275,  276,  286,  278,  286,  286,  286,  187,  286,
 /* 11100 */   286,  286,  286,  286,  286,  286,  286,  286,  165,  166,
 /* 11110 */   286,  286,  286,  286,  286,  204,  205,  286,  286,  286,
 /* 11120 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 11130 */   187,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 11140 */   286,  286,  231,  286,  286,  286,  286,  204,  205,  286,
 /* 11150 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 11160 */   286,  286,  286,  286,  286,  254,  286,  256,  257,  286,
 /* 11170 */   259,  286,  286,  286,  231,  264,  265,  286,  267,  268,
 /* 11180 */   286,  286,  271,  286,  273,  286,  275,  276,  286,  278,
 /* 11190 */   286,  286,  286,  286,  286,  286,  286,  254,  286,  256,
 /* 11200 */   257,  286,  259,  286,  286,  165,  166,  264,  265,  286,
 /* 11210 */   267,  268,  286,  286,  271,  286,  273,  286,  275,  276,
 /* 11220 */   286,  278,  286,  286,  286,  286,  286,  187,  286,  286,
 /* 11230 */   286,  286,  286,  286,  286,  286,  165,  166,  286,  286,
 /* 11240 */   286,  286,  286,  286,  204,  205,  286,  286,  286,  286,
 /* 11250 */   286,  286,  286,  286,  286,  286,  286,  286,  187,  286,
 /* 11260 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 11270 */   286,  231,  286,  286,  286,  204,  205,  286,  286,  286,
 /* 11280 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 11290 */   286,  286,  286,  286,  254,  286,  256,  257,  286,  259,
 /* 11300 */   286,  286,  231,  286,  264,  265,  286,  267,  268,  286,
 /* 11310 */   286,  271,  286,  273,  286,  275,  276,  286,  278,  286,
 /* 11320 */   286,  286,  286,  286,  286,  254,  286,  256,  257,  286,
 /* 11330 */   259,  165,  166,  286,  286,  264,  265,  286,  267,  268,
 /* 11340 */   286,  286,  271,  286,  273,  286,  275,  276,  286,  278,
 /* 11350 */   286,  286,  286,  187,  286,  286,  286,  286,  286,  286,
 /* 11360 */   286,  286,  286,  165,  166,  286,  286,  286,  286,  286,
 /* 11370 */   204,  205,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 11380 */   286,  286,  286,  286,  286,  187,  286,  286,  286,  286,
 /* 11390 */   286,  286,  286,  286,  286,  286,  286,  231,  286,  286,
 /* 11400 */   286,  286,  204,  205,  286,  286,  286,  286,  286,  286,
 /* 11410 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 11420 */   254,  286,  256,  257,  286,  259,  286,  286,  286,  231,
 /* 11430 */   264,  265,  286,  267,  268,  286,  286,  271,  286,  273,
 /* 11440 */   286,  275,  276,  286,  278,  286,  286,  286,  286,  286,
 /* 11450 */   286,  286,  254,  286,  256,  257,  286,  259,  286,  286,
 /* 11460 */   165,  166,  264,  265,  286,  267,  268,  286,  286,  271,
 /* 11470 */   286,  273,  286,  275,  276,  286,  278,  286,  286,  286,
 /* 11480 */   286,  286,  187,  286,  286,  286,  286,  286,  286,  286,
 /* 11490 */   286,  165,  166,  286,  286,  286,  286,  286,  286,  204,
 /* 11500 */   205,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 11510 */   286,  286,  286,  187,  286,  286,  286,  286,  286,  286,
 /* 11520 */   286,  286,  286,  286,  286,  286,  231,  286,  286,  286,
 /* 11530 */   204,  205,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 11540 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  254,
 /* 11550 */   286,  256,  257,  286,  259,  286,  286,  231,  286,  264,
 /* 11560 */   265,  286,  267,  268,  286,  286,  271,  286,  273,  286,
 /* 11570 */   275,  276,  286,  278,  286,  286,  286,  286,  286,  286,
 /* 11580 */   254,  286,  256,  257,  286,  259,  165,  166,  286,  286,
 /* 11590 */   264,  265,  286,  267,  268,  286,  286,  271,  286,  273,
 /* 11600 */   286,  275,  276,  286,  278,  286,  286,  286,  187,  286,
 /* 11610 */   286,  286,  286,  286,  286,  286,  286,  286,  165,  166,
 /* 11620 */   286,  286,  286,  286,  286,  204,  205,  286,  286,  286,
 /* 11630 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 11640 */   187,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 11650 */   286,  286,  231,  286,  286,  286,  286,  204,  205,  286,
 /* 11660 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 11670 */   286,  286,  286,  286,  286,  254,  286,  256,  257,  286,
 /* 11680 */   259,  286,  286,  286,  231,  264,  265,  286,  267,  268,
 /* 11690 */   286,  286,  271,  286,  273,  286,  275,  276,  286,  278,
 /* 11700 */   286,  286,  286,  286,  286,  286,  286,  254,  286,  256,
 /* 11710 */   257,  286,  259,  286,  286,  165,  166,  264,  265,  286,
 /* 11720 */   267,  268,  286,  286,  271,  286,  273,  286,  275,  276,
 /* 11730 */   286,  278,  286,  286,  286,  286,  286,  187,  286,  286,
 /* 11740 */   286,  286,  286,  286,  286,  286,  165,  166,  286,  286,
 /* 11750 */   286,  286,  286,  286,  204,  205,  286,  286,  286,  286,
 /* 11760 */   286,  286,  286,  286,  286,  286,  286,  286,  187,  286,
 /* 11770 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 11780 */   286,  231,  286,  286,  286,  204,  205,  286,  286,  286,
 /* 11790 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 11800 */   286,  286,  286,  286,  254,  286,  256,  257,  286,  259,
 /* 11810 */   286,  286,  231,  286,  264,  265,  286,  267,  268,  286,
 /* 11820 */   286,  271,  286,  273,  286,  275,  276,  286,  278,  286,
 /* 11830 */   286,  286,  286,  286,  286,  254,  286,  256,  257,  286,
 /* 11840 */   259,  165,  166,  286,  286,  264,  265,  286,  267,  268,
 /* 11850 */   286,  286,  271,  286,  273,  286,  275,  276,  286,  278,
 /* 11860 */   286,  286,  286,  187,  286,  286,  286,  286,  286,  286,
 /* 11870 */   286,  286,  286,  165,  166,  286,  286,  286,  286,  286,
 /* 11880 */   204,  205,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 11890 */   286,  286,  286,  286,  286,  187,  286,  286,  286,  286,
 /* 11900 */   286,  286,  286,  286,  286,  286,  286,  231,  286,  286,
 /* 11910 */   286,  286,  204,  205,  286,  286,  286,  286,  286,  286,
 /* 11920 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 11930 */   254,  286,  256,  257,  286,  259,  286,  286,  286,  231,
 /* 11940 */   264,  265,  286,  267,  268,  286,  286,  271,  286,  273,
 /* 11950 */   286,  275,  276,  286,  278,  286,  286,  286,  286,  286,
 /* 11960 */   286,  286,  254,  286,  256,  257,  286,  259,  286,  286,
 /* 11970 */   165,  166,  264,  265,  286,  267,  268,  286,  286,  271,
 /* 11980 */   286,  273,  286,  275,  276,  286,  278,  286,  286,  286,
 /* 11990 */   286,  286,  187,  286,  286,  286,  286,  286,  286,  286,
 /* 12000 */   286,  165,  166,  286,  286,  286,  286,  286,  286,  204,
 /* 12010 */   205,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 12020 */   286,  286,  286,  187,  286,  286,  286,  286,  286,  286,
 /* 12030 */   286,  286,  286,  286,  286,  286,  231,  286,  286,  286,
 /* 12040 */   204,  205,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 12050 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  254,
 /* 12060 */   286,  256,  257,  286,  259,  286,  286,  231,  286,  264,
 /* 12070 */   265,  286,  267,  268,  286,  286,  271,  286,  273,  286,
 /* 12080 */   275,  276,  286,  278,  286,  286,  286,  286,  286,  286,
 /* 12090 */   254,  286,  256,  257,  286,  259,  165,  166,  286,  286,
 /* 12100 */   264,  265,  286,  267,  268,  286,  286,  271,  286,  273,
 /* 12110 */   286,  275,  276,  286,  278,  286,  286,  286,  187,  286,
 /* 12120 */   286,  286,  286,  286,  286,  286,  286,  286,  165,  166,
 /* 12130 */   286,  286,  286,  286,  286,  204,  205,  286,  286,  286,
 /* 12140 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 12150 */   187,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 12160 */   286,  286,  231,  286,  286,  286,  286,  204,  205,  286,
 /* 12170 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 12180 */   286,  286,  286,  286,  286,  254,  286,  256,  257,  286,
 /* 12190 */   259,  286,  286,  286,  231,  264,  265,  286,  267,  268,
 /* 12200 */   286,  286,  271,  286,  273,  286,  275,  276,  286,  278,
 /* 12210 */   286,  286,  286,  286,  286,  286,  286,  254,  286,  256,
 /* 12220 */   257,  286,  259,  286,  286,  165,  166,  264,  265,  286,
 /* 12230 */   267,  268,  286,  286,  271,  286,  273,  286,  275,  276,
 /* 12240 */   286,  278,  286,  286,  286,  286,  286,  187,  286,  286,
 /* 12250 */   286,  286,  286,  286,  286,  286,  165,  166,  286,  286,
 /* 12260 */   286,  286,  286,  286,  204,  205,  286,  286,  286,  286,
 /* 12270 */   286,  286,  286,  286,  286,  286,  286,  286,  187,  286,
 /* 12280 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 12290 */   286,  231,  286,  286,  286,  204,  205,  286,  286,  286,
 /* 12300 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 12310 */   286,  286,  286,  286,  254,  286,  256,  257,  286,  259,
 /* 12320 */   286,  286,  231,  286,  264,  265,  286,  267,  268,  286,
 /* 12330 */   286,  271,  286,  273,  286,  275,  276,  286,  278,  286,
 /* 12340 */   286,  286,  286,  286,  286,  254,  286,  256,  257,  286,
 /* 12350 */   259,  165,  166,  286,  286,  264,  265,  286,  267,  268,
 /* 12360 */   286,  286,  271,  286,  273,  286,  275,  276,  286,  278,
 /* 12370 */   286,  286,  286,  187,  286,  286,  286,  286,  286,  286,
 /* 12380 */   286,  286,  286,  165,  166,  286,  286,  286,  286,  286,
 /* 12390 */   204,  205,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 12400 */   286,  286,  286,  286,  286,  187,  286,  286,  286,  286,
 /* 12410 */   286,  286,  286,  286,  286,  286,  286,  231,  286,  286,
 /* 12420 */   286,  286,  204,  205,  286,  286,  286,  286,  286,  286,
 /* 12430 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 12440 */   254,  286,  256,  257,  286,  259,  286,  286,  286,  231,
 /* 12450 */   264,  265,  286,  267,  268,  286,  286,  271,  286,  273,
 /* 12460 */   286,  275,  276,  286,  278,  286,  286,  286,  286,  286,
 /* 12470 */   286,  286,  254,  286,  256,  257,  286,  259,  286,  286,
 /* 12480 */   165,  166,  264,  265,  286,  267,  268,  286,  286,  271,
 /* 12490 */   286,  273,  286,  275,  276,  286,  278,  286,  286,  286,
 /* 12500 */   286,  286,  187,  286,  286,  286,  286,  286,  286,  286,
 /* 12510 */   286,  165,  166,  286,  286,  286,  286,  286,  286,  204,
 /* 12520 */   205,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 12530 */   286,  286,  286,  187,  286,  286,  286,  286,  286,  286,
 /* 12540 */   286,  286,  286,  286,  286,  286,  231,  286,  286,  286,
 /* 12550 */   204,  205,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 12560 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  254,
 /* 12570 */   286,  256,  257,  286,  259,  286,  286,  231,  286,  264,
 /* 12580 */   265,  286,  267,  268,  286,  286,  271,  286,  273,  286,
 /* 12590 */   275,  276,  286,  278,  286,  286,  286,  286,  286,  286,
 /* 12600 */   254,  286,  256,  257,  286,  259,  165,  166,  286,  286,
 /* 12610 */   264,  265,  286,  267,  268,  286,  286,  271,  286,  273,
 /* 12620 */   286,  275,  276,  286,  278,  286,  286,  286,  187,  286,
 /* 12630 */   286,  286,  286,  286,  286,  286,  286,  286,  165,  166,
 /* 12640 */   286,  286,  286,  286,  286,  204,  205,  286,  286,  286,
 /* 12650 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 12660 */   187,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 12670 */   286,  286,  231,  286,  286,  286,  286,  204,  205,  286,
 /* 12680 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 12690 */   286,  286,  286,  286,  286,  254,  286,  256,  257,  286,
 /* 12700 */   259,  286,  286,  286,  231,  264,  265,  286,  267,  268,
 /* 12710 */   286,  286,  271,  286,  273,  286,  275,  276,  286,  278,
 /* 12720 */   286,  286,  286,  286,  286,  286,  286,  254,  286,  256,
 /* 12730 */   257,  286,  259,  286,  286,  165,  166,  264,  265,  286,
 /* 12740 */   267,  268,  286,  286,  271,  286,  273,  286,  275,  276,
 /* 12750 */   286,  278,  286,  286,  286,  286,  286,  187,  286,  286,
 /* 12760 */   286,  286,  286,  286,  286,  286,  165,  166,  286,  286,
 /* 12770 */   286,  286,  286,  286,  204,  205,  286,  286,  286,  286,
 /* 12780 */   286,  286,  286,  286,  286,  286,  286,  286,  187,  286,
 /* 12790 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 12800 */   286,  231,  286,  286,  286,  204,  205,  286,  286,  286,
 /* 12810 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 12820 */   286,  286,  286,  286,  254,  286,  256,  257,  286,  259,
 /* 12830 */   286,  286,  231,  286,  264,  265,  286,  267,  268,  286,
 /* 12840 */   286,  271,  286,  273,  286,  275,  276,  286,  278,  286,
 /* 12850 */   286,  286,  286,  286,  286,  254,  286,  256,  257,  286,
 /* 12860 */   259,  165,  166,  286,  286,  264,  265,  286,  267,  268,
 /* 12870 */   286,  286,  271,  286,  273,  286,  275,  276,  286,  278,
 /* 12880 */   286,  286,  286,  187,  286,  286,  286,  286,  286,  286,
 /* 12890 */   286,  286,  286,  165,  166,  286,  286,  286,  286,  286,
 /* 12900 */   204,  205,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 12910 */   286,  286,  286,  286,  286,  187,  286,  286,  286,  286,
 /* 12920 */   286,  286,  286,  286,  286,  286,  286,  231,  286,  286,
 /* 12930 */   286,  286,  204,  205,  286,  286,  286,  286,  286,  286,
 /* 12940 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 12950 */   254,  286,  256,  257,  286,  259,  286,  286,  286,  231,
 /* 12960 */   264,  265,  286,  267,  268,  286,  286,  271,  286,  273,
 /* 12970 */   286,  275,  276,  286,  278,  286,  286,  286,  286,  286,
 /* 12980 */   286,  286,  254,  286,  256,  257,  286,  259,  286,  286,
 /* 12990 */   165,  166,  264,  265,  286,  267,  268,  286,  286,  271,
 /* 13000 */   286,  273,  286,  275,  276,  286,  278,  286,  286,  286,
 /* 13010 */   286,  286,  187,  286,  286,  286,  286,  286,  286,  286,
 /* 13020 */   286,  165,  166,  286,  286,  286,  286,  286,  286,  204,
 /* 13030 */   205,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 13040 */   286,  286,  286,  187,  286,  286,  286,  286,  286,  286,
 /* 13050 */   286,  286,  286,  286,  286,  286,  231,  286,  286,  286,
 /* 13060 */   204,  205,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 13070 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  254,
 /* 13080 */   286,  256,  257,  286,  259,  286,  286,  231,  286,  264,
 /* 13090 */   265,  286,  267,  268,  286,  286,  271,  286,  273,  286,
 /* 13100 */   275,  276,  286,  278,  286,  286,  286,  286,  286,  286,
 /* 13110 */   254,  286,  256,  257,  286,  259,  165,  166,  286,  286,
 /* 13120 */   264,  265,  286,  267,  268,  286,  286,  271,  286,  273,
 /* 13130 */   286,  275,  276,  286,  278,  286,  286,  286,  187,  286,
 /* 13140 */   286,  286,  286,  286,  286,  286,  286,  286,  165,  166,
 /* 13150 */   286,  286,  286,  286,  286,  204,  205,  286,  286,  286,
 /* 13160 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 13170 */   187,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 13180 */   286,  286,  231,  286,  286,  286,  286,  204,  205,  286,
 /* 13190 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 13200 */   286,  286,  286,  286,  286,  254,  286,  256,  257,  286,
 /* 13210 */   259,  286,  286,  286,  231,  264,  265,  286,  267,  268,
 /* 13220 */   286,  286,  271,  286,  273,  286,  275,  276,  286,  278,
 /* 13230 */   286,  286,  286,  286,  286,  286,  286,  254,  286,  256,
 /* 13240 */   257,  286,  259,  286,  286,  165,  166,  264,  265,  286,
 /* 13250 */   267,  268,  286,  286,  271,  286,  273,  286,  275,  276,
 /* 13260 */   286,  278,  286,  286,  286,  286,  286,  187,  286,  286,
 /* 13270 */   286,  286,  286,  286,  286,  286,  165,  166,  286,  286,
 /* 13280 */   286,  286,  286,  286,  204,  205,  286,  286,  286,  286,
 /* 13290 */   286,  286,  286,  286,  286,  286,  286,  286,  187,  286,
 /* 13300 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 13310 */   286,  231,  286,  286,  286,  204,  205,  286,  286,  286,
 /* 13320 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 13330 */   286,  286,  286,  286,  254,  286,  256,  257,  286,  259,
 /* 13340 */   286,  286,  231,  286,  264,  265,  286,  267,  268,  286,
 /* 13350 */   286,  271,  286,  273,  286,  275,  276,  286,  278,  286,
 /* 13360 */   286,  286,  286,  286,  286,  254,  286,  256,  257,  286,
 /* 13370 */   259,  165,  166,  286,  286,  264,  265,  286,  267,  268,
 /* 13380 */   286,  286,  271,  286,  273,  286,  275,  276,  286,  278,
 /* 13390 */   286,  286,  286,  187,  286,  286,  286,  286,  286,  286,
 /* 13400 */   286,  286,  286,  165,  166,  286,  286,  286,  286,  286,
 /* 13410 */   204,  205,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 13420 */   286,  286,  286,  286,  286,  187,  286,  286,  286,  286,
 /* 13430 */   286,  286,  286,  286,  286,  286,  286,  231,  286,  286,
 /* 13440 */   286,  286,  204,  205,  286,  286,  286,  286,  286,  286,
 /* 13450 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 13460 */   254,  286,  256,  257,  286,  259,  286,  286,  286,  231,
 /* 13470 */   264,  265,  286,  267,  268,  286,  286,  271,  286,  273,
 /* 13480 */   286,  275,  276,  286,  278,  286,  286,  286,  286,  286,
 /* 13490 */   286,  286,  254,  286,  256,  257,  286,  259,  286,  286,
 /* 13500 */   165,  166,  264,  265,  286,  267,  268,  286,  286,  271,
 /* 13510 */   286,  273,  286,  275,  276,  286,  278,  286,  286,  286,
 /* 13520 */   286,  286,  187,  286,  286,  286,  286,  286,  286,  286,
 /* 13530 */   286,  165,  166,  286,  286,  286,  286,  286,  286,  204,
 /* 13540 */   205,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 13550 */   286,  286,  286,  187,  286,  286,  286,  286,  286,  286,
 /* 13560 */   286,  286,  286,  286,  286,  286,  231,  286,  286,  286,
 /* 13570 */   204,  205,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 13580 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  254,
 /* 13590 */   286,  256,  257,  286,  259,  286,  286,  231,  286,  264,
 /* 13600 */   265,  286,  267,  268,  286,  286,  271,  286,  273,  286,
 /* 13610 */   275,  276,  286,  278,  286,  286,  286,  286,  286,  286,
 /* 13620 */   254,  286,  256,  257,  286,  259,  165,  166,  286,  286,
 /* 13630 */   264,  265,  286,  267,  268,  286,  286,  271,  286,  273,
 /* 13640 */   286,  275,  276,  286,  278,  286,  286,  286,  187,  286,
 /* 13650 */   286,  286,  286,  286,  286,  286,  286,  286,  165,  166,
 /* 13660 */   286,  286,  286,  286,  286,  204,  205,  286,  286,  286,
 /* 13670 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 13680 */   187,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 13690 */   286,  286,  231,  286,  286,  286,  286,  204,  205,  286,
 /* 13700 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 13710 */   286,  286,  286,  286,  286,  254,  286,  256,  257,  286,
 /* 13720 */   259,  286,  286,  286,  231,  264,  265,  286,  267,  268,
 /* 13730 */   286,  286,  271,  286,  273,  286,  275,  276,  286,  278,
 /* 13740 */   286,  286,  286,  286,  286,  286,  286,  254,  286,  256,
 /* 13750 */   257,  286,  259,  286,  286,  165,  166,  264,  265,  286,
 /* 13760 */   267,  268,  286,  286,  271,  286,  273,  286,  275,  276,
 /* 13770 */   286,  278,  286,  286,  286,  286,  286,  187,  286,  286,
 /* 13780 */   286,  286,  286,  286,  286,  286,  165,  166,  286,  286,
 /* 13790 */   286,  286,  286,  286,  204,  205,  286,  286,  286,  286,
 /* 13800 */   286,  286,  286,  286,  286,  286,  286,  286,  187,  286,
 /* 13810 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 13820 */   286,  231,  286,  286,  286,  204,  205,  286,  286,  286,
 /* 13830 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 13840 */   286,  286,  286,  286,  254,  286,  256,  257,  286,  259,
 /* 13850 */   286,  286,  231,  286,  264,  265,  286,  267,  268,  286,
 /* 13860 */   286,  271,  286,  273,  286,  275,  276,  286,  278,  286,
 /* 13870 */   286,  286,  286,  286,  286,  254,  286,  256,  257,  286,
 /* 13880 */   259,  165,  166,  286,  286,  264,  265,  286,  267,  268,
 /* 13890 */   286,  286,  271,  286,  273,  286,  275,  276,  286,  278,
 /* 13900 */   286,  286,  286,  187,  286,  286,  286,  286,  286,  286,
 /* 13910 */   286,  286,  286,  165,  166,  286,  286,  286,  286,  286,
 /* 13920 */   204,  205,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 13930 */   286,  286,  286,  286,  286,  187,  286,  286,  286,  286,
 /* 13940 */   286,  286,  286,  286,  286,  286,  286,  231,  286,  286,
 /* 13950 */   286,  286,  204,  205,  286,  286,  286,  286,  286,  286,
 /* 13960 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 13970 */   254,  286,  256,  257,  286,  259,  286,  286,  286,  231,
 /* 13980 */   264,  265,  286,  267,  268,  286,  286,  271,  286,  273,
 /* 13990 */   286,  275,  276,  286,  278,  286,  286,  286,  286,  286,
 /* 14000 */   286,  286,  254,  286,  256,  257,  286,  259,  286,  286,
 /* 14010 */   165,  166,  264,  265,  286,  267,  268,  286,  286,  271,
 /* 14020 */   286,  273,  286,  275,  276,  286,  278,  286,  286,  286,
 /* 14030 */   286,  286,  187,  286,  286,  286,  286,  286,  286,  286,
 /* 14040 */   286,  165,  166,  286,  286,  286,  286,  286,  286,  204,
 /* 14050 */   205,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 14060 */   286,  286,  286,  187,  286,  286,  286,  286,  286,  286,
 /* 14070 */   286,  286,  286,  286,  286,  286,  231,  286,  286,  286,
 /* 14080 */   204,  205,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 14090 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  254,
 /* 14100 */   286,  256,  257,  286,  259,  286,  286,  231,  286,  264,
 /* 14110 */   265,  286,  267,  268,  286,  286,  271,  286,  273,  286,
 /* 14120 */   275,  276,  286,  278,  286,  286,  286,  286,  286,  286,
 /* 14130 */   254,  286,  256,  257,  286,  259,  165,  166,  286,  286,
 /* 14140 */   264,  265,  286,  267,  268,  286,  286,  271,  286,  273,
 /* 14150 */   286,  275,  276,  286,  278,  286,  286,  286,  187,  286,
 /* 14160 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 14170 */   286,  286,  286,  286,  286,  204,  205,  286,  286,  286,
 /* 14180 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 14190 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 14200 */   286,  286,  231,  286,  286,  286,  286,  286,  286,  286,
 /* 14210 */   286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
 /* 14220 */   286,  286,  286,  286,  286,  254,  286,  256,  257,  286,
 /* 14230 */   259,  286,  286,  286,  286,  264,  265,  286,  267,  268,
 /* 14240 */   286,  286,  271,  286,  273,  286,  275,  276,  286,  278,
);
    const YY_SHIFT_USE_DFLT = -128;
    const YY_SHIFT_MAX = 573;
    static public $yy_shift_ofst = array(
 /*     0 */  -128,   -1,  153,  307, 2450, 2155, 2001, 1847, 1693, 1539,
 /*    10 */  1385, 1231, 1077,  923,  461,  615,  769, 2604, 2604, 2604,
 /*    20 */  2604, 3916, 3300, 3762, 3608, 3454, 4070, 4070, 4070, 4532,
 /*    30 */  4532, 4224, 5304, 5304, 5304, 5304, 5304, 4532, 4378, 5304,
 /*    40 */  5304, 5304, 5304, 5304, 5304, 5304, 5304, 5304, 5304, 4686,
 /*    50 */  4840, 5148, 4994, 5304, 5304, 5304, 5304, 5304, 5304, 5304,
 /*    60 */  5304, 5304, 5304, 5304, 5304, 5304, 5304, 5304, 5304, 5304,
 /*    70 */  5304, 5304, 5304, 5304, 5304, 5304, 5304, 5304, 5304, 5304,
 /*    80 */  5304, 5304, 5304, 5304, 5304, 5304, 5304, 5304, 5304, 5304,
 /*    90 */  5304, 5304, 5304, 5304, 5304, 5304, 5304, 5304, 5304, 5304,
 /*   100 */  5304, 5304, 5304, 5304, 5304, 5304, 5304, 5304, 5304, 5304,
 /*   110 */  5304, 5304, 5304, 5304, 5304, 5304, 5304, 5304, 5304, 5304,
 /*   120 */  5304, 5304, 5304, 5304, 5304, 5304, 5304, 5304, 5304, 5304,
 /*   130 */  5304, 5304, 5304, 5304, 5304, 5304, 5304, 5304, 5304, 5304,
 /*   140 */  5304, 6913, 6913, 6913, 5689, 5460, 5460, 6913, 5689, 5689,
 /*   150 */  5689, 5689, 5689, 5689, 5689, 5689, 2897, 2758, 4176, 1445,
 /*   160 */  1445, 1445, 1445, 4421,  -64, 2309, 2309, 3036, 3109, 3241,
 /*   170 */  4546, 4784,  -22,  523,  523,  554, 3036,  523, 3036, 3036,
 /*   180 */  3036,  -22, 1845,   99,   99,   99,   99,   98,  406,  574,
 /*   190 */  1170, 1170, 3168,  510, 1383,  -62,  -62,   99,   99,   99,
 /*   200 */   317,  406, 1170, 1170, 1241, 1170, 1209, 1170, 1209, 1241,
 /*   210 */  1186, 1170, 5432, 6869, 6869, 6869,  428, -104, 2211,  319,
 /*   220 */  1691,  238,   65,  400,  113,  265,  238,  795,  406,  830,
 /*   230 */   406,  858,  317,  835,  585,  779, 1407, 1428, 1213, 1428,
 /*   240 */  1395, 1319, 1203, 1386, 1209, 1351, 1449, 1343, 1470, 1170,
 /*   250 */  1428, 1209, 1203, 1456, 1319, 1428, 1443, 1321, 1319, 1241,
 /*   260 */  1186, 1209, 1321, 1170, 1319, 1209, 1213, 1314, -128, -128,
 /*   270 */  -128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
 /*   280 */  -128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
 /*   290 */  -128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
 /*   300 */  -128, -128, 6351, 6756, 6530, 5670, 6643, 6577, 6690, 6803,
 /*   310 */  6464, 6012, 5623, 5899, 2886, 6304, 5946, 5736, 6125, 6238,
 /*   320 */  6059, 6417, 6172, 3025, 6869, 6869, 6869, 6869, 6869, 6869,
 /*   330 */  6869, 6869, 6869, 6869, 6869, 6869, 6869, 6869, 6915, 2438,
 /*   340 */  2295,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,
 /*   350 */   -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  138,
 /*   360 */   138,  138,  290,  444,  598,  749,  902,  902,  902, 5486,
 /*   370 */   902,  902,  902, 1359, 1359, 1359, 1359, 1045, 1045,  907,
 /*   380 */  1197, 1956, 1365, 1365, 1365, 1648, 1802, 1802, 1570, 1802,
 /*   390 */    84,  413,  -74,  401,  274,  -21,  549,   81, -106,  775,
 /*   400 */   709,  828,  721,  486,  875,  782,  860,  750,  726,  395,
 /*   410 */   597,  310,  111,   57,  533,  242,  379,  231,  394,   23,
 /*   420 */   236,  156,  128,   23,  424,  414,  464,  548,  223,  621,
 /*   430 */   686,  227,   23,   23,  519,  -48,  706,  590,  744,  277,
 /*   440 */  1021,  988, 1014, 1011, 1015, 1048, 1212, 1116,  924,  929,
 /*   450 */  1018, 1028, 1030, 1162, 1035, 1036, 1049, 1024,  984,  950,
 /*   460 */   989,  931, 1067,  939,  985,  947,  948,  932,  962,  954,
 /*   470 */   963,  966,  964,  972,  983, 1029,  993, 1147, 1106, 1105,
 /*   480 */  1108, 1109, 1157, 1117, 1119, 1102, 1141, 1251, 1144, 1159,
 /*   490 */  1146, 1270, 1162, 1219, 1084, 1097, 1053, 1054, 1056,  557,
 /*   500 */  1058, 1052, 1078, 1082, 1162, 1088,  736, 1093, 1223, 1041,
 /*   510 */    12,  900,   12,  695,  733,  663,  635,  701,  579,  397,
 /*   520 */   240,   12,  557,  362,  245,  134,  169,   56,  118,   12,
 /*   530 */    12,   12,   61,    6,   12,  -36,  -93,  714,  736,   12,
 /*   540 */  1027,  901, 1016,   12,   12,  876,  882,  881,  788, 1000,
 /*   550 */   868,  118,  861,  362,  857,  833,  701,  837,  820,  883,
 /*   560 */   801,  118,  898,  768, 1006,  886, -127,  831, 1125, 1145,
 /*   570 */  1247, 1043,   10,  -33,
);
    const YY_REDUCE_USE_DFLT = -188;
    const YY_REDUCE_MAX = 301;
    static public $yy_reduce_ofst = array(
 /*     0 */   722, 5627, 5627, 5627, 5351, 5351, 5351, 5351, 5351, 5351,
 /*    10 */  5351, 5351, 5351, 5351, 5351, 5351, 5351, 5351, 5351, 5351,
 /*    20 */  5351, 7061, 6804, 6833, 6947, 7090, 7204, 7252, 7327, 5124,
 /*    30 */  2517, 4046, 7596, 4508, 7356, 7470, 7513, 7851, 7756, 7725,
 /*    40 */  7628, 4662, 8021, 6918, 4970, 4816, 7980, 7883, 8106, 9636,
 /*    50 */  9765, 9891, 9923, 10020, 9668, 10178, 10401, 10433, 10561, 10051,
 /*    60 */  9541, 8871, 9510, 8235, 8266, 8361, 8393, 8490, 8521, 8616,
 /*    70 */  8648, 8138, 8903, 9031, 9126, 9158, 9286, 9413, 10688, 9381,
 /*    80 */  9796, 10146, 10275, 10306, 10530, 8745, 8776, 9000, 10785, 13971,
 /*    90 */  13748, 13716, 13590, 11963, 11931, 11805, 11676, 11550, 10816, 11295,
 /*   100 */  11166, 11040, 10911, 11453, 12951, 13461, 13335, 13206, 13080, 12856,
 /*   110 */  12825, 12696, 12570, 12441, 9255, 10656, 12346, 12473, 12601, 12728,
 /*   120 */  12315, 12983, 13111, 13238, 13366, 13493, 12186, 12091, 10943, 11071,
 /*   130 */  11198, 11326, 11421, 11581, 11708, 11836, 13621, 12060, 12218, 13876,
 /*   140 */  13845, 3367, 3521, 3675, 4196, 6097, 4284,  990,  836, 1760,
 /*   150 */  1452, 1914, 3829, 1298, 2363, 1606, 4175, 4464, 3166, 2397,
 /*   160 */   594, 2580, 1210,  -25,  177,  645,   -2,  416, 1312, 1312,
 /*   170 */  1312, 1312,  286,  940, 1094,  941,  460, 1091,   62,  262,
 /*   180 */   411,  638, -117,  561,  440,  493,  283,  499,  268,  133,
 /*   190 */   219,  221,  454,   25,  495, -187,  425,  610,  644,  646,
 /*   200 */   576,  616,  123,  683,   89,  794,  633,  843,  215,  812,
 /*   210 */   764,  796, 1087, 1099, 1101, 1107, 1074, 1040, 1040, 1019,
 /*   220 */  1040, 1019, 1110, 1264, 1252, 1323, 1019, 1318, 1336, 1350,
 /*   230 */  1344, 1377, 1320, 1387, 1401, 1299, 1229, 1268, 1266, 1291,
 /*   240 */  1325, 1400, 1259, 1282, 1269, 1274, 1244, 1258, 1198, 1305,
 /*   250 */  1250, 1255, 1311, 1331, 1379, 1378, 1362, 1338, 1360, 1374,
 /*   260 */  1307, 1326, 1168, 1201, 1136, 1115, 1124, 1120, 1142, 1163,
 /*   270 */  1103, 1126, 1143, 1189, 1222, 1245, 1218, 1235, 1217, 1240,
 /*   280 */  1200, 1237, 1236, 1216, 1202, 1184, 1177, 1230, 1228, 1214,
 /*   290 */  1211, 1182, 1176, 1421, 1246, 1402, 1396, 1433, 1427, 1426,
 /*   300 */  1409, 1447,
);
    static public $yyExpectedTokens = array(
        /* 0 */ array(),
        /* 1 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 74, 75, 80, 81, 82, 83, 84, 86, 88, 90, 93, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 2 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 74, 75, 80, 81, 82, 83, 84, 86, 88, 90, 93, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 3 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 74, 75, 80, 81, 82, 83, 84, 86, 88, 90, 93, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 4 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 74, 75, 80, 81, 82, 83, 84, 86, 88, 90, 93, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 5 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 88, 90, 93, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 6 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 74, 75, 80, 81, 82, 83, 84, 86, 87, 88, 90, 93, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 7 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 74, 75, 80, 81, 82, 83, 84, 86, 88, 89, 90, 93, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 8 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 74, 75, 80, 81, 82, 83, 84, 86, 88, 90, 91, 93, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 9 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 74, 75, 80, 81, 82, 83, 84, 86, 88, 90, 93, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 10 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 72, 73, 74, 75, 80, 81, 82, 83, 84, 86, 88, 90, 93, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 11 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 74, 75, 80, 81, 82, 83, 84, 86, 88, 90, 93, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 12 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 74, 75, 80, 81, 82, 83, 84, 86, 88, 90, 93, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 13 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 74, 75, 80, 81, 82, 83, 84, 86, 88, 90, 93, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 14 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 74, 75, 80, 81, 82, 83, 84, 86, 88, 90, 93, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 15 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 74, 75, 80, 81, 82, 83, 84, 86, 88, 90, 93, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 16 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 74, 75, 80, 81, 82, 83, 84, 86, 88, 90, 93, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 17 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 74, 75, 80, 81, 82, 83, 84, 86, 88, 90, 93, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 18 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 74, 75, 80, 81, 82, 83, 84, 86, 88, 90, 93, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 19 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 74, 75, 80, 81, 82, 83, 84, 86, 88, 90, 93, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 20 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 74, 75, 80, 81, 82, 83, 84, 86, 88, 90, 93, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 21 */ array(1, 2, 3, 4, 5, 10, 11, 13, 28, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 81, 82, 83, 84, 86, 88, 90, 93, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 139, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 22 */ array(1, 2, 3, 4, 5, 10, 11, 13, 28, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 81, 82, 83, 84, 86, 88, 90, 93, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 139, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 23 */ array(1, 2, 3, 4, 5, 10, 11, 13, 28, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 81, 82, 83, 84, 86, 88, 90, 93, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 139, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 24 */ array(1, 2, 3, 4, 5, 10, 11, 13, 28, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 81, 82, 83, 84, 86, 88, 90, 93, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 139, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 25 */ array(1, 2, 3, 4, 5, 10, 11, 13, 28, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 81, 82, 83, 84, 86, 88, 90, 93, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 139, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 26 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 81, 82, 83, 84, 86, 88, 90, 93, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 139, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 27 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 81, 82, 83, 84, 86, 88, 90, 93, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 139, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 28 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 81, 82, 83, 84, 86, 88, 90, 93, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 139, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 29 */ array(1, 2, 3, 4, 5, 10, 11, 13, 34, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 30 */ array(1, 2, 3, 4, 5, 10, 11, 13, 34, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 31 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 140, 141, 143, 146, 147, 148, 149, 151, 153, ),
        /* 32 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 33 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 34 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 35 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 36 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 37 */ array(1, 2, 3, 4, 5, 10, 11, 13, 34, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 38 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 141, 143, 146, 147, 148, 149, 151, 153, ),
        /* 39 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 40 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 41 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 42 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 43 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 44 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 45 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 46 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 47 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 48 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 49 */ array(1, 2, 3, 4, 5, 10, 11, 13, 28, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 50 */ array(1, 2, 3, 4, 5, 10, 11, 13, 34, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 51 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, 155, ),
        /* 52 */ array(1, 2, 3, 4, 5, 10, 11, 13, 34, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 53 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 54 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 55 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 56 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 57 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 58 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 59 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 60 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 61 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 62 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 63 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 64 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 65 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 66 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 67 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 68 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 69 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 70 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 71 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 72 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 73 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 74 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 75 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 76 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 77 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 78 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 79 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 80 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 81 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 82 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 83 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 84 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 85 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 86 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 87 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 88 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 89 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 90 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 91 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 92 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 93 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 94 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 95 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 96 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 97 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 98 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 99 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 100 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 101 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 102 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 103 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 104 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 105 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 106 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 107 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 108 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 109 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 110 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 111 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 112 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 113 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 114 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 115 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 116 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 117 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 118 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 119 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 120 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 121 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 122 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 123 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 124 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 125 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 126 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 127 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 128 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 129 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 130 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 131 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 132 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 133 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 134 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 135 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 136 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 137 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 138 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 139 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 140 */ array(1, 2, 3, 4, 5, 10, 11, 13, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 80, 102, 103, 106, 109, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 140, 143, 146, 147, 148, 149, 151, 153, ),
        /* 141 */ array(66, 73, 109, 115, 119, 132, 133, 134, 140, 146, 153, ),
        /* 142 */ array(66, 73, 109, 115, 119, 132, 133, 134, 140, 146, 153, ),
        /* 143 */ array(66, 73, 109, 115, 119, 132, 133, 134, 140, 146, 153, ),
        /* 144 */ array(66, 73, 115, 119, 132, 133, 134, 140, 146, 153, ),
        /* 145 */ array(34, 66, 73, 109, 115, 119, 132, 133, 134, 140, 146, 153, ),
        /* 146 */ array(34, 66, 73, 109, 115, 119, 132, 133, 134, 140, 146, 153, ),
        /* 147 */ array(66, 73, 109, 115, 119, 132, 133, 134, 140, 146, 153, ),
        /* 148 */ array(66, 73, 115, 119, 132, 133, 134, 140, 146, 153, ),
        /* 149 */ array(66, 73, 115, 119, 132, 133, 134, 140, 146, 153, ),
        /* 150 */ array(66, 73, 115, 119, 132, 133, 134, 140, 146, 153, ),
        /* 151 */ array(66, 73, 115, 119, 132, 133, 134, 140, 146, 153, ),
        /* 152 */ array(66, 73, 115, 119, 132, 133, 134, 140, 146, 153, ),
        /* 153 */ array(66, 73, 115, 119, 132, 133, 134, 140, 146, 153, ),
        /* 154 */ array(66, 73, 115, 119, 132, 133, 134, 140, 146, 153, ),
        /* 155 */ array(66, 73, 115, 119, 132, 133, 134, 140, 146, 153, ),
        /* 156 */ array(1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 53, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, ),
        /* 157 */ array(1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 53, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, ),
        /* 158 */ array(73, 119, 122, 132, 133, 140, 153, ),
        /* 159 */ array(115, 116, 119, 132, 133, 135, ),
        /* 160 */ array(115, 116, 119, 132, 133, 135, ),
        /* 161 */ array(115, 116, 119, 132, 133, 135, ),
        /* 162 */ array(115, 116, 119, 132, 133, 135, ),
        /* 163 */ array(73, 119, 132, 133, 140, 153, ),
        /* 164 */ array(106, 107, 132, 133, ),
        /* 165 */ array(1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 53, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 137, 140, 153, ),
        /* 166 */ array(1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 53, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 137, 140, 153, ),
        /* 167 */ array(1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 53, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, ),
        /* 168 */ array(73, 74, 75, 76, 77, 78, 97, 100, 138, ),
        /* 169 */ array(73, 74, 75, 76, 77, 78, 97, 100, 138, ),
        /* 170 */ array(73, 74, 75, 76, 77, 78, 97, 100, 138, ),
        /* 171 */ array(73, 74, 75, 76, 77, 78, 97, 100, 138, ),
        /* 172 */ array(115, 116, 119, 132, 133, ),
        /* 173 */ array(106, 107, 132, ),
        /* 174 */ array(106, 107, 132, ),
        /* 175 */ array(132, 133, ),
        /* 176 */ array(1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 53, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, ),
        /* 177 */ array(106, 107, 132, ),
        /* 178 */ array(1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 53, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, ),
        /* 179 */ array(1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 53, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, ),
        /* 180 */ array(1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 53, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, ),
        /* 181 */ array(115, 116, 119, 132, 133, ),
        /* 182 */ array(140, 144, 154, 156, ),
        /* 183 */ array(119, 132, 133, ),
        /* 184 */ array(119, 132, 133, ),
        /* 185 */ array(119, 132, 133, ),
        /* 186 */ array(119, 132, 133, ),
        /* 187 */ array(106, 140, ),
        /* 188 */ array(140, 153, ),
        /* 189 */ array(132, 133, ),
        /* 190 */ array(132, ),
        /* 191 */ array(132, ),
        /* 192 */ array(1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 53, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, ),
        /* 193 */ array(140, 144, 150, 154, 156, ),
        /* 194 */ array(140, 144, 154, 156, ),
        /* 195 */ array(132, 137, 140, 153, ),
        /* 196 */ array(132, 137, 140, 153, ),
        /* 197 */ array(119, 132, 133, ),
        /* 198 */ array(119, 132, 133, ),
        /* 199 */ array(119, 132, 133, ),
        /* 200 */ array(34, 140, ),
        /* 201 */ array(140, 153, ),
        /* 202 */ array(132, ),
        /* 203 */ array(132, ),
        /* 204 */ array(132, ),
        /* 205 */ array(132, ),
        /* 206 */ array(134, ),
        /* 207 */ array(132, ),
        /* 208 */ array(134, ),
        /* 209 */ array(132, ),
        /* 210 */ array(140, ),
        /* 211 */ array(132, ),
        /* 212 */ array(7, 8, 9, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, 136, ),
        /* 213 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 214 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 215 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 216 */ array(73, 74, 75, 76, 77, 78, 140, ),
        /* 217 */ array(140, 144, 151, 154, 156, ),
        /* 218 */ array(140, 144, 150, 154, 156, ),
        /* 219 */ array(140, 150, 154, 156, ),
        /* 220 */ array(140, 144, 154, 156, ),
        /* 221 */ array(140, 154, 156, ),
        /* 222 */ array(6, 136, 137, ),
        /* 223 */ array(132, 133, 137, ),
        /* 224 */ array(132, 140, 157, ),
        /* 225 */ array(137, 140, 153, ),
        /* 226 */ array(140, 154, 156, ),
        /* 227 */ array(136, 137, ),
        /* 228 */ array(140, 153, ),
        /* 229 */ array(28, 136, ),
        /* 230 */ array(140, 153, ),
        /* 231 */ array(106, 107, ),
        /* 232 */ array(34, 140, ),
        /* 233 */ array(94, 95, ),
        /* 234 */ array(28, 137, ),
        /* 235 */ array(134, 142, ),
        /* 236 */ array(140, ),
        /* 237 */ array(34, ),
        /* 238 */ array(118, ),
        /* 239 */ array(34, ),
        /* 240 */ array(106, ),
        /* 241 */ array(28, ),
        /* 242 */ array(97, ),
        /* 243 */ array(117, ),
        /* 244 */ array(134, ),
        /* 245 */ array(141, ),
        /* 246 */ array(34, ),
        /* 247 */ array(136, ),
        /* 248 */ array(6, ),
        /* 249 */ array(132, ),
        /* 250 */ array(34, ),
        /* 251 */ array(134, ),
        /* 252 */ array(97, ),
        /* 253 */ array(134, ),
        /* 254 */ array(28, ),
        /* 255 */ array(34, ),
        /* 256 */ array(136, ),
        /* 257 */ array(117, ),
        /* 258 */ array(28, ),
        /* 259 */ array(132, ),
        /* 260 */ array(140, ),
        /* 261 */ array(134, ),
        /* 262 */ array(117, ),
        /* 263 */ array(132, ),
        /* 264 */ array(28, ),
        /* 265 */ array(134, ),
        /* 266 */ array(118, ),
        /* 267 */ array(14, ),
        /* 268 */ array(),
        /* 269 */ array(),
        /* 270 */ array(),
        /* 271 */ array(),
        /* 272 */ array(),
        /* 273 */ array(),
        /* 274 */ array(),
        /* 275 */ array(),
        /* 276 */ array(),
        /* 277 */ array(),
        /* 278 */ array(),
        /* 279 */ array(),
        /* 280 */ array(),
        /* 281 */ array(),
        /* 282 */ array(),
        /* 283 */ array(),
        /* 284 */ array(),
        /* 285 */ array(),
        /* 286 */ array(),
        /* 287 */ array(),
        /* 288 */ array(),
        /* 289 */ array(),
        /* 290 */ array(),
        /* 291 */ array(),
        /* 292 */ array(),
        /* 293 */ array(),
        /* 294 */ array(),
        /* 295 */ array(),
        /* 296 */ array(),
        /* 297 */ array(),
        /* 298 */ array(),
        /* 299 */ array(),
        /* 300 */ array(),
        /* 301 */ array(),
        /* 302 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, 135, ),
        /* 303 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, 135, ),
        /* 304 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, 136, ),
        /* 305 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, 136, ),
        /* 306 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, 138, ),
        /* 307 */ array(7, 8, 9, 12, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 308 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, 138, ),
        /* 309 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, 135, ),
        /* 310 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, 135, ),
        /* 311 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, 135, ),
        /* 312 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, 135, ),
        /* 313 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, 138, ),
        /* 314 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, 145, ),
        /* 315 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, 135, ),
        /* 316 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, 138, ),
        /* 317 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, 135, ),
        /* 318 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, 135, ),
        /* 319 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, 92, ),
        /* 320 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, 138, ),
        /* 321 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, 138, ),
        /* 322 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, 135, ),
        /* 323 */ array(7, 8, 9, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 324 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 325 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 326 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 327 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 328 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 329 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 330 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 331 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 332 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 333 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 334 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 335 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 336 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 337 */ array(7, 8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 338 */ array(8, 9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 339 */ array(9, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 340 */ array(12, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 341 */ array(27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 342 */ array(27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 343 */ array(27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 344 */ array(27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 345 */ array(27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 346 */ array(27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 347 */ array(27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 348 */ array(27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 349 */ array(27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 350 */ array(27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 351 */ array(27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 352 */ array(27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 353 */ array(27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 354 */ array(27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 355 */ array(27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 356 */ array(27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 357 */ array(27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 358 */ array(27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 359 */ array(29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 360 */ array(29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 361 */ array(29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 362 */ array(31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 363 */ array(32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 364 */ array(33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 365 */ array(34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 366 */ array(35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 367 */ array(35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 368 */ array(35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 369 */ array(14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 55, 56, 66, 137, 142, 152, ),
        /* 370 */ array(35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 371 */ array(35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 372 */ array(35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 373 */ array(40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 374 */ array(40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 375 */ array(40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 376 */ array(40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 377 */ array(46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 378 */ array(46, 47, 48, 49, 50, 51, 53, 65, ),
        /* 379 */ array(49, 50, 51, 53, 55, 65, ),
        /* 380 */ array(49, 50, 51, 53, 55, 65, ),
        /* 381 */ array(66, 134, 137, 142, 152, ),
        /* 382 */ array(49, 50, 51, 53, 65, ),
        /* 383 */ array(49, 50, 51, 53, 65, ),
        /* 384 */ array(49, 50, 51, 53, 65, ),
        /* 385 */ array(66, 134, 137, 142, 152, ),
        /* 386 */ array(66, 137, 142, 152, ),
        /* 387 */ array(66, 137, 142, 152, ),
        /* 388 */ array(66, 137, 142, 152, ),
        /* 389 */ array(66, 137, 142, 152, ),
        /* 390 */ array(112, 113, 138, ),
        /* 391 */ array(6, 135, 145, ),
        /* 392 */ array(112, 113, 138, ),
        /* 393 */ array(66, 137, 152, ),
        /* 394 */ array(70, 71, 72, ),
        /* 395 */ array(133, 136, 137, ),
        /* 396 */ array(6, 135, 145, ),
        /* 397 */ array(111, 112, 113, ),
        /* 398 */ array(111, 112, 113, ),
        /* 399 */ array(6, 135, ),
        /* 400 */ array(6, 136, ),
        /* 401 */ array(6, 135, ),
        /* 402 */ array(92, 133, ),
        /* 403 */ array(66, 138, ),
        /* 404 */ array(12, 135, ),
        /* 405 */ array(132, 137, ),
        /* 406 */ array(6, 135, ),
        /* 407 */ array(6, 135, ),
        /* 408 */ array(6, 135, ),
        /* 409 */ array(12, 135, ),
        /* 410 */ array(6, 136, ),
        /* 411 */ array(6, 135, ),
        /* 412 */ array(6, 136, ),
        /* 413 */ array(92, 133, ),
        /* 414 */ array(6, 135, ),
        /* 415 */ array(6, 135, ),
        /* 416 */ array(6, 135, ),
        /* 417 */ array(66, 152, ),
        /* 418 */ array(132, 137, ),
        /* 419 */ array(53, 65, ),
        /* 420 */ array(6, 136, ),
        /* 421 */ array(6, 138, ),
        /* 422 */ array(6, 138, ),
        /* 423 */ array(53, 65, ),
        /* 424 */ array(132, 137, ),
        /* 425 */ array(6, 136, ),
        /* 426 */ array(6, 138, ),
        /* 427 */ array(132, 137, ),
        /* 428 */ array(92, 133, ),
        /* 429 */ array(6, 136, ),
        /* 430 */ array(6, 136, ),
        /* 431 */ array(92, 133, ),
        /* 432 */ array(53, 65, ),
        /* 433 */ array(53, 65, ),
        /* 434 */ array(92, 133, ),
        /* 435 */ array(132, 134, ),
        /* 436 */ array(6, 135, ),
        /* 437 */ array(6, 138, ),
        /* 438 */ array(6, 136, ),
        /* 439 */ array(70, 71, ),
        /* 440 */ array(132, ),
        /* 441 */ array(140, ),
        /* 442 */ array(135, ),
        /* 443 */ array(137, ),
        /* 444 */ array(132, ),
        /* 445 */ array(98, ),
        /* 446 */ array(137, ),
        /* 447 */ array(14, ),
        /* 448 */ array(134, ),
        /* 449 */ array(135, ),
        /* 450 */ array(136, ),
        /* 451 */ array(136, ),
        /* 452 */ array(136, ),
        /* 453 */ array(6, ),
        /* 454 */ array(134, ),
        /* 455 */ array(136, ),
        /* 456 */ array(122, ),
        /* 457 */ array(138, ),
        /* 458 */ array(142, ),
        /* 459 */ array(136, ),
        /* 460 */ array(136, ),
        /* 461 */ array(134, ),
        /* 462 */ array(6, ),
        /* 463 */ array(136, ),
        /* 464 */ array(92, ),
        /* 465 */ array(136, ),
        /* 466 */ array(137, ),
        /* 467 */ array(136, ),
        /* 468 */ array(122, ),
        /* 469 */ array(135, ),
        /* 470 */ array(134, ),
        /* 471 */ array(136, ),
        /* 472 */ array(135, ),
        /* 473 */ array(136, ),
        /* 474 */ array(134, ),
        /* 475 */ array(145, ),
        /* 476 */ array(134, ),
        /* 477 */ array(28, ),
        /* 478 */ array(132, ),
        /* 479 */ array(135, ),
        /* 480 */ array(137, ),
        /* 481 */ array(134, ),
        /* 482 */ array(92, ),
        /* 483 */ array(134, ),
        /* 484 */ array(134, ),
        /* 485 */ array(137, ),
        /* 486 */ array(135, ),
        /* 487 */ array(28, ),
        /* 488 */ array(136, ),
        /* 489 */ array(137, ),
        /* 490 */ array(136, ),
        /* 491 */ array(14, ),
        /* 492 */ array(6, ),
        /* 493 */ array(12, ),
        /* 494 */ array(134, ),
        /* 495 */ array(140, ),
        /* 496 */ array(136, ),
        /* 497 */ array(136, ),
        /* 498 */ array(137, ),
        /* 499 */ array(134, ),
        /* 500 */ array(137, ),
        /* 501 */ array(132, ),
        /* 502 */ array(134, ),
        /* 503 */ array(137, ),
        /* 504 */ array(6, ),
        /* 505 */ array(134, ),
        /* 506 */ array(133, ),
        /* 507 */ array(134, ),
        /* 508 */ array(6, ),
        /* 509 */ array(136, ),
        /* 510 */ array(65, ),
        /* 511 */ array(134, ),
        /* 512 */ array(65, ),
        /* 513 */ array(145, ),
        /* 514 */ array(134, ),
        /* 515 */ array(142, ),
        /* 516 */ array(134, ),
        /* 517 */ array(66, ),
        /* 518 */ array(134, ),
        /* 519 */ array(143, ),
        /* 520 */ array(136, ),
        /* 521 */ array(65, ),
        /* 522 */ array(134, ),
        /* 523 */ array(134, ),
        /* 524 */ array(134, ),
        /* 525 */ array(135, ),
        /* 526 */ array(136, ),
        /* 527 */ array(142, ),
        /* 528 */ array(133, ),
        /* 529 */ array(65, ),
        /* 530 */ array(65, ),
        /* 531 */ array(65, ),
        /* 532 */ array(134, ),
        /* 533 */ array(145, ),
        /* 534 */ array(65, ),
        /* 535 */ array(84, ),
        /* 536 */ array(134, ),
        /* 537 */ array(142, ),
        /* 538 */ array(133, ),
        /* 539 */ array(65, ),
        /* 540 */ array(14, ),
        /* 541 */ array(134, ),
        /* 542 */ array(14, ),
        /* 543 */ array(65, ),
        /* 544 */ array(65, ),
        /* 545 */ array(145, ),
        /* 546 */ array(136, ),
        /* 547 */ array(134, ),
        /* 548 */ array(135, ),
        /* 549 */ array(14, ),
        /* 550 */ array(132, ),
        /* 551 */ array(133, ),
        /* 552 */ array(132, ),
        /* 553 */ array(134, ),
        /* 554 */ array(135, ),
        /* 555 */ array(140, ),
        /* 556 */ array(66, ),
        /* 557 */ array(134, ),
        /* 558 */ array(134, ),
        /* 559 */ array(134, ),
        /* 560 */ array(134, ),
        /* 561 */ array(133, ),
        /* 562 */ array(138, ),
        /* 563 */ array(136, ),
        /* 564 */ array(136, ),
        /* 565 */ array(134, ),
        /* 566 */ array(135, ),
        /* 567 */ array(137, ),
        /* 568 */ array(135, ),
        /* 569 */ array(136, ),
        /* 570 */ array(28, ),
        /* 571 */ array(145, ),
        /* 572 */ array(134, ),
        /* 573 */ array(132, ),
        /* 574 */ array(),
        /* 575 */ array(),
        /* 576 */ array(),
        /* 577 */ array(),
        /* 578 */ array(),
        /* 579 */ array(),
        /* 580 */ array(),
        /* 581 */ array(),
        /* 582 */ array(),
        /* 583 */ array(),
        /* 584 */ array(),
        /* 585 */ array(),
        /* 586 */ array(),
        /* 587 */ array(),
        /* 588 */ array(),
        /* 589 */ array(),
        /* 590 */ array(),
        /* 591 */ array(),
        /* 592 */ array(),
        /* 593 */ array(),
        /* 594 */ array(),
        /* 595 */ array(),
        /* 596 */ array(),
        /* 597 */ array(),
        /* 598 */ array(),
        /* 599 */ array(),
        /* 600 */ array(),
        /* 601 */ array(),
        /* 602 */ array(),
        /* 603 */ array(),
        /* 604 */ array(),
        /* 605 */ array(),
        /* 606 */ array(),
        /* 607 */ array(),
        /* 608 */ array(),
        /* 609 */ array(),
        /* 610 */ array(),
        /* 611 */ array(),
        /* 612 */ array(),
        /* 613 */ array(),
        /* 614 */ array(),
        /* 615 */ array(),
        /* 616 */ array(),
        /* 617 */ array(),
        /* 618 */ array(),
        /* 619 */ array(),
        /* 620 */ array(),
        /* 621 */ array(),
        /* 622 */ array(),
        /* 623 */ array(),
        /* 624 */ array(),
        /* 625 */ array(),
        /* 626 */ array(),
        /* 627 */ array(),
        /* 628 */ array(),
        /* 629 */ array(),
        /* 630 */ array(),
        /* 631 */ array(),
        /* 632 */ array(),
        /* 633 */ array(),
        /* 634 */ array(),
        /* 635 */ array(),
        /* 636 */ array(),
        /* 637 */ array(),
        /* 638 */ array(),
        /* 639 */ array(),
        /* 640 */ array(),
        /* 641 */ array(),
        /* 642 */ array(),
        /* 643 */ array(),
        /* 644 */ array(),
        /* 645 */ array(),
        /* 646 */ array(),
        /* 647 */ array(),
        /* 648 */ array(),
        /* 649 */ array(),
        /* 650 */ array(),
        /* 651 */ array(),
        /* 652 */ array(),
        /* 653 */ array(),
        /* 654 */ array(),
        /* 655 */ array(),
        /* 656 */ array(),
        /* 657 */ array(),
        /* 658 */ array(),
        /* 659 */ array(),
        /* 660 */ array(),
        /* 661 */ array(),
        /* 662 */ array(),
        /* 663 */ array(),
        /* 664 */ array(),
        /* 665 */ array(),
        /* 666 */ array(),
        /* 667 */ array(),
        /* 668 */ array(),
        /* 669 */ array(),
        /* 670 */ array(),
        /* 671 */ array(),
        /* 672 */ array(),
        /* 673 */ array(),
        /* 674 */ array(),
        /* 675 */ array(),
        /* 676 */ array(),
        /* 677 */ array(),
        /* 678 */ array(),
        /* 679 */ array(),
        /* 680 */ array(),
        /* 681 */ array(),
        /* 682 */ array(),
        /* 683 */ array(),
        /* 684 */ array(),
        /* 685 */ array(),
        /* 686 */ array(),
        /* 687 */ array(),
        /* 688 */ array(),
        /* 689 */ array(),
        /* 690 */ array(),
        /* 691 */ array(),
        /* 692 */ array(),
        /* 693 */ array(),
        /* 694 */ array(),
        /* 695 */ array(),
        /* 696 */ array(),
        /* 697 */ array(),
        /* 698 */ array(),
        /* 699 */ array(),
        /* 700 */ array(),
        /* 701 */ array(),
        /* 702 */ array(),
        /* 703 */ array(),
        /* 704 */ array(),
        /* 705 */ array(),
        /* 706 */ array(),
        /* 707 */ array(),
        /* 708 */ array(),
        /* 709 */ array(),
        /* 710 */ array(),
        /* 711 */ array(),
        /* 712 */ array(),
        /* 713 */ array(),
        /* 714 */ array(),
        /* 715 */ array(),
        /* 716 */ array(),
        /* 717 */ array(),
        /* 718 */ array(),
        /* 719 */ array(),
        /* 720 */ array(),
        /* 721 */ array(),
        /* 722 */ array(),
        /* 723 */ array(),
        /* 724 */ array(),
        /* 725 */ array(),
        /* 726 */ array(),
        /* 727 */ array(),
        /* 728 */ array(),
        /* 729 */ array(),
        /* 730 */ array(),
        /* 731 */ array(),
        /* 732 */ array(),
        /* 733 */ array(),
        /* 734 */ array(),
        /* 735 */ array(),
        /* 736 */ array(),
        /* 737 */ array(),
        /* 738 */ array(),
        /* 739 */ array(),
        /* 740 */ array(),
        /* 741 */ array(),
        /* 742 */ array(),
        /* 743 */ array(),
        /* 744 */ array(),
        /* 745 */ array(),
        /* 746 */ array(),
        /* 747 */ array(),
        /* 748 */ array(),
        /* 749 */ array(),
        /* 750 */ array(),
        /* 751 */ array(),
        /* 752 */ array(),
        /* 753 */ array(),
        /* 754 */ array(),
        /* 755 */ array(),
        /* 756 */ array(),
        /* 757 */ array(),
        /* 758 */ array(),
        /* 759 */ array(),
        /* 760 */ array(),
        /* 761 */ array(),
        /* 762 */ array(),
        /* 763 */ array(),
        /* 764 */ array(),
        /* 765 */ array(),
        /* 766 */ array(),
        /* 767 */ array(),
        /* 768 */ array(),
        /* 769 */ array(),
        /* 770 */ array(),
        /* 771 */ array(),
        /* 772 */ array(),
        /* 773 */ array(),
        /* 774 */ array(),
        /* 775 */ array(),
        /* 776 */ array(),
        /* 777 */ array(),
        /* 778 */ array(),
        /* 779 */ array(),
        /* 780 */ array(),
        /* 781 */ array(),
        /* 782 */ array(),
        /* 783 */ array(),
        /* 784 */ array(),
        /* 785 */ array(),
        /* 786 */ array(),
        /* 787 */ array(),
        /* 788 */ array(),
        /* 789 */ array(),
        /* 790 */ array(),
        /* 791 */ array(),
        /* 792 */ array(),
        /* 793 */ array(),
        /* 794 */ array(),
        /* 795 */ array(),
        /* 796 */ array(),
        /* 797 */ array(),
        /* 798 */ array(),
        /* 799 */ array(),
        /* 800 */ array(),
        /* 801 */ array(),
        /* 802 */ array(),
        /* 803 */ array(),
        /* 804 */ array(),
        /* 805 */ array(),
        /* 806 */ array(),
        /* 807 */ array(),
        /* 808 */ array(),
        /* 809 */ array(),
        /* 810 */ array(),
        /* 811 */ array(),
        /* 812 */ array(),
        /* 813 */ array(),
        /* 814 */ array(),
        /* 815 */ array(),
        /* 816 */ array(),
        /* 817 */ array(),
        /* 818 */ array(),
        /* 819 */ array(),
        /* 820 */ array(),
        /* 821 */ array(),
        /* 822 */ array(),
        /* 823 */ array(),
        /* 824 */ array(),
        /* 825 */ array(),
        /* 826 */ array(),
        /* 827 */ array(),
        /* 828 */ array(),
        /* 829 */ array(),
        /* 830 */ array(),
        /* 831 */ array(),
        /* 832 */ array(),
        /* 833 */ array(),
        /* 834 */ array(),
        /* 835 */ array(),
        /* 836 */ array(),
        /* 837 */ array(),
        /* 838 */ array(),
        /* 839 */ array(),
        /* 840 */ array(),
        /* 841 */ array(),
        /* 842 */ array(),
        /* 843 */ array(),
        /* 844 */ array(),
        /* 845 */ array(),
        /* 846 */ array(),
        /* 847 */ array(),
        /* 848 */ array(),
        /* 849 */ array(),
        /* 850 */ array(),
        /* 851 */ array(),
        /* 852 */ array(),
        /* 853 */ array(),
        /* 854 */ array(),
        /* 855 */ array(),
        /* 856 */ array(),
        /* 857 */ array(),
        /* 858 */ array(),
        /* 859 */ array(),
        /* 860 */ array(),
        /* 861 */ array(),
        /* 862 */ array(),
        /* 863 */ array(),
        /* 864 */ array(),
        /* 865 */ array(),
        /* 866 */ array(),
        /* 867 */ array(),
        /* 868 */ array(),
        /* 869 */ array(),
        /* 870 */ array(),
        /* 871 */ array(),
        /* 872 */ array(),
        /* 873 */ array(),
        /* 874 */ array(),
        /* 875 */ array(),
        /* 876 */ array(),
        /* 877 */ array(),
        /* 878 */ array(),
        /* 879 */ array(),
        /* 880 */ array(),
        /* 881 */ array(),
        /* 882 */ array(),
        /* 883 */ array(),
        /* 884 */ array(),
        /* 885 */ array(),
        /* 886 */ array(),
        /* 887 */ array(),
        /* 888 */ array(),
        /* 889 */ array(),
        /* 890 */ array(),
        /* 891 */ array(),
);
    static public $yy_default = array(
 /*     0 */   971, 1368, 1368,  892, 1368, 1368, 1368, 1368, 1368, 1368,
 /*    10 */  1368, 1368, 1368, 1368, 1368, 1368, 1368, 1093, 1092, 1082,
 /*    20 */  1083, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1336,
 /*    30 */  1336, 1368, 1165, 1368, 1165, 1368, 1165, 1293, 1368, 1296,
 /*    40 */  1368, 1368, 1296, 1296, 1296, 1296, 1368, 1296, 1296, 1368,
 /*    50 */  1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368,
 /*    60 */  1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368,
 /*    70 */  1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368,
 /*    80 */  1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368,
 /*    90 */  1368, 1368, 1368, 1368, 1368, 1368, 1368, 1243, 1368, 1368,
 /*   100 */  1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368,
 /*   110 */  1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368,
 /*   120 */  1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368,
 /*   130 */  1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368,
 /*   140 */  1368, 1335, 1335, 1335, 1368, 1368, 1368, 1335, 1368, 1368,
 /*   150 */  1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1102,
 /*   160 */  1102, 1102, 1102, 1368, 1368, 1368, 1368, 1368, 1149, 1149,
 /*   170 */  1149, 1149, 1102, 1368, 1368, 1368, 1368, 1368, 1368, 1368,
 /*   180 */  1141, 1368, 1269, 1368, 1368, 1368, 1368, 1263, 1368, 1368,
 /*   190 */  1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368,
 /*   200 */  1368, 1368, 1368, 1368, 1368, 1368, 1272, 1368, 1272, 1368,
 /*   210 */  1368, 1368, 1368, 1250, 1250, 1250, 1150, 1368, 1368, 1368,
 /*   220 */  1271, 1270, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368,
 /*   230 */  1368, 1368, 1368, 1046, 1368, 1289, 1368, 1251, 1066, 1251,
 /*   240 */  1263, 1107, 1253, 1064, 1368, 1054, 1052, 1081, 1292, 1368,
 /*   250 */  1251, 1368, 1253, 1267, 1107, 1251, 1081, 1062, 1107, 1368,
 /*   260 */  1368, 1313, 1062, 1368, 1107, 1368, 1066, 1250, 1012,  971,
 /*   270 */  1123, 1012,  971, 1012, 1042, 1012, 1250, 1123, 1250, 1012,
 /*   280 */  1012, 1012, 1012, 1250, 1081, 1250, 1123, 1012, 1012, 1012,
 /*   290 */  1012, 1250, 1250, 1012, 1250, 1250, 1081, 1012, 1012, 1012,
 /*   300 */  1123, 1012, 1368, 1368, 1368, 1368, 1368, 1341, 1368, 1368,
 /*   310 */  1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368,
 /*   320 */  1368, 1368, 1368, 1368, 1340, 1360, 1297, 1101, 1361, 1114,
 /*   330 */  1164, 1363, 1367, 1121, 1364, 1167, 1113, 1168, 1194, 1196,
 /*   340 */  1244, 1187, 1184, 1173, 1180, 1177, 1178, 1242, 1181, 1185,
 /*   350 */  1195, 1186, 1246, 1176, 1183, 1172, 1182, 1179, 1245, 1228,
 /*   360 */  1229, 1227, 1192, 1193, 1197, 1199, 1215, 1218, 1216, 1294,
 /*   370 */  1198, 1217, 1223, 1221, 1219, 1220, 1222, 1208, 1207, 1209,
 /*   380 */  1211, 1225, 1200, 1201, 1202, 1287, 1174, 1191, 1266, 1189,
 /*   390 */  1368, 1299, 1368, 1298, 1368, 1368, 1299, 1368, 1368, 1368,
 /*   400 */  1368, 1368, 1005, 1368, 1299, 1368, 1368, 1299, 1368, 1299,
 /*   410 */  1368, 1368, 1368, 1005, 1368, 1368, 1299, 1348, 1368, 1203,
 /*   420 */  1368, 1368, 1368, 1213, 1368, 1368, 1368, 1368, 1005, 1368,
 /*   430 */  1368, 1005, 1206, 1205, 1005, 1368, 1368, 1368, 1368, 1090,
 /*   440 */  1368, 1368, 1368, 1368, 1368, 1143, 1368, 1120, 1368, 1368,
 /*   450 */  1368, 1368, 1368, 1137, 1368, 1368, 1368, 1368, 1368, 1368,
 /*   460 */  1368, 1368, 1166, 1368, 1368, 1368, 1368, 1368, 1368, 1368,
 /*   470 */  1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368, 1368,
 /*   480 */  1368, 1368,  972, 1368, 1368, 1368, 1368, 1368, 1368, 1368,
 /*   490 */  1368, 1368, 1065, 1044, 1368, 1368, 1368, 1368, 1368, 1317,
 /*   500 */  1368, 1368, 1368, 1368, 1067, 1368,  948, 1368, 1096, 1368,
 /*   510 */  1239, 1311, 1214, 1368, 1368, 1265, 1368, 1288, 1368, 1368,
 /*   520 */  1368, 1204, 1318, 1291, 1368, 1368, 1368, 1368,  975, 1236,
 /*   530 */  1235, 1234, 1368, 1368, 1233, 1368, 1368, 1368, 1368, 1232,
 /*   540 */  1368, 1368, 1368, 1237, 1231, 1368, 1368, 1368, 1368, 1100,
 /*   550 */  1368,  976, 1368, 1290, 1368, 1368, 1368, 1301, 1300, 1368,
 /*   560 */  1368,  974, 1299, 1368, 1368, 1368, 1368, 1368, 1368, 1368,
 /*   570 */   972, 1368, 1368, 1368,  912,  911,  918,  914, 1072, 1080,
 /*   580 */  1079,  917,  920,  916,  921, 1078,  922,  926,  923, 1071,
 /*   590 */   915,  924,  913,  925,  919, 1077, 1085,  947,  943,  944,
 /*   600 */  1073, 1010, 1076,  945,  946, 1075, 1074, 1047,  948,  949,
 /*   610 */   950, 1063,  951,  952,  953,  942,  941, 1084,  910, 1332,
 /*   620 */  1334,  927,  928,  929, 1331,  930,  931,  932,  940,  933,
 /*   630 */   934,  935,  936,  937, 1045,  938,  939, 1070,  899,  909,
 /*   640 */  1000,  997, 1003, 1004,  998,  986,  993,  999,  987,  992,
 /*   650 */   989, 1001, 1007, 1008,  994, 1002,  988,  996,  995,  991,
 /*   660 */  1316,  977, 1041, 1171, 1170, 1273, 1169,  973,  972,  983,
 /*   670 */   978, 1006, 1111,  979,  980,  981, 1190, 1188,  982,  984,
 /*   680 */   990, 1315, 1086,  902, 1146,  900, 1256, 1258,  901, 1257,
 /*   690 */  1255, 1254,  897,  903,  904,  905, 1248, 1087,  906,  907,
 /*   700 */   908,  898,  896, 1009, 1110, 1326, 1319, 1324, 1322, 1321,
 /*   710 */  1161, 1320, 1109, 1112,  895, 1268, 1353, 1175, 1259, 1352,
 /*   720 */   893, 1247,  894, 1252, 1261,  954, 1283, 1040, 1278, 1279,
 /*   730 */  1039, 1280, 1281, 1282, 1285, 1277, 1344, 1345, 1346, 1038,
 /*   740 */  1295, 1305, 1307, 1037, 1043, 1276, 1310, 1056, 1015, 1016,
 /*   750 */  1156, 1017, 1154, 1124, 1122, 1018, 1275, 1019, 1020, 1021,
 /*   760 */  1022, 1051, 1023, 1249, 1262, 1036, 1312, 1155, 1117, 1119,
 /*   770 */  1118, 1284, 1030, 1286, 1338, 1116, 1115, 1031, 1337, 1029,
 /*   780 */  1339, 1028, 1274, 1027, 1026, 1024, 1354, 1330, 1358, 1365,
 /*   790 */  1035, 1359,  970, 1362, 1048, 1366, 1049, 1034, 1162, 1306,
 /*   800 */  1308, 1309, 1033, 1328, 1032, 1163, 1329, 1157, 1014,  955,
 /*   810 */  1212, 1025, 1224, 1263, 1061, 1264, 1323, 1210, 1151, 1314,
 /*   820 */  1148, 1152, 1226, 1133, 1144, 1230, 1142, 1153, 1088, 1260,
 /*   830 */  1139, 1094, 1091,  956, 1095,  957,  958,  959,  960,  961,
 /*   840 */   969,  962,  963,  964,  965,  966,  967,  968, 1089, 1140,
 /*   850 */  1138, 1013, 1103, 1057, 1099, 1053, 1145, 1127, 1055, 1098,
 /*   860 */  1104, 1059, 1105, 1159, 1160, 1106, 1108, 1158, 1125, 1011,
 /*   870 */  1058, 1351, 1128, 1241, 1136, 1238, 1135, 1134, 1132, 1240,
 /*   880 */  1131, 1347, 1350, 1130, 1129, 1126, 1349, 1355, 1060, 1356,
 /*   890 */  1357,  985,
);
/* The next thing included is series of defines which control
** various aspects of the generated parser.
**    self::YYNOCODE      is a number which corresponds
**                        to no legal terminal or nonterminal number.  This
**                        number is used to fill in empty slots of the hash 
**                        table.
**    self::YYFALLBACK    If defined, this indicates that one or more tokens
**                        have fall-back values which should be used if the
**                        original value of the token will not parse.
**    self::YYSTACKDEPTH  is the maximum depth of the parser's stack.
**    self::YYNSTATE      the combined number of states.
**    self::YYNRULE       the number of rules in the grammar
**    self::YYERRORSYMBOL is the code number of the error symbol.  If not
**                        defined, then do no error processing.
*/
    const YYNOCODE = 287;
    const YYSTACKDEPTH = 100;
    const YYNSTATE = 892;
    const YYNRULE = 476;
    const YYERRORSYMBOL = 158;
    const YYERRSYMDT = 'yy0';
    const YYFALLBACK = 0;
    /** The next table maps tokens into fallback tokens.  If a construct
     * like the following:
     * 
     *      %fallback ID X Y Z.
     *
     * appears in the grammer, then ID becomes a fallback token for X, Y,
     * and Z.  Whenever one of the tokens X, Y, or Z is input to the parser
     * but it does not parse, the type of the token is changed to ID and
     * the parse is retried before an error is thrown.
     */
    static public $yyFallback = array(
    );
    /**
     * Turn parser tracing on by giving a stream to which to write the trace
     * and a prompt to preface each trace message.  Tracing is turned off
     * by making either argument NULL 
     *
     * Inputs:
     * 
     * - A stream resource to which trace output should be written.
     *   If NULL, then tracing is turned off.
     * - A prefix string written at the beginning of every
     *   line of trace output.  If NULL, then tracing is
     *   turned off.
     *
     * Outputs:
     * 
     * - None.
     * @param resource
     * @param string
     */
    static function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        self::$yyTraceFILE = $TraceFILE;
        self::$yyTracePrompt = $zTracePrompt;
    }

    /**
     * Output debug information to output (php://output stream)
     */
    static function PrintTrace()
    {
        self::$yyTraceFILE = fopen('php://output', 'w');
        self::$yyTracePrompt = '';
    }

    /**
     * @var resource|0
     */
    static public $yyTraceFILE;
    /**
     * String to prepend to debug output
     * @var string|0
     */
    static public $yyTracePrompt;
    /**
     * @var int
     */
    public $yyidx = -1;                    /* Index of top element in stack */
    /**
     * @var int
     */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    /**
     * @var array
     */
    public $yystack = array();  /* The parser's stack */

    /**
     * For tracing shifts, the names of all terminals and nonterminals
     * are required.  The following table supplies these names
     * @var array
     */
    static public $yyTokenName = array( 
  '$',             'T_INCLUDE',     'T_INCLUDE_ONCE',  'T_EVAL',      
  'T_REQUIRE',     'T_REQUIRE_ONCE',  'COMMA',         'T_LOGICAL_OR',
  'T_LOGICAL_XOR',  'T_LOGICAL_AND',  'T_PRINT',       'T_YIELD',     
  'T_DOUBLE_ARROW',  'T_YIELD_FROM',  'EQUALS',        'T_PLUS_EQUAL',
  'T_MINUS_EQUAL',  'T_MUL_EQUAL',   'T_DIV_EQUAL',   'T_CONCAT_EQUAL',
  'T_MOD_EQUAL',   'T_AND_EQUAL',   'T_OR_EQUAL',    'T_XOR_EQUAL', 
  'T_SL_EQUAL',    'T_SR_EQUAL',    'T_POW_EQUAL',   'QUESTION',    
  'COLON',         'T_COALESCE',    'T_BOOLEAN_OR',  'T_BOOLEAN_AND',
  'BAR',           'CARAT',         'AMPERSAND',     'T_IS_EQUAL',  
  'T_IS_NOT_EQUAL',  'T_IS_IDENTICAL',  'T_IS_NOT_IDENTICAL',  'T_SPACESHIP', 
  'LESSTHAN',      'T_IS_SMALLER_OR_EQUAL',  'GREATERTHAN',   'T_IS_GREATER_OR_EQUAL',
  'T_SL',          'T_SR',          'PLUS',          'MINUS',       
  'DOT',           'TIMES',         'DIVIDE',        'PERCENT',     
  'EXCLAM',        'T_INSTANCEOF',  'TILDE',         'T_INC',       
  'T_DEC',         'T_INT_CAST',    'T_DOUBLE_CAST',  'T_STRING_CAST',
  'T_ARRAY_CAST',  'T_OBJECT_CAST',  'T_BOOL_CAST',   'T_UNSET_CAST',
  'AT',            'T_POW',         'LBRACKET',      'T_NEW',       
  'T_CLONE',       'T_NOELSE',      'T_ELSEIF',      'T_ELSE',      
  'T_ENDIF',       'T_STATIC',      'T_ABSTRACT',    'T_FINAL',     
  'T_PRIVATE',     'T_PROTECTED',   'T_PUBLIC',      'SINGLEQUOTE', 
  'T_EXIT',        'T_IF',          'T_ECHO',        'T_DO',        
  'T_WHILE',       'T_ENDWHILE',    'T_FOR',         'T_ENDFOR',    
  'T_FOREACH',     'T_ENDFOREACH',  'T_DECLARE',     'T_ENDDECLARE',
  'T_AS',          'T_TRY',         'T_CATCH',       'T_FINALLY',   
  'T_THROW',       'T_USE',         'T_INSTEADOF',   'T_GLOBAL',    
  'T_VAR',         'T_UNSET',       'T_ISSET',       'T_EMPTY',     
  'T_CONTINUE',    'T_GOTO',        'T_FUNCTION',    'T_CONST',     
  'T_RETURN',      'T_LIST',        'T_SWITCH',      'T_ENDSWITCH', 
  'T_CASE',        'T_DEFAULT',     'T_BREAK',       'T_ARRAY',     
  'T_CALLABLE',    'T_EXTENDS',     'T_IMPLEMENTS',  'T_NAMESPACE', 
  'T_TRAIT',       'T_INTERFACE',   'T_CLASS',       'T_CLASS_C',   
  'T_TRAIT_C',     'T_FUNC_C',      'T_METHOD_C',    'T_LINE',      
  'T_FILE',        'T_DIR',         'T_NS_C',        'T_HALT_COMPILER',
  'T_STRING',      'T_NS_SEPARATOR',  'LPAREN',        'RPAREN',      
  'SEMI',          'LCURLY',        'RCURLY',        'T_INLINE_HTML',
  'T_VARIABLE',    'T_ELLIPSIS',    'T_PAAMAYIM_NEKUDOTAYIM',  'BACKQUOTE',   
  'T_ENCAPSED_AND_WHITESPACE',  'RBRACKET',      'T_CONSTANT_ENCAPSED_STRING',  'T_LNUMBER',   
  'T_DNUMBER',     'T_START_HEREDOC',  'T_END_HEREDOC',  'DOUBLEQUOTE', 
  'T_OBJECT_OPERATOR',  'DOLLAR',        'T_DOLLAR_OPEN_CURLY_BRACES',  'T_STRING_VARNAME',
  'T_CURLY_OPEN',  'T_NUM_STRING',  'error',         'start',       
  'top_statement_list',  'reserved_non_modifiers',  'semi_reserved',  'identifier',  
  'top_statement',  'namespace_name',  'name',          'statement',   
  'function_declaration_statement',  'class_declaration_statement',  'trait_declaration_statement',  'interface_declaration_statement',
  'mixed_group_use_declaration',  'use_type',      'group_use_declaration',  'use_declarations',
  'const_list',    'unprefixed_use_declarations',  'inline_use_declarations',  'inline_use_declaration',
  'unprefixed_use_declaration',  'use_declaration',  'const_decl',    'inner_statement_list',
  'inner_statement',  'if_stmt',       'alt_if_stmt',   'expr',        
  'while_statement',  'for_exprs',     'for_statement',  'switch_case_list',
  'optional_expr',  'global_var_list',  'static_var_list',  'echo_expr_list',
  'unset_variables',  'foreach_inner',  'foreach_statement',  'declare_statement',
  'catch_list',    'finally_statement',  'foreach_variable',  'unset_variable',
  'variable',      'function',      'returns_ref',   'parameter_list',
  'return_type',   'backup_doc_comment',  'is_reference',  'is_variadic', 
  'class_modifiers',  'extends_from',  'implements_list',  'class_statement_list',
  'interface_extends_list',  'name_list',     'assignment_list',  'case_list',   
  'case_separator',  'if_stmt_without_else',  'alt_if_stmt_without_else',  'non_empty_parameter_list',
  'parameter',     'optional_type',  'type',          'argument_list',
  'non_empty_argument_list',  'argument',      'global_var',    'simple_variable',
  'static_var',    'class_statement',  'variable_modifiers',  'property_list',
  'method_modifiers',  'class_const_list',  'trait_adaptations',  'method_body', 
  'trait_adaptation_list',  'trait_adaptation',  'trait_precedence',  'trait_alias', 
  'absolute_trait_method_reference',  'trait_method_reference',  'member_modifier',  'non_empty_member_modifiers',
  'property',      'class_const_decl',  'echo_expr',     'non_empty_for_exprs',
  'anonymous_class',  'ctor_arguments',  'new_expr',      'class_name_reference',
  'expr_without_variable',  'internal_functions_in_yacc',  'exit_expr',     'scalar',      
  'backticks_expr',  'lexical_vars',  'lexical_var_list',  'lexical_var', 
  'function_call',  'class_name',    'member_name',   'variable_class_name',
  'callable_expr',  'new_variable',  'encaps_list',   'dereferencable_scalar',
  'array_pair_list',  'constant',      'possible_comma',  'dereferencable',
  'callable_variable',  'property_name',  'static_member',  'assignment_list_element',
  'non_empty_array_pair_list',  'array_pair',    'encaps_var',    'encaps_var_offset',
  'isset_variables',  'isset_variable',
    );

    /**
     * For tracing reduce actions, the names of all rules are required.
     * @var array
     */
    static public $yyRuleName = array(
 /*   0 */ "start ::= top_statement_list",
 /*   1 */ "reserved_non_modifiers ::= T_INCLUDE",
 /*   2 */ "reserved_non_modifiers ::= T_INCLUDE_ONCE",
 /*   3 */ "reserved_non_modifiers ::= T_EVAL",
 /*   4 */ "reserved_non_modifiers ::= T_REQUIRE",
 /*   5 */ "reserved_non_modifiers ::= T_REQUIRE_ONCE",
 /*   6 */ "reserved_non_modifiers ::= T_LOGICAL_OR",
 /*   7 */ "reserved_non_modifiers ::= T_LOGICAL_XOR",
 /*   8 */ "reserved_non_modifiers ::= T_LOGICAL_AND",
 /*   9 */ "reserved_non_modifiers ::= T_INSTANCEOF",
 /*  10 */ "reserved_non_modifiers ::= T_NEW",
 /*  11 */ "reserved_non_modifiers ::= T_CLONE",
 /*  12 */ "reserved_non_modifiers ::= T_EXIT",
 /*  13 */ "reserved_non_modifiers ::= T_IF",
 /*  14 */ "reserved_non_modifiers ::= T_ELSEIF",
 /*  15 */ "reserved_non_modifiers ::= T_ELSE",
 /*  16 */ "reserved_non_modifiers ::= T_ENDIF",
 /*  17 */ "reserved_non_modifiers ::= T_ECHO",
 /*  18 */ "reserved_non_modifiers ::= T_DO",
 /*  19 */ "reserved_non_modifiers ::= T_WHILE",
 /*  20 */ "reserved_non_modifiers ::= T_ENDWHILE",
 /*  21 */ "reserved_non_modifiers ::= T_FOR",
 /*  22 */ "reserved_non_modifiers ::= T_ENDFOR",
 /*  23 */ "reserved_non_modifiers ::= T_FOREACH",
 /*  24 */ "reserved_non_modifiers ::= T_ENDFOREACH",
 /*  25 */ "reserved_non_modifiers ::= T_DECLARE",
 /*  26 */ "reserved_non_modifiers ::= T_ENDDECLARE",
 /*  27 */ "reserved_non_modifiers ::= T_AS",
 /*  28 */ "reserved_non_modifiers ::= T_TRY",
 /*  29 */ "reserved_non_modifiers ::= T_CATCH",
 /*  30 */ "reserved_non_modifiers ::= T_FINALLY",
 /*  31 */ "reserved_non_modifiers ::= T_THROW",
 /*  32 */ "reserved_non_modifiers ::= T_USE",
 /*  33 */ "reserved_non_modifiers ::= T_INSTEADOF",
 /*  34 */ "reserved_non_modifiers ::= T_GLOBAL",
 /*  35 */ "reserved_non_modifiers ::= T_VAR",
 /*  36 */ "reserved_non_modifiers ::= T_UNSET",
 /*  37 */ "reserved_non_modifiers ::= T_ISSET",
 /*  38 */ "reserved_non_modifiers ::= T_EMPTY",
 /*  39 */ "reserved_non_modifiers ::= T_CONTINUE",
 /*  40 */ "reserved_non_modifiers ::= T_GOTO",
 /*  41 */ "reserved_non_modifiers ::= T_FUNCTION",
 /*  42 */ "reserved_non_modifiers ::= T_CONST",
 /*  43 */ "reserved_non_modifiers ::= T_RETURN",
 /*  44 */ "reserved_non_modifiers ::= T_PRINT",
 /*  45 */ "reserved_non_modifiers ::= T_YIELD",
 /*  46 */ "reserved_non_modifiers ::= T_LIST",
 /*  47 */ "reserved_non_modifiers ::= T_SWITCH",
 /*  48 */ "reserved_non_modifiers ::= T_ENDSWITCH",
 /*  49 */ "reserved_non_modifiers ::= T_CASE",
 /*  50 */ "reserved_non_modifiers ::= T_DEFAULT",
 /*  51 */ "reserved_non_modifiers ::= T_BREAK",
 /*  52 */ "reserved_non_modifiers ::= T_ARRAY",
 /*  53 */ "reserved_non_modifiers ::= T_CALLABLE",
 /*  54 */ "reserved_non_modifiers ::= T_EXTENDS",
 /*  55 */ "reserved_non_modifiers ::= T_IMPLEMENTS",
 /*  56 */ "reserved_non_modifiers ::= T_NAMESPACE",
 /*  57 */ "reserved_non_modifiers ::= T_TRAIT",
 /*  58 */ "reserved_non_modifiers ::= T_INTERFACE",
 /*  59 */ "reserved_non_modifiers ::= T_CLASS",
 /*  60 */ "reserved_non_modifiers ::= T_CLASS_C",
 /*  61 */ "reserved_non_modifiers ::= T_TRAIT_C",
 /*  62 */ "reserved_non_modifiers ::= T_FUNC_C",
 /*  63 */ "reserved_non_modifiers ::= T_METHOD_C",
 /*  64 */ "reserved_non_modifiers ::= T_LINE",
 /*  65 */ "reserved_non_modifiers ::= T_FILE",
 /*  66 */ "reserved_non_modifiers ::= T_DIR",
 /*  67 */ "reserved_non_modifiers ::= T_NS_C",
 /*  68 */ "reserved_non_modifiers ::= T_HALT_COMPILER",
 /*  69 */ "semi_reserved ::= reserved_non_modifiers",
 /*  70 */ "semi_reserved ::= T_STATIC",
 /*  71 */ "semi_reserved ::= T_ABSTRACT",
 /*  72 */ "semi_reserved ::= T_FINAL",
 /*  73 */ "semi_reserved ::= T_PRIVATE",
 /*  74 */ "semi_reserved ::= T_PROTECTED",
 /*  75 */ "semi_reserved ::= T_PUBLIC",
 /*  76 */ "identifier ::= T_STRING",
 /*  77 */ "identifier ::= semi_reserved",
 /*  78 */ "top_statement_list ::= top_statement_list top_statement",
 /*  79 */ "top_statement_list ::=",
 /*  80 */ "namespace_name ::= T_STRING",
 /*  81 */ "namespace_name ::= namespace_name T_NS_SEPARATOR T_STRING",
 /*  82 */ "name ::= namespace_name",
 /*  83 */ "name ::= T_NAMESPACE T_NS_SEPARATOR namespace_name",
 /*  84 */ "name ::= T_NS_SEPARATOR namespace_name",
 /*  85 */ "top_statement ::= statement",
 /*  86 */ "top_statement ::= function_declaration_statement",
 /*  87 */ "top_statement ::= class_declaration_statement",
 /*  88 */ "top_statement ::= trait_declaration_statement",
 /*  89 */ "top_statement ::= interface_declaration_statement",
 /*  90 */ "top_statement ::= T_HALT_COMPILER LPAREN RPAREN SEMI",
 /*  91 */ "top_statement ::= T_NAMESPACE namespace_name SEMI",
 /*  92 */ "top_statement ::= T_NAMESPACE namespace_name LCURLY top_statement_list RCURLY",
 /*  93 */ "top_statement ::= T_NAMESPACE LCURLY top_statement_list RCURLY",
 /*  94 */ "top_statement ::= T_USE mixed_group_use_declaration SEMI",
 /*  95 */ "top_statement ::= T_USE use_type group_use_declaration SEMI",
 /*  96 */ "top_statement ::= T_USE use_declarations SEMI",
 /*  97 */ "top_statement ::= T_USE use_type use_declarations SEMI",
 /*  98 */ "top_statement ::= T_CONST const_list SEMI",
 /*  99 */ "use_type ::= T_FUNCTION",
 /* 100 */ "use_type ::= T_CONST",
 /* 101 */ "group_use_declaration ::= namespace_name T_NS_SEPARATOR LCURLY unprefixed_use_declarations RCURLY",
 /* 102 */ "group_use_declaration ::= T_NS_SEPARATOR namespace_name T_NS_SEPARATOR LCURLY unprefixed_use_declarations RCURLY",
 /* 103 */ "mixed_group_use_declaration ::= namespace_name T_NS_SEPARATOR LCURLY inline_use_declarations RCURLY",
 /* 104 */ "mixed_group_use_declaration ::= T_NS_SEPARATOR namespace_name T_NS_SEPARATOR LCURLY inline_use_declarations RCURLY",
 /* 105 */ "inline_use_declarations ::= inline_use_declarations COMMA inline_use_declaration",
 /* 106 */ "inline_use_declarations ::= inline_use_declaration",
 /* 107 */ "unprefixed_use_declarations ::= unprefixed_use_declarations COMMA unprefixed_use_declaration",
 /* 108 */ "unprefixed_use_declarations ::= unprefixed_use_declaration",
 /* 109 */ "use_declarations ::= use_declarations COMMA use_declaration",
 /* 110 */ "use_declarations ::= use_declaration",
 /* 111 */ "inline_use_declaration ::= unprefixed_use_declaration",
 /* 112 */ "inline_use_declaration ::= use_type unprefixed_use_declaration",
 /* 113 */ "unprefixed_use_declaration ::= namespace_name",
 /* 114 */ "unprefixed_use_declaration ::= namespace_name T_AS T_STRING",
 /* 115 */ "use_declaration ::= unprefixed_use_declaration",
 /* 116 */ "use_declaration ::= T_NS_SEPARATOR unprefixed_use_declaration",
 /* 117 */ "const_list ::= const_list COMMA const_decl",
 /* 118 */ "const_list ::= const_decl",
 /* 119 */ "inner_statement_list ::= inner_statement_list inner_statement",
 /* 120 */ "inner_statement_list ::=",
 /* 121 */ "inner_statement ::= statement",
 /* 122 */ "inner_statement ::= function_declaration_statement",
 /* 123 */ "inner_statement ::= class_declaration_statement",
 /* 124 */ "inner_statement ::= trait_declaration_statement",
 /* 125 */ "inner_statement ::= interface_declaration_statement",
 /* 126 */ "inner_statement ::= T_HALT_COMPILER LPAREN RPAREN SEMI",
 /* 127 */ "statement ::= LCURLY inner_statement_list RCURLY",
 /* 128 */ "statement ::= if_stmt",
 /* 129 */ "statement ::= alt_if_stmt",
 /* 130 */ "statement ::= T_WHILE LPAREN expr RPAREN while_statement",
 /* 131 */ "statement ::= T_DO statement T_WHILE LPAREN expr RPAREN SEMI",
 /* 132 */ "statement ::= T_FOR LPAREN for_exprs SEMI for_exprs SEMI for_exprs RPAREN for_statement",
 /* 133 */ "statement ::= T_SWITCH LPAREN expr RPAREN switch_case_list",
 /* 134 */ "statement ::= T_BREAK optional_expr SEMI",
 /* 135 */ "statement ::= T_CONTINUE optional_expr SEMI",
 /* 136 */ "statement ::= T_RETURN optional_expr SEMI",
 /* 137 */ "statement ::= T_GLOBAL global_var_list SEMI",
 /* 138 */ "statement ::= T_STATIC static_var_list SEMI",
 /* 139 */ "statement ::= T_ECHO echo_expr_list SEMI",
 /* 140 */ "statement ::= T_INLINE_HTML",
 /* 141 */ "statement ::= expr SEMI",
 /* 142 */ "statement ::= T_UNSET LPAREN unset_variables RPAREN SEMI",
 /* 143 */ "statement ::= T_FOREACH LPAREN foreach_inner RPAREN foreach_statement",
 /* 144 */ "statement ::= T_DECLARE LPAREN const_list RPAREN declare_statement",
 /* 145 */ "statement ::= SEMI",
 /* 146 */ "statement ::= T_TRY LCURLY inner_statement_list RCURLY catch_list finally_statement",
 /* 147 */ "statement ::= T_THROW expr SEMI",
 /* 148 */ "statement ::= T_GOTO T_STRING SEMI",
 /* 149 */ "statement ::= T_STRING COLON",
 /* 150 */ "catch_list ::=",
 /* 151 */ "catch_list ::= catch_list T_CATCH LPAREN name T_VARIABLE RPAREN LCURLY inner_statement_list RCURLY",
 /* 152 */ "foreach_inner ::= expr T_AS foreach_variable",
 /* 153 */ "foreach_inner ::= expr T_AS foreach_variable T_DOUBLE_ARROW foreach_variable",
 /* 154 */ "finally_statement ::=",
 /* 155 */ "finally_statement ::= T_FINALLY LCURLY inner_statement_list RCURLY",
 /* 156 */ "unset_variables ::= unset_variable",
 /* 157 */ "unset_variables ::= unset_variables COMMA unset_variable",
 /* 158 */ "unset_variable ::= variable",
 /* 159 */ "function_declaration_statement ::= function returns_ref T_STRING LPAREN parameter_list RPAREN return_type backup_doc_comment LCURLY inner_statement_list RCURLY",
 /* 160 */ "is_reference ::=",
 /* 161 */ "is_reference ::= AMPERSAND",
 /* 162 */ "is_variadic ::=",
 /* 163 */ "is_variadic ::= T_ELLIPSIS",
 /* 164 */ "class_declaration_statement ::= class_modifiers T_STRING extends_from implements_list backup_doc_comment LCURLY class_statement_list RCURLY",
 /* 165 */ "class_modifiers ::= T_CLASS",
 /* 166 */ "class_modifiers ::= T_ABSTRACT T_CLASS",
 /* 167 */ "class_modifiers ::= T_FINAL T_CLASS",
 /* 168 */ "trait_declaration_statement ::= T_TRAIT T_STRING backup_doc_comment LCURLY class_statement_list RCURLY",
 /* 169 */ "interface_declaration_statement ::= T_INTERFACE T_STRING interface_extends_list backup_doc_comment LCURLY class_statement_list RCURLY",
 /* 170 */ "extends_from ::=",
 /* 171 */ "extends_from ::= T_EXTENDS name",
 /* 172 */ "interface_extends_list ::=",
 /* 173 */ "interface_extends_list ::= T_EXTENDS name_list",
 /* 174 */ "implements_list ::=",
 /* 175 */ "implements_list ::= T_IMPLEMENTS name_list",
 /* 176 */ "foreach_variable ::= variable",
 /* 177 */ "foreach_variable ::= AMPERSAND variable",
 /* 178 */ "foreach_variable ::= T_LIST LPAREN assignment_list RPAREN",
 /* 179 */ "for_statement ::= statement",
 /* 180 */ "for_statement ::= COLON inner_statement_list T_ENDFOR SEMI",
 /* 181 */ "foreach_statement ::= statement",
 /* 182 */ "foreach_statement ::= COLON inner_statement_list T_ENDFOREACH SEMI",
 /* 183 */ "declare_statement ::= statement",
 /* 184 */ "declare_statement ::= COLON inner_statement_list T_ENDDECLARE SEMI",
 /* 185 */ "switch_case_list ::= LCURLY case_list RCURLY",
 /* 186 */ "switch_case_list ::= LCURLY SEMI case_list RCURLY",
 /* 187 */ "switch_case_list ::= COLON case_list T_ENDSWITCH SEMI",
 /* 188 */ "switch_case_list ::= COLON SEMI case_list T_ENDSWITCH SEMI",
 /* 189 */ "case_list ::=",
 /* 190 */ "case_list ::= case_list T_CASE expr case_separator inner_statement_list",
 /* 191 */ "case_list ::= case_list T_DEFAULT case_separator inner_statement_list",
 /* 192 */ "case_separator ::= COLON",
 /* 193 */ "case_separator ::= SEMI",
 /* 194 */ "while_statement ::= statement",
 /* 195 */ "while_statement ::= COLON inner_statement_list T_ENDWHILE SEMI",
 /* 196 */ "if_stmt_without_else ::= T_IF LPAREN expr RPAREN statement",
 /* 197 */ "if_stmt_without_else ::= if_stmt_without_else T_ELSEIF LPAREN expr RPAREN statement",
 /* 198 */ "if_stmt ::= if_stmt_without_else",
 /* 199 */ "if_stmt ::= if_stmt_without_else T_ELSE statement",
 /* 200 */ "alt_if_stmt_without_else ::= T_IF LPAREN expr RPAREN COLON inner_statement_list",
 /* 201 */ "alt_if_stmt_without_else ::= alt_if_stmt_without_else T_ELSEIF LPAREN expr RPAREN COLON inner_statement_list",
 /* 202 */ "alt_if_stmt ::= alt_if_stmt_without_else T_ENDIF SEMI",
 /* 203 */ "alt_if_stmt ::= alt_if_stmt_without_else T_ELSE COLON inner_statement_list T_ENDIF SEMI",
 /* 204 */ "parameter_list ::= non_empty_parameter_list",
 /* 205 */ "parameter_list ::=",
 /* 206 */ "non_empty_parameter_list ::= parameter",
 /* 207 */ "non_empty_parameter_list ::= non_empty_parameter_list COMMA parameter",
 /* 208 */ "parameter ::= optional_type is_reference is_variadic T_VARIABLE",
 /* 209 */ "parameter ::= optional_type is_reference is_variadic T_VARIABLE EQUALS expr",
 /* 210 */ "optional_type ::=",
 /* 211 */ "optional_type ::= type",
 /* 212 */ "type ::= T_ARRAY",
 /* 213 */ "type ::= T_CALLABLE",
 /* 214 */ "type ::= name",
 /* 215 */ "return_type ::=",
 /* 216 */ "return_type ::= COLON type",
 /* 217 */ "argument_list ::= LPAREN RPAREN",
 /* 218 */ "argument_list ::= LPAREN non_empty_argument_list RPAREN",
 /* 219 */ "non_empty_argument_list ::= argument",
 /* 220 */ "non_empty_argument_list ::= non_empty_argument_list COMMA argument",
 /* 221 */ "argument ::= expr",
 /* 222 */ "argument ::= T_ELLIPSIS expr",
 /* 223 */ "global_var_list ::= global_var_list COMMA global_var",
 /* 224 */ "global_var_list ::= global_var",
 /* 225 */ "global_var ::= simple_variable",
 /* 226 */ "static_var_list ::= static_var_list COMMA static_var",
 /* 227 */ "static_var_list ::= static_var",
 /* 228 */ "static_var ::= T_VARIABLE",
 /* 229 */ "static_var ::= T_VARIABLE EQUALS expr",
 /* 230 */ "class_statement_list ::= class_statement_list class_statement",
 /* 231 */ "class_statement_list ::=",
 /* 232 */ "class_statement ::= variable_modifiers property_list SEMI",
 /* 233 */ "class_statement ::= method_modifiers T_CONST class_const_list SEMI",
 /* 234 */ "class_statement ::= T_USE name_list trait_adaptations",
 /* 235 */ "class_statement ::= method_modifiers function returns_ref identifier LPAREN parameter_list RPAREN return_type backup_doc_comment method_body",
 /* 236 */ "name_list ::= name",
 /* 237 */ "name_list ::= name_list COMMA name",
 /* 238 */ "trait_adaptations ::= SEMI",
 /* 239 */ "trait_adaptations ::= LCURLY RCURLY",
 /* 240 */ "trait_adaptations ::= LCURLY trait_adaptation_list RCURLY",
 /* 241 */ "trait_adaptation_list ::= trait_adaptation",
 /* 242 */ "trait_adaptation_list ::= trait_adaptation_list trait_adaptation",
 /* 243 */ "trait_adaptation ::= trait_precedence SEMI",
 /* 244 */ "trait_adaptation ::= trait_alias SEMI",
 /* 245 */ "trait_precedence ::= absolute_trait_method_reference T_INSTEADOF name_list",
 /* 246 */ "trait_alias ::= trait_method_reference T_AS T_STRING",
 /* 247 */ "trait_alias ::= trait_method_reference T_AS reserved_non_modifiers",
 /* 248 */ "trait_alias ::= trait_method_reference T_AS member_modifier identifier",
 /* 249 */ "trait_alias ::= trait_method_reference T_AS member_modifier",
 /* 250 */ "trait_method_reference ::= identifier",
 /* 251 */ "trait_method_reference ::= absolute_trait_method_reference",
 /* 252 */ "absolute_trait_method_reference ::= name T_PAAMAYIM_NEKUDOTAYIM identifier",
 /* 253 */ "method_body ::= SEMI",
 /* 254 */ "method_body ::= LCURLY inner_statement_list RCURLY",
 /* 255 */ "variable_modifiers ::= non_empty_member_modifiers",
 /* 256 */ "variable_modifiers ::= T_VAR",
 /* 257 */ "method_modifiers ::=",
 /* 258 */ "method_modifiers ::= non_empty_member_modifiers",
 /* 259 */ "non_empty_member_modifiers ::= member_modifier",
 /* 260 */ "non_empty_member_modifiers ::= non_empty_member_modifiers member_modifier",
 /* 261 */ "member_modifier ::= T_PUBLIC|T_PROTECTED|T_PRIVATE|T_STATIC|T_ABSTRACT|T_FINAL",
 /* 262 */ "property_list ::= property_list COMMA property",
 /* 263 */ "property_list ::= property",
 /* 264 */ "property ::= T_VARIABLE backup_doc_comment",
 /* 265 */ "property ::= T_VARIABLE EQUALS expr backup_doc_comment",
 /* 266 */ "class_const_list ::= class_const_list COMMA class_const_decl",
 /* 267 */ "class_const_list ::= class_const_decl",
 /* 268 */ "class_const_decl ::= identifier EQUALS expr backup_doc_comment",
 /* 269 */ "const_decl ::= T_STRING EQUALS expr backup_doc_comment",
 /* 270 */ "echo_expr_list ::= echo_expr_list COMMA echo_expr",
 /* 271 */ "echo_expr_list ::= echo_expr",
 /* 272 */ "echo_expr ::= expr",
 /* 273 */ "for_exprs ::=",
 /* 274 */ "for_exprs ::= non_empty_for_exprs",
 /* 275 */ "non_empty_for_exprs ::= non_empty_for_exprs COMMA expr",
 /* 276 */ "non_empty_for_exprs ::= expr",
 /* 277 */ "anonymous_class ::= T_CLASS ctor_arguments extends_from implements_list backup_doc_comment LCURLY class_statement_list RCURLY",
 /* 278 */ "new_expr ::= T_NEW class_name_reference ctor_arguments",
 /* 279 */ "new_expr ::= T_NEW anonymous_class",
 /* 280 */ "expr_without_variable ::= T_LIST LPAREN assignment_list RPAREN EQUALS expr",
 /* 281 */ "expr_without_variable ::= variable EQUALS expr",
 /* 282 */ "expr_without_variable ::= variable EQUALS AMPERSAND variable",
 /* 283 */ "expr_without_variable ::= T_CLONE expr",
 /* 284 */ "expr_without_variable ::= variable T_PLUS_EQUAL expr",
 /* 285 */ "expr_without_variable ::= variable T_MINUS_EQUAL expr",
 /* 286 */ "expr_without_variable ::= variable T_MUL_EQUAL expr",
 /* 287 */ "expr_without_variable ::= variable T_POW_EQUAL expr",
 /* 288 */ "expr_without_variable ::= variable T_DIV_EQUAL expr",
 /* 289 */ "expr_without_variable ::= variable T_CONCAT_EQUAL expr",
 /* 290 */ "expr_without_variable ::= variable T_MOD_EQUAL expr",
 /* 291 */ "expr_without_variable ::= variable T_AND_EQUAL expr",
 /* 292 */ "expr_without_variable ::= variable T_OR_EQUAL expr",
 /* 293 */ "expr_without_variable ::= variable T_XOR_EQUAL expr",
 /* 294 */ "expr_without_variable ::= variable T_SL_EQUAL expr",
 /* 295 */ "expr_without_variable ::= variable T_SR_EQUAL expr",
 /* 296 */ "expr_without_variable ::= variable T_INC",
 /* 297 */ "expr_without_variable ::= T_INC variable",
 /* 298 */ "expr_without_variable ::= variable T_DEC",
 /* 299 */ "expr_without_variable ::= T_DEC variable",
 /* 300 */ "expr_without_variable ::= expr T_BOOLEAN_OR expr",
 /* 301 */ "expr_without_variable ::= expr T_BOOLEAN_AND expr",
 /* 302 */ "expr_without_variable ::= expr T_LOGICAL_OR expr",
 /* 303 */ "expr_without_variable ::= expr T_LOGICAL_AND expr",
 /* 304 */ "expr_without_variable ::= expr T_LOGICAL_XOR expr",
 /* 305 */ "expr_without_variable ::= expr BAR expr",
 /* 306 */ "expr_without_variable ::= expr AMPERSAND expr",
 /* 307 */ "expr_without_variable ::= expr CARAT expr",
 /* 308 */ "expr_without_variable ::= expr DOT expr",
 /* 309 */ "expr_without_variable ::= expr PLUS expr",
 /* 310 */ "expr_without_variable ::= expr MINUS expr",
 /* 311 */ "expr_without_variable ::= expr TIMES expr",
 /* 312 */ "expr_without_variable ::= expr T_POW expr",
 /* 313 */ "expr_without_variable ::= expr DIVIDE expr",
 /* 314 */ "expr_without_variable ::= expr PERCENT expr",
 /* 315 */ "expr_without_variable ::= expr T_SL expr",
 /* 316 */ "expr_without_variable ::= expr T_SR expr",
 /* 317 */ "expr_without_variable ::= PLUS expr",
 /* 318 */ "expr_without_variable ::= PLUS expr T_INC",
 /* 319 */ "expr_without_variable ::= MINUS expr",
 /* 320 */ "expr_without_variable ::= MINUS expr T_INC",
 /* 321 */ "expr_without_variable ::= EXCLAM expr",
 /* 322 */ "expr_without_variable ::= TILDE expr",
 /* 323 */ "expr_without_variable ::= expr T_IS_IDENTICAL expr",
 /* 324 */ "expr_without_variable ::= expr T_IS_NOT_IDENTICAL expr",
 /* 325 */ "expr_without_variable ::= expr T_IS_EQUAL expr",
 /* 326 */ "expr_without_variable ::= expr T_IS_NOT_EQUAL expr",
 /* 327 */ "expr_without_variable ::= expr LESSTHAN expr",
 /* 328 */ "expr_without_variable ::= expr T_IS_SMALLER_OR_EQUAL expr",
 /* 329 */ "expr_without_variable ::= expr GREATERTHAN expr",
 /* 330 */ "expr_without_variable ::= expr T_IS_GREATER_OR_EQUAL expr",
 /* 331 */ "expr_without_variable ::= expr T_SPACESHIP expr",
 /* 332 */ "expr_without_variable ::= expr T_INSTANCEOF class_name_reference",
 /* 333 */ "expr_without_variable ::= LPAREN expr RPAREN",
 /* 334 */ "expr_without_variable ::= new_expr",
 /* 335 */ "expr_without_variable ::= expr QUESTION expr COLON expr",
 /* 336 */ "expr_without_variable ::= expr QUESTION COLON expr",
 /* 337 */ "expr_without_variable ::= expr T_COALESCE expr",
 /* 338 */ "expr_without_variable ::= internal_functions_in_yacc",
 /* 339 */ "expr_without_variable ::= T_INT_CAST expr",
 /* 340 */ "expr_without_variable ::= T_DOUBLE_CAST expr",
 /* 341 */ "expr_without_variable ::= T_STRING_CAST expr",
 /* 342 */ "expr_without_variable ::= T_ARRAY_CAST expr",
 /* 343 */ "expr_without_variable ::= T_OBJECT_CAST expr",
 /* 344 */ "expr_without_variable ::= T_BOOL_CAST expr",
 /* 345 */ "expr_without_variable ::= T_UNSET_CAST expr",
 /* 346 */ "expr_without_variable ::= T_EXIT exit_expr",
 /* 347 */ "expr_without_variable ::= AT expr",
 /* 348 */ "expr_without_variable ::= scalar",
 /* 349 */ "expr_without_variable ::= BACKQUOTE backticks_expr BACKQUOTE",
 /* 350 */ "expr_without_variable ::= T_PRINT expr",
 /* 351 */ "expr_without_variable ::= T_YIELD",
 /* 352 */ "expr_without_variable ::= T_YIELD expr",
 /* 353 */ "expr_without_variable ::= T_YIELD expr T_DOUBLE_ARROW expr",
 /* 354 */ "expr_without_variable ::= T_YIELD_FROM expr",
 /* 355 */ "expr_without_variable ::= function returns_ref LPAREN parameter_list RPAREN lexical_vars return_type backup_doc_comment LCURLY inner_statement_list RCURLY",
 /* 356 */ "expr_without_variable ::= T_STATIC function returns_ref LPAREN parameter_list RPAREN lexical_vars return_type backup_doc_comment LCURLY inner_statement_list RCURLY",
 /* 357 */ "function ::= T_FUNCTION",
 /* 358 */ "backup_doc_comment ::=",
 /* 359 */ "returns_ref ::=",
 /* 360 */ "returns_ref ::= AMPERSAND",
 /* 361 */ "lexical_vars ::=",
 /* 362 */ "lexical_vars ::= T_USE LPAREN lexical_var_list RPAREN",
 /* 363 */ "lexical_var_list ::= lexical_var_list COMMA lexical_var",
 /* 364 */ "lexical_var_list ::= lexical_var",
 /* 365 */ "lexical_var ::= T_VARIABLE",
 /* 366 */ "lexical_var ::= AMPERSAND T_VARIABLE",
 /* 367 */ "function_call ::= name argument_list",
 /* 368 */ "function_call ::= class_name T_PAAMAYIM_NEKUDOTAYIM member_name argument_list",
 /* 369 */ "function_call ::= variable_class_name T_PAAMAYIM_NEKUDOTAYIM member_name argument_list",
 /* 370 */ "function_call ::= callable_expr argument_list",
 /* 371 */ "class_name ::= T_STATIC",
 /* 372 */ "class_name ::= name",
 /* 373 */ "class_name_reference ::= class_name",
 /* 374 */ "class_name_reference ::= new_variable",
 /* 375 */ "exit_expr ::=",
 /* 376 */ "exit_expr ::= LPAREN optional_expr RPAREN",
 /* 377 */ "backticks_expr ::=",
 /* 378 */ "backticks_expr ::= T_ENCAPSED_AND_WHITESPACE",
 /* 379 */ "backticks_expr ::= encaps_list",
 /* 380 */ "ctor_arguments ::=",
 /* 381 */ "ctor_arguments ::= argument_list",
 /* 382 */ "dereferencable_scalar ::= T_ARRAY LPAREN array_pair_list RPAREN",
 /* 383 */ "dereferencable_scalar ::= LBRACKET array_pair_list RBRACKET",
 /* 384 */ "dereferencable_scalar ::= T_CONSTANT_ENCAPSED_STRING",
 /* 385 */ "scalar ::= T_LNUMBER",
 /* 386 */ "scalar ::= T_DNUMBER",
 /* 387 */ "scalar ::= T_LINE",
 /* 388 */ "scalar ::= T_FILE",
 /* 389 */ "scalar ::= T_DIR",
 /* 390 */ "scalar ::= T_TRAIT_C|T_METHOD_C|T_FUNC_C|T_NS_C|T_CLASS_C",
 /* 391 */ "scalar ::= T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC",
 /* 392 */ "scalar ::= T_START_HEREDOC T_END_HEREDOC",
 /* 393 */ "scalar ::= DOUBLEQUOTE encaps_list DOUBLEQUOTE",
 /* 394 */ "scalar ::= T_START_HEREDOC encaps_list T_END_HEREDOC",
 /* 395 */ "scalar ::= dereferencable_scalar",
 /* 396 */ "scalar ::= constant",
 /* 397 */ "constant ::= name",
 /* 398 */ "constant ::= class_name T_PAAMAYIM_NEKUDOTAYIM identifier",
 /* 399 */ "constant ::= variable_class_name T_PAAMAYIM_NEKUDOTAYIM identifier",
 /* 400 */ "possible_comma ::=",
 /* 401 */ "possible_comma ::= COMMA",
 /* 402 */ "expr ::= variable",
 /* 403 */ "expr ::= expr_without_variable",
 /* 404 */ "optional_expr ::=",
 /* 405 */ "optional_expr ::= expr",
 /* 406 */ "variable_class_name ::= dereferencable",
 /* 407 */ "dereferencable ::= variable",
 /* 408 */ "dereferencable ::= LPAREN expr RPAREN",
 /* 409 */ "dereferencable ::= dereferencable_scalar",
 /* 410 */ "callable_expr ::= callable_variable",
 /* 411 */ "callable_expr ::= LPAREN expr RPAREN",
 /* 412 */ "callable_expr ::= dereferencable_scalar",
 /* 413 */ "callable_variable ::= simple_variable",
 /* 414 */ "callable_variable ::= dereferencable LBRACKET optional_expr RBRACKET",
 /* 415 */ "callable_variable ::= constant LBRACKET optional_expr RBRACKET",
 /* 416 */ "callable_variable ::= dereferencable LCURLY expr RCURLY",
 /* 417 */ "callable_variable ::= dereferencable T_OBJECT_OPERATOR property_name argument_list",
 /* 418 */ "callable_variable ::= function_call",
 /* 419 */ "variable ::= callable_variable",
 /* 420 */ "variable ::= static_member",
 /* 421 */ "variable ::= dereferencable T_OBJECT_OPERATOR property_name",
 /* 422 */ "simple_variable ::= T_VARIABLE",
 /* 423 */ "simple_variable ::= DOLLAR LCURLY expr RCURLY",
 /* 424 */ "simple_variable ::= DOLLAR simple_variable",
 /* 425 */ "static_member ::= class_name T_PAAMAYIM_NEKUDOTAYIM simple_variable",
 /* 426 */ "static_member ::= variable_class_name T_PAAMAYIM_NEKUDOTAYIM simple_variable",
 /* 427 */ "new_variable ::= simple_variable",
 /* 428 */ "new_variable ::= new_variable LBRACKET optional_expr RBRACKET",
 /* 429 */ "new_variable ::= new_variable LCURLY expr RCURLY",
 /* 430 */ "new_variable ::= new_variable T_OBJECT_OPERATOR property_name",
 /* 431 */ "new_variable ::= class_name T_PAAMAYIM_NEKUDOTAYIM simple_variable",
 /* 432 */ "new_variable ::= new_variable T_PAAMAYIM_NEKUDOTAYIM simple_variable",
 /* 433 */ "member_name ::= identifier",
 /* 434 */ "member_name ::= LCURLY expr RCURLY",
 /* 435 */ "member_name ::= simple_variable",
 /* 436 */ "property_name ::= T_STRING",
 /* 437 */ "property_name ::= LCURLY expr RCURLY",
 /* 438 */ "property_name ::= simple_variable",
 /* 439 */ "assignment_list ::= assignment_list COMMA assignment_list_element",
 /* 440 */ "assignment_list ::= assignment_list_element",
 /* 441 */ "assignment_list_element ::= variable",
 /* 442 */ "assignment_list_element ::= T_LIST LPAREN assignment_list RPAREN",
 /* 443 */ "assignment_list_element ::=",
 /* 444 */ "array_pair_list ::=",
 /* 445 */ "array_pair_list ::= non_empty_array_pair_list possible_comma",
 /* 446 */ "non_empty_array_pair_list ::= non_empty_array_pair_list COMMA array_pair",
 /* 447 */ "non_empty_array_pair_list ::= array_pair",
 /* 448 */ "array_pair ::= expr T_DOUBLE_ARROW expr",
 /* 449 */ "array_pair ::= expr",
 /* 450 */ "array_pair ::= expr T_DOUBLE_ARROW AMPERSAND variable",
 /* 451 */ "array_pair ::= AMPERSAND variable",
 /* 452 */ "encaps_list ::= encaps_list encaps_var",
 /* 453 */ "encaps_list ::= encaps_list T_ENCAPSED_AND_WHITESPACE",
 /* 454 */ "encaps_list ::= encaps_var",
 /* 455 */ "encaps_list ::= T_ENCAPSED_AND_WHITESPACE encaps_var",
 /* 456 */ "encaps_var ::= T_VARIABLE",
 /* 457 */ "encaps_var ::= T_VARIABLE LBRACKET encaps_var_offset RBRACKET",
 /* 458 */ "encaps_var ::= T_VARIABLE T_OBJECT_OPERATOR T_STRING",
 /* 459 */ "encaps_var ::= T_DOLLAR_OPEN_CURLY_BRACES expr RCURLY",
 /* 460 */ "encaps_var ::= T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME RCURLY",
 /* 461 */ "encaps_var ::= T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME LBRACKET expr RBRACKET RCURLY",
 /* 462 */ "encaps_var ::= T_CURLY_OPEN variable RCURLY",
 /* 463 */ "encaps_var_offset ::= T_STRING",
 /* 464 */ "encaps_var_offset ::= T_NUM_STRING",
 /* 465 */ "encaps_var_offset ::= T_VARIABLE",
 /* 466 */ "internal_functions_in_yacc ::= T_ISSET LPAREN isset_variables RPAREN",
 /* 467 */ "internal_functions_in_yacc ::= T_EMPTY LPAREN expr RPAREN",
 /* 468 */ "internal_functions_in_yacc ::= T_INCLUDE expr",
 /* 469 */ "internal_functions_in_yacc ::= T_INCLUDE_ONCE expr",
 /* 470 */ "internal_functions_in_yacc ::= T_EVAL LPAREN expr RPAREN",
 /* 471 */ "internal_functions_in_yacc ::= T_REQUIRE expr",
 /* 472 */ "internal_functions_in_yacc ::= T_REQUIRE_ONCE expr",
 /* 473 */ "isset_variables ::= isset_variable",
 /* 474 */ "isset_variables ::= isset_variables COMMA isset_variable",
 /* 475 */ "isset_variable ::= expr",
    );

    /**
     * This function returns the symbolic name associated with a token
     * value.
     * @param int
     * @return string
     */
    function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count(self::$yyTokenName)) {
            return self::$yyTokenName[$tokenType];
        } else {
            return "Unknown";
        }
    }

    /**
     * The following function deletes the value associated with a
     * symbol.  The symbol can be either a terminal or nonterminal.
     * @param int the symbol code
     * @param mixed the symbol's value
     */
    static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
        /* Here is inserted the actions which take place when a
        ** terminal or non-terminal is destroyed.  This can happen
        ** when the symbol is popped from the stack during a
        ** reduce or during error processing or when a parser is 
        ** being destroyed before it is finished parsing.
        **
        ** Note: during a reduce, the only symbols destroyed are those
        ** which appear on the RHS of the rule, but which are not used
        ** inside the C code.
        */
            default:  break;   /* If no destructor action specified: do nothing */
        }
    }

    /**
     * Pop the parser's stack once.
     *
     * If there is a destructor routine associated with the token which
     * is popped from the stack, then call it.
     *
     * Return the major token number for the symbol popped.
     * @param PC_Stmt_yyParser
     * @return int
     */
    function yy_pop_parser_stack()
    {
        if (!count($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if (self::$yyTraceFILE && $this->yyidx >= 0) {
            fwrite(self::$yyTraceFILE,
                self::$yyTracePrompt . 'Popping ' . self::$yyTokenName[$yytos->major] .
                    "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;
        return $yymajor;
    }

    /**
     * Deallocate and destroy a parser.  Destructors are all called for
     * all stack elements before shutting the parser down.
     */
    function __destruct()
    {
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource(self::$yyTraceFILE)) {
            fclose(self::$yyTraceFILE);
        }
    }

    /**
     * Based on the current state and parser stack, get a list of all
     * possible lookahead tokens
     * @param int
     * @return array
     */
    function yy_get_expected_tokens($token)
    {
        $state = $this->yystack[$this->yyidx]->stateno;
        $expected = self::$yyExpectedTokens[$state];
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return $expected;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate])) {
                        $expected += self::$yyExpectedTokens[$nextstate];
                            if (in_array($token,
                                  self::$yyExpectedTokens[$nextstate], true)) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return array_unique($expected);
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new PC_Stmt_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        return array_unique($expected);
    }

    /**
     * Based on the parser state and current parser stack, determine whether
     * the lookahead token is possible.
     * 
     * The parser will convert the token value to an error token if not.  This
     * catches some unusual edge cases where the parser would fail.
     * @param int
     * @return bool
     */
    function yy_is_expected_token($token)
    {
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[$this->yyidx]->stateno;
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return true;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate]) &&
                          in_array($token, self::$yyExpectedTokens[$nextstate], true)) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        return true;
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new PC_Stmt_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;
        return true;
    }

    /**
     * Find the appropriate action for a parser given the terminal
     * look-ahead token iLookAhead.
     *
     * If the look-ahead token is YYNOCODE, then check to see if the action is
     * independent of the look-ahead.  If it is, return the action, otherwise
     * return YY_NO_ACTION.
     * @param int The look-ahead token
     */
    function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[$this->yyidx]->stateno;
     
        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[$stateno])) {
            // no shift actions
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_shift_ofst[$stateno];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                   && ($iFallback = self::$yyFallback[$iLookAhead]) != 0) {
                if (self::$yyTraceFILE) {
                    fwrite(self::$yyTraceFILE, self::$yyTracePrompt . "FALLBACK " .
                        self::$yyTokenName[$iLookAhead] . " => " .
                        self::$yyTokenName[$iFallback] . "\n");
                }
                return $this->yy_find_shift_action($iFallback);
            }
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    /**
     * Find the appropriate action for a parser given the non-terminal
     * look-ahead token $iLookAhead.
     *
     * If the look-ahead token is self::YYNOCODE, then check to see if the action is
     * independent of the look-ahead.  If it is, return the action, otherwise
     * return self::YY_NO_ACTION.
     * @param int Current state number
     * @param int The look-ahead token
     */
    function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[$stateno])) {
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_reduce_ofst[$stateno];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    /**
     * Perform a shift action.
     * @param int The new state to shift in
     * @param int The major token to shift in
     * @param mixed the minor token to shift in
     */
    function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if (self::$yyTraceFILE) {
                fprintf(self::$yyTraceFILE, "%sStack Overflow!\n", self::$yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
            /* Here code is inserted which will execute if the parser
            ** stack ever overflows */
            return;
        }
        $yytos = new PC_Stmt_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        array_push($this->yystack, $yytos);
        if (self::$yyTraceFILE && $this->yyidx > 0) {
            fprintf(self::$yyTraceFILE, "%sShift %d\n", self::$yyTracePrompt,
                $yyNewState);
            fprintf(self::$yyTraceFILE, "%sStack:", self::$yyTracePrompt);
            for ($i = 1; $i <= $this->yyidx; $i++) {
                fprintf(self::$yyTraceFILE, " %s",
                    self::$yyTokenName[$this->yystack[$i]->major]);
            }
            fwrite(self::$yyTraceFILE,"\n");
        }
    }

    /**
     * The following table contains information about every rule that
     * is used during the reduce.
     *
     * <pre>
     * array(
     *  array(
     *   int $lhs;         Symbol on the left-hand side of the rule
     *   int $nrhs;     Number of right-hand side symbols in the rule
     *  ),...
     * );
     * </pre>
     */
    static public $yyRuleInfo = array(
  array( 'lhs' => 159, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 162, 'rhs' => 1 ),
  array( 'lhs' => 162, 'rhs' => 1 ),
  array( 'lhs' => 162, 'rhs' => 1 ),
  array( 'lhs' => 162, 'rhs' => 1 ),
  array( 'lhs' => 162, 'rhs' => 1 ),
  array( 'lhs' => 162, 'rhs' => 1 ),
  array( 'lhs' => 162, 'rhs' => 1 ),
  array( 'lhs' => 163, 'rhs' => 1 ),
  array( 'lhs' => 163, 'rhs' => 1 ),
  array( 'lhs' => 160, 'rhs' => 2 ),
  array( 'lhs' => 160, 'rhs' => 0 ),
  array( 'lhs' => 165, 'rhs' => 1 ),
  array( 'lhs' => 165, 'rhs' => 3 ),
  array( 'lhs' => 166, 'rhs' => 1 ),
  array( 'lhs' => 166, 'rhs' => 3 ),
  array( 'lhs' => 166, 'rhs' => 2 ),
  array( 'lhs' => 164, 'rhs' => 1 ),
  array( 'lhs' => 164, 'rhs' => 1 ),
  array( 'lhs' => 164, 'rhs' => 1 ),
  array( 'lhs' => 164, 'rhs' => 1 ),
  array( 'lhs' => 164, 'rhs' => 1 ),
  array( 'lhs' => 164, 'rhs' => 4 ),
  array( 'lhs' => 164, 'rhs' => 3 ),
  array( 'lhs' => 164, 'rhs' => 5 ),
  array( 'lhs' => 164, 'rhs' => 4 ),
  array( 'lhs' => 164, 'rhs' => 3 ),
  array( 'lhs' => 164, 'rhs' => 4 ),
  array( 'lhs' => 164, 'rhs' => 3 ),
  array( 'lhs' => 164, 'rhs' => 4 ),
  array( 'lhs' => 164, 'rhs' => 3 ),
  array( 'lhs' => 173, 'rhs' => 1 ),
  array( 'lhs' => 173, 'rhs' => 1 ),
  array( 'lhs' => 174, 'rhs' => 5 ),
  array( 'lhs' => 174, 'rhs' => 6 ),
  array( 'lhs' => 172, 'rhs' => 5 ),
  array( 'lhs' => 172, 'rhs' => 6 ),
  array( 'lhs' => 178, 'rhs' => 3 ),
  array( 'lhs' => 178, 'rhs' => 1 ),
  array( 'lhs' => 177, 'rhs' => 3 ),
  array( 'lhs' => 177, 'rhs' => 1 ),
  array( 'lhs' => 175, 'rhs' => 3 ),
  array( 'lhs' => 175, 'rhs' => 1 ),
  array( 'lhs' => 179, 'rhs' => 1 ),
  array( 'lhs' => 179, 'rhs' => 2 ),
  array( 'lhs' => 180, 'rhs' => 1 ),
  array( 'lhs' => 180, 'rhs' => 3 ),
  array( 'lhs' => 181, 'rhs' => 1 ),
  array( 'lhs' => 181, 'rhs' => 2 ),
  array( 'lhs' => 176, 'rhs' => 3 ),
  array( 'lhs' => 176, 'rhs' => 1 ),
  array( 'lhs' => 183, 'rhs' => 2 ),
  array( 'lhs' => 183, 'rhs' => 0 ),
  array( 'lhs' => 184, 'rhs' => 1 ),
  array( 'lhs' => 184, 'rhs' => 1 ),
  array( 'lhs' => 184, 'rhs' => 1 ),
  array( 'lhs' => 184, 'rhs' => 1 ),
  array( 'lhs' => 184, 'rhs' => 1 ),
  array( 'lhs' => 184, 'rhs' => 4 ),
  array( 'lhs' => 167, 'rhs' => 3 ),
  array( 'lhs' => 167, 'rhs' => 1 ),
  array( 'lhs' => 167, 'rhs' => 1 ),
  array( 'lhs' => 167, 'rhs' => 5 ),
  array( 'lhs' => 167, 'rhs' => 7 ),
  array( 'lhs' => 167, 'rhs' => 9 ),
  array( 'lhs' => 167, 'rhs' => 5 ),
  array( 'lhs' => 167, 'rhs' => 3 ),
  array( 'lhs' => 167, 'rhs' => 3 ),
  array( 'lhs' => 167, 'rhs' => 3 ),
  array( 'lhs' => 167, 'rhs' => 3 ),
  array( 'lhs' => 167, 'rhs' => 3 ),
  array( 'lhs' => 167, 'rhs' => 3 ),
  array( 'lhs' => 167, 'rhs' => 1 ),
  array( 'lhs' => 167, 'rhs' => 2 ),
  array( 'lhs' => 167, 'rhs' => 5 ),
  array( 'lhs' => 167, 'rhs' => 5 ),
  array( 'lhs' => 167, 'rhs' => 5 ),
  array( 'lhs' => 167, 'rhs' => 1 ),
  array( 'lhs' => 167, 'rhs' => 6 ),
  array( 'lhs' => 167, 'rhs' => 3 ),
  array( 'lhs' => 167, 'rhs' => 3 ),
  array( 'lhs' => 167, 'rhs' => 2 ),
  array( 'lhs' => 200, 'rhs' => 0 ),
  array( 'lhs' => 200, 'rhs' => 9 ),
  array( 'lhs' => 197, 'rhs' => 3 ),
  array( 'lhs' => 197, 'rhs' => 5 ),
  array( 'lhs' => 201, 'rhs' => 0 ),
  array( 'lhs' => 201, 'rhs' => 4 ),
  array( 'lhs' => 196, 'rhs' => 1 ),
  array( 'lhs' => 196, 'rhs' => 3 ),
  array( 'lhs' => 203, 'rhs' => 1 ),
  array( 'lhs' => 168, 'rhs' => 11 ),
  array( 'lhs' => 210, 'rhs' => 0 ),
  array( 'lhs' => 210, 'rhs' => 1 ),
  array( 'lhs' => 211, 'rhs' => 0 ),
  array( 'lhs' => 211, 'rhs' => 1 ),
  array( 'lhs' => 169, 'rhs' => 8 ),
  array( 'lhs' => 212, 'rhs' => 1 ),
  array( 'lhs' => 212, 'rhs' => 2 ),
  array( 'lhs' => 212, 'rhs' => 2 ),
  array( 'lhs' => 170, 'rhs' => 6 ),
  array( 'lhs' => 171, 'rhs' => 7 ),
  array( 'lhs' => 213, 'rhs' => 0 ),
  array( 'lhs' => 213, 'rhs' => 2 ),
  array( 'lhs' => 216, 'rhs' => 0 ),
  array( 'lhs' => 216, 'rhs' => 2 ),
  array( 'lhs' => 214, 'rhs' => 0 ),
  array( 'lhs' => 214, 'rhs' => 2 ),
  array( 'lhs' => 202, 'rhs' => 1 ),
  array( 'lhs' => 202, 'rhs' => 2 ),
  array( 'lhs' => 202, 'rhs' => 4 ),
  array( 'lhs' => 190, 'rhs' => 1 ),
  array( 'lhs' => 190, 'rhs' => 4 ),
  array( 'lhs' => 198, 'rhs' => 1 ),
  array( 'lhs' => 198, 'rhs' => 4 ),
  array( 'lhs' => 199, 'rhs' => 1 ),
  array( 'lhs' => 199, 'rhs' => 4 ),
  array( 'lhs' => 191, 'rhs' => 3 ),
  array( 'lhs' => 191, 'rhs' => 4 ),
  array( 'lhs' => 191, 'rhs' => 4 ),
  array( 'lhs' => 191, 'rhs' => 5 ),
  array( 'lhs' => 219, 'rhs' => 0 ),
  array( 'lhs' => 219, 'rhs' => 5 ),
  array( 'lhs' => 219, 'rhs' => 4 ),
  array( 'lhs' => 220, 'rhs' => 1 ),
  array( 'lhs' => 220, 'rhs' => 1 ),
  array( 'lhs' => 188, 'rhs' => 1 ),
  array( 'lhs' => 188, 'rhs' => 4 ),
  array( 'lhs' => 221, 'rhs' => 5 ),
  array( 'lhs' => 221, 'rhs' => 6 ),
  array( 'lhs' => 185, 'rhs' => 1 ),
  array( 'lhs' => 185, 'rhs' => 3 ),
  array( 'lhs' => 222, 'rhs' => 6 ),
  array( 'lhs' => 222, 'rhs' => 7 ),
  array( 'lhs' => 186, 'rhs' => 3 ),
  array( 'lhs' => 186, 'rhs' => 6 ),
  array( 'lhs' => 207, 'rhs' => 1 ),
  array( 'lhs' => 207, 'rhs' => 0 ),
  array( 'lhs' => 223, 'rhs' => 1 ),
  array( 'lhs' => 223, 'rhs' => 3 ),
  array( 'lhs' => 224, 'rhs' => 4 ),
  array( 'lhs' => 224, 'rhs' => 6 ),
  array( 'lhs' => 225, 'rhs' => 0 ),
  array( 'lhs' => 225, 'rhs' => 1 ),
  array( 'lhs' => 226, 'rhs' => 1 ),
  array( 'lhs' => 226, 'rhs' => 1 ),
  array( 'lhs' => 226, 'rhs' => 1 ),
  array( 'lhs' => 208, 'rhs' => 0 ),
  array( 'lhs' => 208, 'rhs' => 2 ),
  array( 'lhs' => 227, 'rhs' => 2 ),
  array( 'lhs' => 227, 'rhs' => 3 ),
  array( 'lhs' => 228, 'rhs' => 1 ),
  array( 'lhs' => 228, 'rhs' => 3 ),
  array( 'lhs' => 229, 'rhs' => 1 ),
  array( 'lhs' => 229, 'rhs' => 2 ),
  array( 'lhs' => 193, 'rhs' => 3 ),
  array( 'lhs' => 193, 'rhs' => 1 ),
  array( 'lhs' => 230, 'rhs' => 1 ),
  array( 'lhs' => 194, 'rhs' => 3 ),
  array( 'lhs' => 194, 'rhs' => 1 ),
  array( 'lhs' => 232, 'rhs' => 1 ),
  array( 'lhs' => 232, 'rhs' => 3 ),
  array( 'lhs' => 215, 'rhs' => 2 ),
  array( 'lhs' => 215, 'rhs' => 0 ),
  array( 'lhs' => 233, 'rhs' => 3 ),
  array( 'lhs' => 233, 'rhs' => 4 ),
  array( 'lhs' => 233, 'rhs' => 3 ),
  array( 'lhs' => 233, 'rhs' => 10 ),
  array( 'lhs' => 217, 'rhs' => 1 ),
  array( 'lhs' => 217, 'rhs' => 3 ),
  array( 'lhs' => 238, 'rhs' => 1 ),
  array( 'lhs' => 238, 'rhs' => 2 ),
  array( 'lhs' => 238, 'rhs' => 3 ),
  array( 'lhs' => 240, 'rhs' => 1 ),
  array( 'lhs' => 240, 'rhs' => 2 ),
  array( 'lhs' => 241, 'rhs' => 2 ),
  array( 'lhs' => 241, 'rhs' => 2 ),
  array( 'lhs' => 242, 'rhs' => 3 ),
  array( 'lhs' => 243, 'rhs' => 3 ),
  array( 'lhs' => 243, 'rhs' => 3 ),
  array( 'lhs' => 243, 'rhs' => 4 ),
  array( 'lhs' => 243, 'rhs' => 3 ),
  array( 'lhs' => 245, 'rhs' => 1 ),
  array( 'lhs' => 245, 'rhs' => 1 ),
  array( 'lhs' => 244, 'rhs' => 3 ),
  array( 'lhs' => 239, 'rhs' => 1 ),
  array( 'lhs' => 239, 'rhs' => 3 ),
  array( 'lhs' => 234, 'rhs' => 1 ),
  array( 'lhs' => 234, 'rhs' => 1 ),
  array( 'lhs' => 236, 'rhs' => 0 ),
  array( 'lhs' => 236, 'rhs' => 1 ),
  array( 'lhs' => 247, 'rhs' => 1 ),
  array( 'lhs' => 247, 'rhs' => 2 ),
  array( 'lhs' => 246, 'rhs' => 1 ),
  array( 'lhs' => 235, 'rhs' => 3 ),
  array( 'lhs' => 235, 'rhs' => 1 ),
  array( 'lhs' => 248, 'rhs' => 2 ),
  array( 'lhs' => 248, 'rhs' => 4 ),
  array( 'lhs' => 237, 'rhs' => 3 ),
  array( 'lhs' => 237, 'rhs' => 1 ),
  array( 'lhs' => 249, 'rhs' => 4 ),
  array( 'lhs' => 182, 'rhs' => 4 ),
  array( 'lhs' => 195, 'rhs' => 3 ),
  array( 'lhs' => 195, 'rhs' => 1 ),
  array( 'lhs' => 250, 'rhs' => 1 ),
  array( 'lhs' => 189, 'rhs' => 0 ),
  array( 'lhs' => 189, 'rhs' => 1 ),
  array( 'lhs' => 251, 'rhs' => 3 ),
  array( 'lhs' => 251, 'rhs' => 1 ),
  array( 'lhs' => 252, 'rhs' => 8 ),
  array( 'lhs' => 254, 'rhs' => 3 ),
  array( 'lhs' => 254, 'rhs' => 2 ),
  array( 'lhs' => 256, 'rhs' => 6 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 4 ),
  array( 'lhs' => 256, 'rhs' => 2 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 2 ),
  array( 'lhs' => 256, 'rhs' => 2 ),
  array( 'lhs' => 256, 'rhs' => 2 ),
  array( 'lhs' => 256, 'rhs' => 2 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 2 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 2 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 2 ),
  array( 'lhs' => 256, 'rhs' => 2 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 1 ),
  array( 'lhs' => 256, 'rhs' => 5 ),
  array( 'lhs' => 256, 'rhs' => 4 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 1 ),
  array( 'lhs' => 256, 'rhs' => 2 ),
  array( 'lhs' => 256, 'rhs' => 2 ),
  array( 'lhs' => 256, 'rhs' => 2 ),
  array( 'lhs' => 256, 'rhs' => 2 ),
  array( 'lhs' => 256, 'rhs' => 2 ),
  array( 'lhs' => 256, 'rhs' => 2 ),
  array( 'lhs' => 256, 'rhs' => 2 ),
  array( 'lhs' => 256, 'rhs' => 2 ),
  array( 'lhs' => 256, 'rhs' => 2 ),
  array( 'lhs' => 256, 'rhs' => 1 ),
  array( 'lhs' => 256, 'rhs' => 3 ),
  array( 'lhs' => 256, 'rhs' => 2 ),
  array( 'lhs' => 256, 'rhs' => 1 ),
  array( 'lhs' => 256, 'rhs' => 2 ),
  array( 'lhs' => 256, 'rhs' => 4 ),
  array( 'lhs' => 256, 'rhs' => 2 ),
  array( 'lhs' => 256, 'rhs' => 11 ),
  array( 'lhs' => 256, 'rhs' => 12 ),
  array( 'lhs' => 205, 'rhs' => 1 ),
  array( 'lhs' => 209, 'rhs' => 0 ),
  array( 'lhs' => 206, 'rhs' => 0 ),
  array( 'lhs' => 206, 'rhs' => 1 ),
  array( 'lhs' => 261, 'rhs' => 0 ),
  array( 'lhs' => 261, 'rhs' => 4 ),
  array( 'lhs' => 262, 'rhs' => 3 ),
  array( 'lhs' => 262, 'rhs' => 1 ),
  array( 'lhs' => 263, 'rhs' => 1 ),
  array( 'lhs' => 263, 'rhs' => 2 ),
  array( 'lhs' => 264, 'rhs' => 2 ),
  array( 'lhs' => 264, 'rhs' => 4 ),
  array( 'lhs' => 264, 'rhs' => 4 ),
  array( 'lhs' => 264, 'rhs' => 2 ),
  array( 'lhs' => 265, 'rhs' => 1 ),
  array( 'lhs' => 265, 'rhs' => 1 ),
  array( 'lhs' => 255, 'rhs' => 1 ),
  array( 'lhs' => 255, 'rhs' => 1 ),
  array( 'lhs' => 258, 'rhs' => 0 ),
  array( 'lhs' => 258, 'rhs' => 3 ),
  array( 'lhs' => 260, 'rhs' => 0 ),
  array( 'lhs' => 260, 'rhs' => 1 ),
  array( 'lhs' => 260, 'rhs' => 1 ),
  array( 'lhs' => 253, 'rhs' => 0 ),
  array( 'lhs' => 253, 'rhs' => 1 ),
  array( 'lhs' => 271, 'rhs' => 4 ),
  array( 'lhs' => 271, 'rhs' => 3 ),
  array( 'lhs' => 271, 'rhs' => 1 ),
  array( 'lhs' => 259, 'rhs' => 1 ),
  array( 'lhs' => 259, 'rhs' => 1 ),
  array( 'lhs' => 259, 'rhs' => 1 ),
  array( 'lhs' => 259, 'rhs' => 1 ),
  array( 'lhs' => 259, 'rhs' => 1 ),
  array( 'lhs' => 259, 'rhs' => 1 ),
  array( 'lhs' => 259, 'rhs' => 3 ),
  array( 'lhs' => 259, 'rhs' => 2 ),
  array( 'lhs' => 259, 'rhs' => 3 ),
  array( 'lhs' => 259, 'rhs' => 3 ),
  array( 'lhs' => 259, 'rhs' => 1 ),
  array( 'lhs' => 259, 'rhs' => 1 ),
  array( 'lhs' => 273, 'rhs' => 1 ),
  array( 'lhs' => 273, 'rhs' => 3 ),
  array( 'lhs' => 273, 'rhs' => 3 ),
  array( 'lhs' => 274, 'rhs' => 0 ),
  array( 'lhs' => 274, 'rhs' => 1 ),
  array( 'lhs' => 187, 'rhs' => 1 ),
  array( 'lhs' => 187, 'rhs' => 1 ),
  array( 'lhs' => 192, 'rhs' => 0 ),
  array( 'lhs' => 192, 'rhs' => 1 ),
  array( 'lhs' => 267, 'rhs' => 1 ),
  array( 'lhs' => 275, 'rhs' => 1 ),
  array( 'lhs' => 275, 'rhs' => 3 ),
  array( 'lhs' => 275, 'rhs' => 1 ),
  array( 'lhs' => 268, 'rhs' => 1 ),
  array( 'lhs' => 268, 'rhs' => 3 ),
  array( 'lhs' => 268, 'rhs' => 1 ),
  array( 'lhs' => 276, 'rhs' => 1 ),
  array( 'lhs' => 276, 'rhs' => 4 ),
  array( 'lhs' => 276, 'rhs' => 4 ),
  array( 'lhs' => 276, 'rhs' => 4 ),
  array( 'lhs' => 276, 'rhs' => 4 ),
  array( 'lhs' => 276, 'rhs' => 1 ),
  array( 'lhs' => 204, 'rhs' => 1 ),
  array( 'lhs' => 204, 'rhs' => 1 ),
  array( 'lhs' => 204, 'rhs' => 3 ),
  array( 'lhs' => 231, 'rhs' => 1 ),
  array( 'lhs' => 231, 'rhs' => 4 ),
  array( 'lhs' => 231, 'rhs' => 2 ),
  array( 'lhs' => 278, 'rhs' => 3 ),
  array( 'lhs' => 278, 'rhs' => 3 ),
  array( 'lhs' => 269, 'rhs' => 1 ),
  array( 'lhs' => 269, 'rhs' => 4 ),
  array( 'lhs' => 269, 'rhs' => 4 ),
  array( 'lhs' => 269, 'rhs' => 3 ),
  array( 'lhs' => 269, 'rhs' => 3 ),
  array( 'lhs' => 269, 'rhs' => 3 ),
  array( 'lhs' => 266, 'rhs' => 1 ),
  array( 'lhs' => 266, 'rhs' => 3 ),
  array( 'lhs' => 266, 'rhs' => 1 ),
  array( 'lhs' => 277, 'rhs' => 1 ),
  array( 'lhs' => 277, 'rhs' => 3 ),
  array( 'lhs' => 277, 'rhs' => 1 ),
  array( 'lhs' => 218, 'rhs' => 3 ),
  array( 'lhs' => 218, 'rhs' => 1 ),
  array( 'lhs' => 279, 'rhs' => 1 ),
  array( 'lhs' => 279, 'rhs' => 4 ),
  array( 'lhs' => 279, 'rhs' => 0 ),
  array( 'lhs' => 272, 'rhs' => 0 ),
  array( 'lhs' => 272, 'rhs' => 2 ),
  array( 'lhs' => 280, 'rhs' => 3 ),
  array( 'lhs' => 280, 'rhs' => 1 ),
  array( 'lhs' => 281, 'rhs' => 3 ),
  array( 'lhs' => 281, 'rhs' => 1 ),
  array( 'lhs' => 281, 'rhs' => 4 ),
  array( 'lhs' => 281, 'rhs' => 2 ),
  array( 'lhs' => 270, 'rhs' => 2 ),
  array( 'lhs' => 270, 'rhs' => 2 ),
  array( 'lhs' => 270, 'rhs' => 1 ),
  array( 'lhs' => 270, 'rhs' => 2 ),
  array( 'lhs' => 282, 'rhs' => 1 ),
  array( 'lhs' => 282, 'rhs' => 4 ),
  array( 'lhs' => 282, 'rhs' => 3 ),
  array( 'lhs' => 282, 'rhs' => 3 ),
  array( 'lhs' => 282, 'rhs' => 3 ),
  array( 'lhs' => 282, 'rhs' => 6 ),
  array( 'lhs' => 282, 'rhs' => 3 ),
  array( 'lhs' => 283, 'rhs' => 1 ),
  array( 'lhs' => 283, 'rhs' => 1 ),
  array( 'lhs' => 283, 'rhs' => 1 ),
  array( 'lhs' => 257, 'rhs' => 4 ),
  array( 'lhs' => 257, 'rhs' => 4 ),
  array( 'lhs' => 257, 'rhs' => 2 ),
  array( 'lhs' => 257, 'rhs' => 2 ),
  array( 'lhs' => 257, 'rhs' => 4 ),
  array( 'lhs' => 257, 'rhs' => 2 ),
  array( 'lhs' => 257, 'rhs' => 2 ),
  array( 'lhs' => 284, 'rhs' => 1 ),
  array( 'lhs' => 284, 'rhs' => 3 ),
  array( 'lhs' => 285, 'rhs' => 1 ),
    );

    /**
     * The following table contains a mapping of reduce action to method name
     * that handles the reduction.
     * 
     * If a rule is not set, it has no handler.
     */
    static public $yyReduceMap = array(
        76 => 76,
        80 => 76,
        82 => 76,
        83 => 76,
        84 => 76,
        176 => 76,
        177 => 76,
        204 => 76,
        211 => 76,
        221 => 76,
        255 => 76,
        258 => 76,
        334 => 76,
        347 => 76,
        348 => 76,
        372 => 76,
        373 => 76,
        381 => 76,
        395 => 76,
        396 => 76,
        403 => 76,
        405 => 76,
        407 => 76,
        409 => 76,
        412 => 76,
        413 => 76,
        419 => 76,
        420 => 76,
        441 => 76,
        81 => 81,
        128 => 128,
        129 => 128,
        133 => 128,
        146 => 128,
        130 => 130,
        131 => 130,
        132 => 130,
        143 => 130,
        136 => 136,
        147 => 147,
        151 => 151,
        152 => 152,
        153 => 153,
        159 => 159,
        235 => 159,
        164 => 164,
        169 => 164,
        205 => 205,
        217 => 205,
        257 => 205,
        380 => 205,
        206 => 206,
        207 => 207,
        208 => 208,
        209 => 209,
        210 => 210,
        212 => 212,
        444 => 212,
        213 => 213,
        214 => 214,
        218 => 218,
        382 => 218,
        383 => 218,
        408 => 218,
        411 => 218,
        434 => 218,
        442 => 218,
        445 => 218,
        219 => 219,
        259 => 219,
        263 => 219,
        267 => 219,
        220 => 220,
        225 => 225,
        256 => 256,
        260 => 260,
        261 => 261,
        262 => 262,
        266 => 262,
        264 => 264,
        265 => 265,
        268 => 268,
        277 => 277,
        278 => 278,
        280 => 280,
        281 => 281,
        282 => 282,
        283 => 283,
        284 => 284,
        285 => 285,
        286 => 286,
        287 => 287,
        288 => 288,
        289 => 289,
        290 => 290,
        291 => 291,
        292 => 292,
        293 => 293,
        294 => 294,
        295 => 295,
        296 => 296,
        297 => 297,
        298 => 298,
        299 => 299,
        300 => 300,
        302 => 300,
        301 => 301,
        303 => 301,
        304 => 304,
        305 => 305,
        306 => 306,
        307 => 307,
        308 => 308,
        309 => 309,
        310 => 310,
        311 => 311,
        312 => 312,
        313 => 313,
        314 => 314,
        315 => 315,
        316 => 316,
        317 => 317,
        319 => 319,
        321 => 321,
        322 => 322,
        323 => 323,
        324 => 324,
        325 => 325,
        326 => 326,
        327 => 327,
        328 => 328,
        329 => 329,
        330 => 330,
        331 => 331,
        332 => 332,
        333 => 333,
        335 => 335,
        338 => 338,
        339 => 339,
        340 => 340,
        341 => 341,
        342 => 342,
        343 => 343,
        344 => 344,
        345 => 345,
        346 => 346,
        350 => 346,
        404 => 346,
        443 => 346,
        349 => 349,
        355 => 355,
        356 => 355,
        363 => 363,
        364 => 363,
        365 => 365,
        366 => 365,
        367 => 367,
        368 => 368,
        369 => 368,
        370 => 370,
        371 => 371,
        384 => 384,
        385 => 385,
        386 => 386,
        387 => 387,
        388 => 388,
        389 => 389,
        390 => 390,
        391 => 391,
        393 => 391,
        394 => 391,
        397 => 397,
        398 => 398,
        399 => 399,
        402 => 402,
        410 => 402,
        435 => 402,
        414 => 414,
        417 => 417,
        418 => 418,
        421 => 421,
        422 => 422,
        423 => 423,
        424 => 424,
        425 => 425,
        426 => 425,
        433 => 433,
        436 => 436,
        437 => 437,
        438 => 438,
        439 => 439,
        440 => 440,
        446 => 446,
        447 => 447,
        448 => 448,
        449 => 449,
    );
    /* Beginning here are the reduction cases.  A typical example
    ** follows:
    **  #line <lineno> <grammarfile>
    **   function yy_r0($yymsp){ ... }           // User supplied code
    **  #line <lineno> <thisfile>
    */
#line 188 "src/engine/stmtparser.y"
    function yy_r76(){ $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;     }
#line 6039 "src/engine/stmtparser.php"
#line 195 "src/engine/stmtparser.y"
    function yy_r81(){
	// TODO
	$this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 6045 "src/engine/stmtparser.php"
#line 260 "src/engine/stmtparser.y"
    function yy_r128(){
    $this->state->end_cond();
    }
#line 6050 "src/engine/stmtparser.php"
#line 266 "src/engine/stmtparser.y"
    function yy_r130(){
    $this->state->end_loop();
    }
#line 6055 "src/engine/stmtparser.php"
#line 280 "src/engine/stmtparser.y"
    function yy_r136(){
    $this->state->add_return($this->yystack[$this->yyidx + -1]->minor);
    }
#line 6060 "src/engine/stmtparser.php"
#line 297 "src/engine/stmtparser.y"
    function yy_r147(){
    $this->state->add_throw($this->yystack[$this->yyidx + -1]->minor);
    }
#line 6065 "src/engine/stmtparser.php"
#line 305 "src/engine/stmtparser.y"
    function yy_r151(){
		$value = PC_Obj_MultiType::create_object($this->yystack[$this->yyidx + -5]->minor);
		$this->state->set_var(new PC_Obj_Variable(substr($this->yystack[$this->yyidx + -4]->minor,1)),$value);
    }
#line 6071 "src/engine/stmtparser.php"
#line 310 "src/engine/stmtparser.y"
    function yy_r152(){
		$this->state->set_foreach_var($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor,null);
    }
#line 6076 "src/engine/stmtparser.php"
#line 313 "src/engine/stmtparser.y"
    function yy_r153(){
		$this->state->set_foreach_var($this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6081 "src/engine/stmtparser.php"
#line 328 "src/engine/stmtparser.y"
    function yy_r159(){
		$this->state->end_function();
    }
#line 6086 "src/engine/stmtparser.php"
#line 340 "src/engine/stmtparser.y"
    function yy_r164(){
  	$this->state->end_class();
    }
#line 6091 "src/engine/stmtparser.php"
#line 405 "src/engine/stmtparser.y"
    function yy_r205(){ $this->_retvalue = array();     }
#line 6094 "src/engine/stmtparser.php"
#line 407 "src/engine/stmtparser.y"
    function yy_r206(){
	$this->_retvalue = array();
	$this->_retvalue[] = $this->yystack[$this->yyidx + 0]->minor;
  $this->state->set_func_param($this->yystack[$this->yyidx + 0]->minor);
    }
#line 6101 "src/engine/stmtparser.php"
#line 412 "src/engine/stmtparser.y"
    function yy_r207(){
	$this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;
	$this->_retvalue[] = $this->yystack[$this->yyidx + 0]->minor;
  $this->state->set_func_param($this->yystack[$this->yyidx + 0]->minor);
    }
#line 6108 "src/engine/stmtparser.php"
#line 418 "src/engine/stmtparser.y"
    function yy_r208(){
	$this->_retvalue = new PC_Obj_Parameter(substr($this->yystack[$this->yyidx + 0]->minor,1));
	$this->_retvalue->set_mtype($this->yystack[$this->yyidx + -3]->minor);
    }
#line 6114 "src/engine/stmtparser.php"
#line 422 "src/engine/stmtparser.y"
    function yy_r209(){
	$this->_retvalue = new PC_Obj_Parameter(substr($this->yystack[$this->yyidx + -2]->minor,1));
	if($this->yystack[$this->yyidx + 0]->minor)
		$this->yystack[$this->yyidx + 0]->minor->clear_values(); // value is not interesting here
	if($this->yystack[$this->yyidx + 0]->minor && $this->yystack[$this->yyidx + -5]->minor->is_unknown())
		$this->_retvalue->set_mtype($this->yystack[$this->yyidx + 0]->minor);
	else
		$this->_retvalue->set_mtype($this->yystack[$this->yyidx + -5]->minor);
	$this->_retvalue->set_optional(true);
    }
#line 6126 "src/engine/stmtparser.php"
#line 433 "src/engine/stmtparser.y"
    function yy_r210(){ $this->_retvalue = new PC_Obj_MultiType();     }
#line 6129 "src/engine/stmtparser.php"
#line 436 "src/engine/stmtparser.y"
    function yy_r212(){ $this->_retvalue = PC_Obj_MultiType::create_array();     }
#line 6132 "src/engine/stmtparser.php"
#line 437 "src/engine/stmtparser.y"
    function yy_r213(){ $this->_retvalue = PC_Obj_MultiType::create_callable();     }
#line 6135 "src/engine/stmtparser.php"
#line 438 "src/engine/stmtparser.y"
    function yy_r214(){ $this->_retvalue = PC_Obj_MultiType::create_object($this->yystack[$this->yyidx + 0]->minor);     }
#line 6138 "src/engine/stmtparser.php"
#line 444 "src/engine/stmtparser.y"
    function yy_r218(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;     }
#line 6141 "src/engine/stmtparser.php"
#line 446 "src/engine/stmtparser.y"
    function yy_r219(){ $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);     }
#line 6144 "src/engine/stmtparser.php"
#line 447 "src/engine/stmtparser.y"
    function yy_r220(){
	$this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;
	$this->_retvalue[] = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 6150 "src/engine/stmtparser.php"
#line 458 "src/engine/stmtparser.y"
    function yy_r225(){
	$this->state->do_global($this->yystack[$this->yyidx + 0]->minor);
    }
#line 6155 "src/engine/stmtparser.php"
#line 509 "src/engine/stmtparser.y"
    function yy_r256(){ $this->_retvalue = array('public');     }
#line 6158 "src/engine/stmtparser.php"
#line 515 "src/engine/stmtparser.y"
    function yy_r260(){
	$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
	$this->_retvalue[] = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 6164 "src/engine/stmtparser.php"
#line 520 "src/engine/stmtparser.y"
    function yy_r261(){
	$this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 6169 "src/engine/stmtparser.php"
#line 524 "src/engine/stmtparser.y"
    function yy_r262(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor; $this->_retvalue[] = $this->yystack[$this->yyidx + 0]->minor;     }
#line 6172 "src/engine/stmtparser.php"
#line 527 "src/engine/stmtparser.y"
    function yy_r264(){ $this->_retvalue = array('name' => substr($this->yystack[$this->yyidx + -1]->minor,1));     }
#line 6175 "src/engine/stmtparser.php"
#line 528 "src/engine/stmtparser.y"
    function yy_r265(){
	$this->_retvalue = array('name' => substr($this->yystack[$this->yyidx + -3]->minor,1),'val' => $this->yystack[$this->yyidx + -1]->minor);
    }
#line 6180 "src/engine/stmtparser.php"
#line 535 "src/engine/stmtparser.y"
    function yy_r268(){
	$this->_retvalue = array('name' => $this->yystack[$this->yyidx + -3]->minor,'val' => $this->yystack[$this->yyidx + -1]->minor);
    }
#line 6185 "src/engine/stmtparser.php"
#line 552 "src/engine/stmtparser.y"
    function yy_r277(){
    $this->state->end_class();
    }
#line 6190 "src/engine/stmtparser.php"
#line 556 "src/engine/stmtparser.y"
    function yy_r278(){
    $this->_retvalue = $this->state->add_call((string)$this->yystack[$this->yyidx + -1]->minor,PC_Obj_MultiType::create_string('__construct'),$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6195 "src/engine/stmtparser.php"
#line 561 "src/engine/stmtparser.y"
    function yy_r280(){
    $this->_retvalue = $this->state->handle_list($this->yystack[$this->yyidx + -3]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6200 "src/engine/stmtparser.php"
#line 564 "src/engine/stmtparser.y"
    function yy_r281(){
    $this->_retvalue = $this->state->set_var($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6205 "src/engine/stmtparser.php"
#line 567 "src/engine/stmtparser.y"
    function yy_r282(){
    $this->_retvalue = $this->state->set_var($this->yystack[$this->yyidx + -3]->minor,$this->yystack[$this->yyidx + 0]->minor->get_type(),true);
    }
#line 6210 "src/engine/stmtparser.php"
#line 570 "src/engine/stmtparser.y"
    function yy_r283(){
    $this->_retvalue = clone $this->yystack[$this->yyidx + 0]->minor;
    }
#line 6215 "src/engine/stmtparser.php"
#line 573 "src/engine/stmtparser.y"
    function yy_r284(){
    $this->_retvalue = $this->state->handle_bin_assign_op('+',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6220 "src/engine/stmtparser.php"
#line 576 "src/engine/stmtparser.y"
    function yy_r285(){
    $this->_retvalue = $this->state->handle_bin_assign_op('-',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6225 "src/engine/stmtparser.php"
#line 579 "src/engine/stmtparser.y"
    function yy_r286(){
    $this->_retvalue = $this->state->handle_bin_assign_op('*',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6230 "src/engine/stmtparser.php"
#line 582 "src/engine/stmtparser.y"
    function yy_r287(){
    $this->_retvalue = $this->state->handle_bin_assign_op('**',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6235 "src/engine/stmtparser.php"
#line 585 "src/engine/stmtparser.y"
    function yy_r288(){
    $this->_retvalue = $this->state->handle_bin_assign_op('/',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6240 "src/engine/stmtparser.php"
#line 588 "src/engine/stmtparser.y"
    function yy_r289(){
    $this->_retvalue = $this->state->handle_bin_assign_op('.',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6245 "src/engine/stmtparser.php"
#line 591 "src/engine/stmtparser.y"
    function yy_r290(){
    $this->_retvalue = $this->state->handle_bin_assign_op('%',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6250 "src/engine/stmtparser.php"
#line 594 "src/engine/stmtparser.y"
    function yy_r291(){
    $this->_retvalue = $this->state->handle_bin_assign_op('&',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6255 "src/engine/stmtparser.php"
#line 597 "src/engine/stmtparser.y"
    function yy_r292(){
    $this->_retvalue = $this->state->handle_bin_assign_op('|',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6260 "src/engine/stmtparser.php"
#line 600 "src/engine/stmtparser.y"
    function yy_r293(){
    $this->_retvalue = $this->state->handle_bin_assign_op('^',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6265 "src/engine/stmtparser.php"
#line 603 "src/engine/stmtparser.y"
    function yy_r294(){
    $this->_retvalue = $this->state->handle_bin_assign_op('<<',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6270 "src/engine/stmtparser.php"
#line 606 "src/engine/stmtparser.y"
    function yy_r295(){
    $this->_retvalue = $this->state->handle_bin_assign_op('>>',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6275 "src/engine/stmtparser.php"
#line 609 "src/engine/stmtparser.y"
    function yy_r296(){
    $this->_retvalue = $this->state->handle_post_op('+',$this->yystack[$this->yyidx + -1]->minor);
    }
#line 6280 "src/engine/stmtparser.php"
#line 612 "src/engine/stmtparser.y"
    function yy_r297(){
    $this->_retvalue = $this->state->handle_pre_op('+',$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6285 "src/engine/stmtparser.php"
#line 615 "src/engine/stmtparser.y"
    function yy_r298(){
    $this->_retvalue = $this->state->handle_post_op('-',$this->yystack[$this->yyidx + -1]->minor);
    }
#line 6290 "src/engine/stmtparser.php"
#line 618 "src/engine/stmtparser.y"
    function yy_r299(){
    $this->_retvalue = $this->state->handle_pre_op('-',$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6295 "src/engine/stmtparser.php"
#line 621 "src/engine/stmtparser.y"
    function yy_r300(){
    $this->_retvalue = $this->state->handle_bin_op('||',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6300 "src/engine/stmtparser.php"
#line 624 "src/engine/stmtparser.y"
    function yy_r301(){
    $this->_retvalue = $this->state->handle_bin_op('&&',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6305 "src/engine/stmtparser.php"
#line 633 "src/engine/stmtparser.y"
    function yy_r304(){
    $this->_retvalue = $this->state->handle_bin_op('xor',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6310 "src/engine/stmtparser.php"
#line 636 "src/engine/stmtparser.y"
    function yy_r305(){
    $this->_retvalue = $this->state->handle_bin_op('|',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6315 "src/engine/stmtparser.php"
#line 639 "src/engine/stmtparser.y"
    function yy_r306(){
    $this->_retvalue = $this->state->handle_bin_op('&',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6320 "src/engine/stmtparser.php"
#line 642 "src/engine/stmtparser.y"
    function yy_r307(){
    $this->_retvalue = $this->state->handle_bin_op('^',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6325 "src/engine/stmtparser.php"
#line 645 "src/engine/stmtparser.y"
    function yy_r308(){
    $this->_retvalue = $this->state->handle_bin_op('.',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6330 "src/engine/stmtparser.php"
#line 648 "src/engine/stmtparser.y"
    function yy_r309(){
    $this->_retvalue = $this->state->handle_bin_op('+',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6335 "src/engine/stmtparser.php"
#line 651 "src/engine/stmtparser.y"
    function yy_r310(){
    $this->_retvalue = $this->state->handle_bin_op('-',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6340 "src/engine/stmtparser.php"
#line 654 "src/engine/stmtparser.y"
    function yy_r311(){
    $this->_retvalue = $this->state->handle_bin_op('*',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6345 "src/engine/stmtparser.php"
#line 657 "src/engine/stmtparser.y"
    function yy_r312(){
    $this->_retvalue = $this->state->handle_bin_op('**',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6350 "src/engine/stmtparser.php"
#line 660 "src/engine/stmtparser.y"
    function yy_r313(){
    $this->_retvalue = $this->state->handle_bin_op('/',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6355 "src/engine/stmtparser.php"
#line 663 "src/engine/stmtparser.y"
    function yy_r314(){
    $this->_retvalue = $this->state->handle_bin_op('%',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6360 "src/engine/stmtparser.php"
#line 666 "src/engine/stmtparser.y"
    function yy_r315(){
    $this->_retvalue = $this->state->handle_bin_op('<<',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6365 "src/engine/stmtparser.php"
#line 669 "src/engine/stmtparser.y"
    function yy_r316(){
    $this->_retvalue = $this->state->handle_bin_op('>>',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6370 "src/engine/stmtparser.php"
#line 672 "src/engine/stmtparser.y"
    function yy_r317(){
    $this->_retvalue = $this->state->handle_unary_op('+',$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6375 "src/engine/stmtparser.php"
#line 676 "src/engine/stmtparser.y"
    function yy_r319(){
    $this->_retvalue = $this->state->handle_unary_op('-',$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6380 "src/engine/stmtparser.php"
#line 680 "src/engine/stmtparser.y"
    function yy_r321(){
    $this->_retvalue = $this->state->handle_unary_op('!',$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6385 "src/engine/stmtparser.php"
#line 683 "src/engine/stmtparser.y"
    function yy_r322(){
    $this->_retvalue = $this->state->handle_unary_op('~',$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6390 "src/engine/stmtparser.php"
#line 686 "src/engine/stmtparser.y"
    function yy_r323(){
    $this->_retvalue = $this->state->handle_cmp('===',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6395 "src/engine/stmtparser.php"
#line 689 "src/engine/stmtparser.y"
    function yy_r324(){
    $this->_retvalue = $this->state->handle_cmp('!==',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6400 "src/engine/stmtparser.php"
#line 692 "src/engine/stmtparser.y"
    function yy_r325(){
    $this->_retvalue = $this->state->handle_cmp('==',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6405 "src/engine/stmtparser.php"
#line 695 "src/engine/stmtparser.y"
    function yy_r326(){
    $this->_retvalue = $this->state->handle_cmp('!=',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6410 "src/engine/stmtparser.php"
#line 698 "src/engine/stmtparser.y"
    function yy_r327(){
    $this->_retvalue = $this->state->handle_cmp('<',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6415 "src/engine/stmtparser.php"
#line 701 "src/engine/stmtparser.y"
    function yy_r328(){
    $this->_retvalue = $this->state->handle_cmp('<=',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6420 "src/engine/stmtparser.php"
#line 704 "src/engine/stmtparser.y"
    function yy_r329(){
    $this->_retvalue = $this->state->handle_cmp('>',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6425 "src/engine/stmtparser.php"
#line 707 "src/engine/stmtparser.y"
    function yy_r330(){
    $this->_retvalue = $this->state->handle_cmp('>=',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6430 "src/engine/stmtparser.php"
#line 710 "src/engine/stmtparser.y"
    function yy_r331(){
    $this->_retvalue = $this->state->handle_cmp('<>',$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6435 "src/engine/stmtparser.php"
#line 713 "src/engine/stmtparser.y"
    function yy_r332(){
    $this->_retvalue = $this->state->handle_instanceof($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6440 "src/engine/stmtparser.php"
#line 716 "src/engine/stmtparser.y"
    function yy_r333(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    }
#line 6445 "src/engine/stmtparser.php"
#line 720 "src/engine/stmtparser.y"
    function yy_r335(){
    $this->_retvalue = $this->state->handle_tri_op($this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6450 "src/engine/stmtparser.php"
#line 725 "src/engine/stmtparser.y"
    function yy_r338(){
    $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 6455 "src/engine/stmtparser.php"
#line 728 "src/engine/stmtparser.y"
    function yy_r339(){
    $this->_retvalue = $this->state->handle_cast('int',$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6460 "src/engine/stmtparser.php"
#line 731 "src/engine/stmtparser.y"
    function yy_r340(){
    $this->_retvalue = $this->state->handle_cast('float',$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6465 "src/engine/stmtparser.php"
#line 734 "src/engine/stmtparser.y"
    function yy_r341(){
    $this->_retvalue = $this->state->handle_cast('string',$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6470 "src/engine/stmtparser.php"
#line 737 "src/engine/stmtparser.y"
    function yy_r342(){
    $this->_retvalue = $this->state->handle_cast('array',$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6475 "src/engine/stmtparser.php"
#line 740 "src/engine/stmtparser.y"
    function yy_r343(){
    $this->_retvalue = $this->state->handle_cast('object',$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6480 "src/engine/stmtparser.php"
#line 743 "src/engine/stmtparser.y"
    function yy_r344(){
    $this->_retvalue = $this->state->handle_cast('bool',$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6485 "src/engine/stmtparser.php"
#line 746 "src/engine/stmtparser.y"
    function yy_r345(){
    $this->_retvalue = $this->state->handle_cast('unset',$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6490 "src/engine/stmtparser.php"
#line 749 "src/engine/stmtparser.y"
    function yy_r346(){ $this->_retvalue = null;     }
#line 6493 "src/engine/stmtparser.php"
#line 752 "src/engine/stmtparser.y"
    function yy_r349(){
    $this->_retvalue = PC_Obj_MultiType::create_string();
    }
#line 6498 "src/engine/stmtparser.php"
#line 762 "src/engine/stmtparser.y"
    function yy_r355(){
    $this->_retvalue = PC_Obj_MultiType::create_callable();
    $this->state->end_function();
    }
#line 6504 "src/engine/stmtparser.php"
#line 783 "src/engine/stmtparser.y"
    function yy_r363(){
	$this->state->set_func_param(new PC_Obj_Parameter($this->yystack[$this->yyidx + 0]->minor->get_name(),$this->yystack[$this->yyidx + 0]->minor->get_type()));
    }
#line 6509 "src/engine/stmtparser.php"
#line 790 "src/engine/stmtparser.y"
    function yy_r365(){
    $this->_retvalue = $this->state->get_var(PC_Obj_MultiType::create_string(substr($this->yystack[$this->yyidx + 0]->minor,1)),true);
    }
#line 6514 "src/engine/stmtparser.php"
#line 797 "src/engine/stmtparser.y"
    function yy_r367(){
    $fname = PC_Obj_MultiType::create_string($this->yystack[$this->yyidx + -1]->minor);
    $this->_retvalue = $this->state->add_call(null,$fname,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6520 "src/engine/stmtparser.php"
#line 801 "src/engine/stmtparser.y"
    function yy_r368(){
    $this->_retvalue = $this->state->add_call((string)$this->yystack[$this->yyidx + -3]->minor,$this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor,true);
    }
#line 6525 "src/engine/stmtparser.php"
#line 807 "src/engine/stmtparser.y"
    function yy_r370(){
	  $this->_retvalue = $this->state->add_call(null,$this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6530 "src/engine/stmtparser.php"
#line 811 "src/engine/stmtparser.y"
    function yy_r371(){ $this->_retvalue = 'static';     }
#line 6533 "src/engine/stmtparser.php"
#line 829 "src/engine/stmtparser.y"
    function yy_r384(){
	$this->_retvalue = PC_Obj_MultiType::create_string(substr($this->yystack[$this->yyidx + 0]->minor,1,-1));
    }
#line 6538 "src/engine/stmtparser.php"
#line 833 "src/engine/stmtparser.y"
    function yy_r385(){ $this->_retvalue = PC_Obj_MultiType::create_int($this->yystack[$this->yyidx + 0]->minor);     }
#line 6541 "src/engine/stmtparser.php"
#line 834 "src/engine/stmtparser.y"
    function yy_r386(){ $this->_retvalue = PC_Obj_MultiType::create_float($this->yystack[$this->yyidx + 0]->minor);     }
#line 6544 "src/engine/stmtparser.php"
#line 835 "src/engine/stmtparser.y"
    function yy_r387(){ $this->_retvalue = PC_Obj_MultiType::create_int($this->state->get_line());     }
#line 6547 "src/engine/stmtparser.php"
#line 836 "src/engine/stmtparser.y"
    function yy_r388(){ $this->_retvalue = PC_Obj_MultiType::create_string($this->state->get_file());     }
#line 6550 "src/engine/stmtparser.php"
#line 837 "src/engine/stmtparser.y"
    function yy_r389(){
	// TODO value
	$this->_retvalue = PC_Obj_MultiType::create_string();
    }
#line 6556 "src/engine/stmtparser.php"
#line 841 "src/engine/stmtparser.y"
    function yy_r390(){
  $this->_retvalue = $this->state->get_scope_part($this->yystack[$this->yyidx + 0]->minor);
    }
#line 6561 "src/engine/stmtparser.php"
#line 844 "src/engine/stmtparser.y"
    function yy_r391(){
	$this->_retvalue = PC_Obj_MultiType::create_string();
    }
#line 6566 "src/engine/stmtparser.php"
#line 857 "src/engine/stmtparser.y"
    function yy_r397(){
    if(strcasecmp($this->yystack[$this->yyidx + 0]->minor,"true") == 0)
        $this->_retvalue = PC_Obj_MultiType::create_bool(true);
    else if(strcasecmp($this->yystack[$this->yyidx + 0]->minor,"false") == 0)
        $this->_retvalue = PC_Obj_MultiType::create_bool(false);
    else
        $this->_retvalue = $this->state->get_constant_type($this->yystack[$this->yyidx + 0]->minor);
    }
#line 6576 "src/engine/stmtparser.php"
#line 865 "src/engine/stmtparser.y"
    function yy_r398(){
		$this->_retvalue = $this->state->handle_classconst_access(PC_Obj_MultiType::create_string($this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6581 "src/engine/stmtparser.php"
#line 868 "src/engine/stmtparser.y"
    function yy_r399(){
		$this->_retvalue = $this->state->handle_classconst_access($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 6586 "src/engine/stmtparser.php"
#line 875 "src/engine/stmtparser.y"
    function yy_r402(){ $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor->get_type();     }
#line 6589 "src/engine/stmtparser.php"
#line 892 "src/engine/stmtparser.y"
    function yy_r414(){
    $this->_retvalue = $this->state->handle_array_access($this->yystack[$this->yyidx + -3]->minor,$this->yystack[$this->yyidx + -1]->minor);
    }
#line 6594 "src/engine/stmtparser.php"
#line 897 "src/engine/stmtparser.y"
    function yy_r417(){
    $chain = array();
    $chain[] = array(
        'prop' => $this->yystack[$this->yyidx + -1]->minor,
        'args' => $this->yystack[$this->yyidx + 0]->minor
    );
    $this->_retvalue = $this->state->handle_object_prop_chain($this->yystack[$this->yyidx + -3]->minor,$chain);
    }
#line 6604 "src/engine/stmtparser.php"
#line 905 "src/engine/stmtparser.y"
    function yy_r418(){ $this->_retvalue = new PC_Obj_Variable('',$this->yystack[$this->yyidx + 0]->minor);     }
#line 6607 "src/engine/stmtparser.php"
#line 909 "src/engine/stmtparser.y"
    function yy_r421(){
    $chain = array();
    $chain[] = array(
        'prop' => $this->yystack[$this->yyidx + 0]->minor,
        'args' => null
    );
    $this->_retvalue = $this->state->handle_object_prop_chain($this->yystack[$this->yyidx + -2]->minor,$chain);
    }
#line 6617 "src/engine/stmtparser.php"
#line 918 "src/engine/stmtparser.y"
    function yy_r422(){
    $this->_retvalue = $this->state->get_var(PC_Obj_MultiType::create_string(substr($this->yystack[$this->yyidx + 0]->minor,1)));
    }
#line 6622 "src/engine/stmtparser.php"
#line 921 "src/engine/stmtparser.y"
    function yy_r423(){
    $this->_retvalue = $this->state->get_var($this->yystack[$this->yyidx + -1]->minor);
    }
#line 6627 "src/engine/stmtparser.php"
#line 924 "src/engine/stmtparser.y"
    function yy_r424(){
    $this->_retvalue = $this->state->get_var($this->yystack[$this->yyidx + 0]->minor->get_type());
    }
#line 6632 "src/engine/stmtparser.php"
#line 928 "src/engine/stmtparser.y"
    function yy_r425(){
    $this->_retvalue = $this->state->handle_field_access($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor->get_name());
    }
#line 6637 "src/engine/stmtparser.php"
#line 942 "src/engine/stmtparser.y"
    function yy_r433(){ $this->_retvalue = PC_Obj_MultiType::create_string($this->yystack[$this->yyidx + 0]->minor);     }
#line 6640 "src/engine/stmtparser.php"
#line 946 "src/engine/stmtparser.y"
    function yy_r436(){
    $this->_retvalue = array(array('type' => 'name','data' => PC_Obj_MultiType::create_string($this->yystack[$this->yyidx + 0]->minor)));
    }
#line 6645 "src/engine/stmtparser.php"
#line 949 "src/engine/stmtparser.y"
    function yy_r437(){
		$this->_retvalue = array(array('type' => 'name','data' => $this->yystack[$this->yyidx + -1]->minor));
    }
#line 6650 "src/engine/stmtparser.php"
#line 952 "src/engine/stmtparser.y"
    function yy_r438(){
    $this->_retvalue = array(array('type' => 'name','data' => $this->yystack[$this->yyidx + 0]->minor->get_type()));
    }
#line 6655 "src/engine/stmtparser.php"
#line 956 "src/engine/stmtparser.y"
    function yy_r439(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;
    $this->_retvalue[] = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 6661 "src/engine/stmtparser.php"
#line 960 "src/engine/stmtparser.y"
    function yy_r440(){
	$this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);
    }
#line 6666 "src/engine/stmtparser.php"
#line 971 "src/engine/stmtparser.y"
    function yy_r446(){
	$this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;
	$this->_retvalue->get_first()->set_array_type($this->yystack[$this->yyidx + 0]->minor['key'],$this->yystack[$this->yyidx + 0]->minor['val'],$this->yystack[$this->yyidx + 0]->minor['append']);
    }
#line 6672 "src/engine/stmtparser.php"
#line 975 "src/engine/stmtparser.y"
    function yy_r447(){
	$this->_retvalue = PC_Obj_MultiType::create_array();
	$this->_retvalue->get_first()->set_array_type($this->yystack[$this->yyidx + 0]->minor['key'],$this->yystack[$this->yyidx + 0]->minor['val'],$this->yystack[$this->yyidx + 0]->minor['append']);
    }
#line 6678 "src/engine/stmtparser.php"
#line 980 "src/engine/stmtparser.y"
    function yy_r448(){
	$this->_retvalue = array(
		'key' => $this->yystack[$this->yyidx + -2]->minor,
		'val' => $this->yystack[$this->yyidx + 0]->minor,
		'append' => false,
	);
    }
#line 6687 "src/engine/stmtparser.php"
#line 987 "src/engine/stmtparser.y"
    function yy_r449(){
	$this->_retvalue = array(
		'key' => 0,
		'val' => $this->yystack[$this->yyidx + 0]->minor,
		'append' => true,
	);
    }
#line 6696 "src/engine/stmtparser.php"

    /**
     * placeholder for the left hand side in a reduce operation.
     * 
     * For a parser with a rule like this:
     * <pre>
     * rule(A) ::= B. { A = 1; }
     * </pre>
     * 
     * The parser will translate to something like:
     * 
     * <code>
     * function yy_r0(){$this->_retvalue = 1;}
     * </code>
     */
    private $_retvalue;

    /**
     * Perform a reduce action and the shift that must immediately
     * follow the reduce.
     * 
     * For a rule such as:
     * 
     * <pre>
     * A ::= B blah C. { dosomething(); }
     * </pre>
     * 
     * This function will first call the action, if any, ("dosomething();" in our
     * example), and then it will pop three states from the stack,
     * one for each entry on the right-hand side of the expression
     * (B, blah, and C in our example rule), and then push the result of the action
     * back on to the stack with the resulting state reduced to (as described in the .out
     * file)
     * @param int Number of the rule by which to reduce
     */
    function yy_reduce($yyruleno)
    {
        //int $yygoto;                     /* The next state */
        //int $yyact;                      /* The next action */
        //mixed $yygotominor;        /* The LHS of the rule reduced */
        //PC_Stmt_yyStackEntry $yymsp;            /* The top of the parser's stack */
        //int $yysize;                     /* Amount to pop the stack */
        $yymsp = $this->yystack[$this->yyidx];
        if (self::$yyTraceFILE && $yyruleno >= 0 
              && $yyruleno < count(self::$yyRuleName)) {
            fprintf(self::$yyTraceFILE, "%sReduce (%d) [%s].\n",
                self::$yyTracePrompt, $yyruleno,
                self::$yyRuleName[$yyruleno]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (array_key_exists($yyruleno, self::$yyReduceMap)) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[$yyruleno]['lhs'];
        $yysize = self::$yyRuleInfo[$yyruleno]['rhs'];
        $this->yyidx -= $yysize;
        for ($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            /* If we are not debugging and the reduce action popped at least
            ** one element off the stack, then we can push the new element back
            ** onto the stack here, and skip the stack overflow test in yy_shift().
            ** That gives a significant speed improvement. */
            if (!self::$yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new PC_Stmt_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[$this->yyidx] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    /**
     * The following code executes when the parse fails
     * 
     * Code from %parse_fail is inserted here
     */
    function yy_parse_failed()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sFail!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
        /* Here code is inserted which will be executed whenever the
        ** parser fails */
    }

    /**
     * The following code executes when a syntax error first occurs.
     * 
     * %syntax_error code is inserted here
     * @param int The major type of the error token
     * @param mixed The minor type of the error token
     */
    function yy_syntax_error($yymajor, $TOKEN)
    {
#line 4 "src/engine/stmtparser.y"

    foreach ($this->yy_get_expected_tokens($yymajor) as $token) {
        $expect[] = self::$yyTokenName[$token];
    }
		throw new PC_Engine_Exception(
			$this->state->get_file(),$this->state->get_line(),$this->tokenName($yymajor),$TOKEN,$expect
		);
#line 6817 "src/engine/stmtparser.php"
    }

    /**
     * The following is executed when the parser accepts
     * 
     * %parse_accept code is inserted here
     */
    function yy_accept()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sAccept!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $stack = $this->yy_pop_parser_stack();
        }
        /* Here code is inserted which will be executed whenever the
        ** parser accepts */
    }

    /**
     * The main parser program.
     * 
     * The first argument is the major token number.  The second is
     * the token value string as scanned from the input.
     *
     * @param int   $yymajor      the token number
     * @param mixed $yytokenvalue the token value
     * @param mixed ...           any extra arguments that should be passed to handlers
     *
     * @return void
     */
    function doParse($yymajor, $yytokenvalue)
    {
//        $yyact;            /* The parser action. */
//        $yyendofinput;     /* True if we are at the end of input */
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */
        
        /* (re)initialize the parser, if necessary */
        if ($this->yyidx === null || $this->yyidx < 0) {
            /* if ($yymajor == 0) return; // not sure why this was here... */
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new PC_Stmt_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            array_push($this->yystack, $x);
        }
        $yyendofinput = ($yymajor==0);
        
        if (self::$yyTraceFILE) {
            fprintf(
                self::$yyTraceFILE,
                "%sInput %s\n",
                self::$yyTracePrompt,
                self::$yyTokenName[$yymajor]
            );
        }
        
        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL
                && !$this->yy_is_expected_token($yymajor)
            ) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if (self::$yyTraceFILE) {
                    fprintf(
                        self::$yyTraceFILE,
                        "%sSyntax Error!\n",
                        self::$yyTracePrompt
                    );
                }
                if (self::YYERRORSYMBOL) {
                    /* A syntax error has occurred.
                    ** The response to an error depends upon whether or not the
                    ** grammar defines an error token "ERROR".  
                    **
                    ** This is what we do if the grammar does define ERROR:
                    **
                    **  * Call the %syntax_error function.
                    **
                    **  * Begin popping the stack until we enter a state where
                    **    it is legal to shift the error symbol, then shift
                    **    the error symbol.
                    **
                    **  * Set the error count to three.
                    **
                    **  * Begin accepting and shifting new tokens.  No new error
                    **    processing will occur until three tokens have been
                    **    shifted successfully.
                    **
                    */
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[$this->yyidx]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit ) {
                        if (self::$yyTraceFILE) {
                            fprintf(
                                self::$yyTraceFILE,
                                "%sDiscard input token %s\n",
                                self::$yyTracePrompt,
                                self::$yyTokenName[$yymajor]
                            );
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0
                            && $yymx != self::YYERRORSYMBOL
                            && ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                        ) {
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor==0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    /* YYERRORSYMBOL is not defined */
                    /* This is what we do if the grammar does not define ERROR:
                    **
                    **  * Report an error message, and throw away the input token.
                    **
                    **  * If the input token is $, then fail the parse.
                    **
                    ** As before, subsequent error messages are suppressed until
                    ** three input tokens have been successfully shifted.
                    */
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }            
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}
